[{"url":"/2020/02/09/React-Native-ExpoKit-Notification/boostnote/","content":"{\n  \"folders\": [],\n  \"version\": \"1.0\"\n}\n"},{"title":"iOS Simulator from the Command Line","url":"/2020/02/05/iOS-Simulator-from-the-Command-Line/","content":"\n`xcrun simctl` is command utils to control iOS simulator, just like  [adb](https://developer.android.com/studio/command-line/adb?hl=en) for Android. Sometimes, in CI server script, We need these simulator-integration command to interact with simulators and run test cases. \n\n If we run `xcrun simctl help`, here are some subcommands. When successful, most of these commands exit with 0; when failed, most exit with a non-zero number. \n\n```\nSubcommands:\n        create              Create a new device.\n        clone               Clone an existing device.\n        upgrade             Upgrade a device to a newer runtime.\n        delete              Delete spcified devices, unavailable devices, or all devices.\n        pair                Create a new watch and phone pair.\n        unpair              Unpair a watch and phone pair.\n        pair_activate       Set a given pair as active.\n        erase               Erase a device's contents and settings.\n        boot                Boot a device.\n        shutdown            Shutdown a device.\n        rename              Rename a device.\n        getenv              Print an environment variable from a running device.\n        openurl             Open a URL in a device.\n        addmedia            Add photos, live photos, videos, or contacts to the library of a device.\n        install             Install an app on a device.\n        uninstall           Uninstall an app from a device.\n        get_app_container   Print the path of the installed app's container\n        launch              Launch an application by identifier on a device.\n        terminate           Terminate an application by identifier on a device.\n        spawn               Spawn a process by executing a given executable on a device.\n        list                List available devices, device types, runtimes, or device pairs.\n        icloud_sync         Trigger iCloud sync on a device.\n        pbsync              Sync the pasteboard content from one pasteboard to another.\n        pbcopy              Copy standard input onto the device pasteboard.\n        pbpaste             Print the contents of the device's pasteboard to standard output.\n        help                Prints the usage for a given subcommand.\n        io                  Set up a device IO operation.\n        diagnose            Collect diagnostic information and logs.\n        logverbose          enable or disable verbose logging for a device\n        status_bar          Set or clear status bar overrides\n```\nJust see I can do a lot of things with these command. If wanting to know more about a specific subcommand, we can use `xcrun simctl help [subcommand]` to seek help. Like, `xcrun simctl help boot` \n\n\n### simulator info \n\nuse `xcrun simctl list` to see all the simulator information. We can get a list of device types, a list of info of runtime names, a list of device names. \n  \n```\n== Device Types ==\niPhone 11 Pro (com.apple.CoreSimulator.SimDeviceType.iPhone-11-Pro)\niPhone 11 Pro Max (com.apple.CoreSimulator.SimDeviceType.iP\n\n== Runtimes ==\niOS 13.3 (13.3 - 17C45) - com.apple.CoreSimulator.SimRuntime.iOS-13-3 \n\n== Devices ==\n-- iOS 13.3 --\niPhone 11 Pro Max (34C9AC6A-577D-4CEF-8B10-20011DCFBA27) (Shutdown) \n```\n\nUse `xcrun simctl list device` to see the list of device info. Or use a device name to get paired devices' info, like name, uuid, and status. For example,  \n\n```\nxcrun simctl list devices \"iPhone 11 Pro Max\"\n```\n\n```\n== Devices ==\n-- iOS 12.4 --\n-- iOS 13.3 --\n    iPhone 11 Pro Max (34C9AC6A-577D-4CEF-8B10-20011DCFBA27) (Shutdown) \n-- tvOS 13.3 --\n-- watchOS 6.1 --\n-- Unavailale: com.apple.CoreSimulator.SimRuntime.iOS-13-0 --\n    iPhone 11 Pro Max (893827B6-91E0-417C-A179-68343F695040) (Creating) (unavailable, runtime profile not found)\n-- Unavailable: com.apple.CoreSimulator.SimRuntime.iOS-13-1 --\n    iPhone 11 Pro Max (F4B573E0-4106-4FF2-ADA8-16DCC053026C) (Shutdown) (unavailable, runtime profile not found)\n-- Unavailable: com.apple.CoreSimulator.SimRuntime.iOS-13-2 --\n    iPhone 11 Pro Max (B63C96BD-1CE2-499B-8387-3B8AEBF50931) (Creating) (unavailable, runtime profile not found)\n```\n\n\n\n### Create a custom simulator\n\n\n`xcrun simctl create <name> <device type> <runtime>`\nFor example, if I would like to create a iPhone 11 Pro Max with iOS 13.3, I can use the follow command.\n\n```\nxcrun simctl create \"ry\" \"iPhone 11 Pro Max\" iOS13.3  \nBE9A72F0-5793-447B-BEC4-63A73242BED5 \n```\n\n\n\nThe `uuid` of the new simulator is `BE9A72F0-5793-447B-BEC4-63A73242BED5`, which is output in standard out. And errors comes to standard error. \n\n> Tips: you should use available runtime, or you will get an error of `invalid runtime: xxx`. \n\nIf in shell scrip, we can capture the new device's name using environment variable:\n\n```\nNEW_DEVICE=$(xcrun simctl create \"Test Phone\" \"iPhone XR\" iOS13.0)\necho \"ü§ñ Created ${NEW_DEVICE}\"\nü§ñ Created BE9A72F0-5793-447B-BEC4-63A73242BED5\n```\n\nAnother way to create a simulator using GUI is to go to `Window` -> `Devices and Simulators` \n\n![create](create.png)\n ¬†¬†\n### Boot a simulator \n\nBoot a device using `$uuid` \n\n`xcrun simctl boot BE9A72F0-5793-447B-BEC4-63A73242BED5` \n\nUse `simctl shutdown <device>` to shutdown a device. \n\n### Install/Uninstall app \n\n`xcrun simctl install <device> <path>`. We use this command to install an app on a device. \n\n```\n‚ûú  xcrun simctl install booted ./demo.app\n```\n\n `booted` is the alias name of the booted device. We can also use `uuid` of a device.\n\n use ` simctl uninstall <device> <app bundle identifier>` to uninstall an app. like \n `xcrun simctl uninstall booted com.rong.lan.CubeTransitionAnimationDemo`  \n\n### Launch \n\n`xcrun simctl launch <device> <bundle> <arguments>`. \n\nLaunch command is used to launch a application in your simulator device.\n\n```\nxcrun simctl launch booted com.apple.example -MyDefaultKey YES\n```\n\n`com.apple.example` is bundle id of the application. \n\nIf we use `--console-pty`,  launch command will connect the standard output and error of the application to the terminal line.\n\n```\n‚ûú  xcrun simctl launch --console-pty booted com.rong.lan.CubeTransitionAnimationDemo\n\ncom.rong.lan.CubeTransitionAnimationDemo: 98045\n2020-02-09 10:38:28.594 3DCubeTransitionAnimationDemo[98045:931065] gesture end translation x -281.000000; velocity-1056.111584\n2020-02-09 10:38:28.594 3DCubeTransitionAnimationDemo[98045:931065] timer current tx -281.000332\n2020-02-09 10:38:28.611 3DCubeTransitionAnimationDemo[98045:931065] timer current tx -285.030635\n2020-02-09 10:38:28.627 3DCubeTransitionAnimationDemo[98045:931065] timer current tx -289.060938\n```\n\n\n Use `xcrun simctl terminate <device> <bundle>` to terminate an application by identifier on a device.\n### Container Path \n\n`xcrun simctl simctl get_app_container <device> <app bundle identifier> [<container>]`  command is used to get the path of the installed app's container.  \n\n```\ncontainer   Optionally specify the container. Defaults to app.\n  app                 The .app bundle\n  data                The application's data container\n  groups              The App Group containers\n  <group identifier>  A specific App Group container\n```\n\n\nFor example\n\n```\n‚ûú xcrun simctl get_app_container booted com.rong.lan.CubeTransitionAnimationDemo \n~/Library/Developer/CoreSimulator/Devices/BE9A72F0-5793-447B-BEC4-63A73242BED5/data/Containers/Bundle/Application/135A7B46-DE38-47EC-9871-D1F3615E9CE5/3DCubeTransitionAnimationDemo.app\n‚ûú xcrun simctl get_app_container booted com.rong.lan.CubeTransitionAnimationDemo data \n~/Library/Developer/CoreSimulator/Devices/BE9A72F0-5793-447B-BEC4-63A73242BED5/data/Containers/Data/Application/10D64231-20B5-4DFE-B1E9-277AD9C02C4F\n```\n\n### Spawn \n\nSpawn command will pause xspawn, a process inside the simulator environment. \n\n```\nxcrun simctl spawn booted defaults write com.example.app ResetDatabase -bool YES\n```\nHere, we use `defaults` utils, because we already have a booted device `BE9A72F0-5793-447B-BEC4-63A73242BED5`, we don't have to specify the device. \n\n`com.example.app` is bundle id of my application. We reset `ResetDatabase` to YES. \nThis is a handy way to change the user defaults for the application before its running.  \n\n### Log Stream \n\nspwan command would work with log stream utility. We can pass a predicate and filter the log output. Here the predicate is `senderImagePath CONTAINS \"nsurlsessiond\"`. We can debug something wrong with URL session. \n\n```\nxcrun simctl spawn booted log stream --predicate 'senderImagePath CONTAINS \"nsurlsessiond\"'\n```\n![spwan](spawn_log)\n\nAlso, we can use different predicates to filter what we want.  \n\n```\nxcrun simctl spawn booted log stream ‚Äî predicate ‚ÄòprocessImagePath endswith ‚Äúxxx‚Äù‚Äô\nxcrun simctl spawn booted log stream ‚Äî predicate ‚ÄòeventMessage contains ‚Äúerror‚Äù and messageType == info‚Äô\n\n```\n\n\n### Dignose \n\nIn a auto-test system, if having some kind of issue, by using this command, you can not only collect logs on disk but also capture ephemeral logging and dump system state. \n\n```\n‚ûú  xcrun simctl diagnose -l                              \nWriting to /private/tmp/simctl_diagnose_2020_02_09.10-10-56+0800\nGetting Simulator component versions...\nCollecting CoreSimulator logs...\nCollecting device information (this may take some time)...\nThis operation will time-out after 300 seconds.\nGathering 15 crash reports...\nCompressing Archive...\nSuccessfully wrote simctl diagnose archive to '/private/tmp/simctl_diagnose_2020_02_09.10-10-56+0800.tar.gz'\n```\n\n![diagnose](diagnose.png)\n\n### clone \nClone is a very powerful command. See details in [wwdc2019/418](https://developer.apple.com/videos/play/wwdc2019/418/).  \n\n`xcrun simctl clone <device> <clone name>`.  You can copy your custom device using this command. \n\n```\n// boot base simulator ry\n‚ûú xcrun simctl boot ry   \n‚ûú xcrun simctl install ry ./demo.app\n// Must shutdown it before clone \n‚ûú xcrun simctl shutdown all \n‚ûú xcrun simctl clone ry ry-1  \n‚ûú xcrun simctl clone ry ry-2 \n‚ûú xcrun simctl boot ry-1 && xcrun simctl boot ry-2 \n```\n\n\nTwo new devices are created with the same contents. \n\n![clone](clone.png)\n\n\n### Other useful commands\n\n```\n// Open a URL in a device.\nsimctl openurl <device> <URL>\n// add a photo or movie to the Photos library of the specified simulator \nxcrun simctl addmedia <device> <file1> <file2>\n// Set up a device IO operation. screenshot or recordVideo \nxcrun simctl io <device> screenshot <output.png>\nxcrun simctl io <device> recordVideo <file>\n\n```\n\n> Ref: \n> https://developer.apple.com/videos/play/wwdc2019/418/\n> https://www.iosdev.recipes/simctl/\n> https://nshipster.com/simctl/ \n","tags":["Simulator"],"categories":["iOS"]},{"title":"Understand onViewableItemsChanged in FlatList","url":"/2020/01/21/onViewableItemsChanged/","content":"\n## What is onViewableItemsChanged\n\n`onViewableItemsChanged` is a props in [VirtualizedList](https://facebook.github.io/react-native/docs/flatlist#onviewableitemschanged) and it's subclass [FlatList]((https://facebook.github.io/react-native/docs/flatlist#onviewableitemschanged)). When we scroll a FlatList, the items showed on the screen change. This function is called telling what current `viewableItems` are and what `changed` items are. \n\nThis function should be used together with [viewabilityConfig](https://facebook.github.io/react-native/docs/virtualizedlist#viewabilityconfig). A specific `onViewableItemsChanged` will be called when its corresponding `ViewabilityConfig`'s conditions are met.\n\nHere is [ViewabilityConfig](https://facebook.github.io/react-native/docs/flatlist#viewabilityconfig) \n```js \nexport type ViewabilityConfig = {\n  /**\n   * Minimum amount of time (in milliseconds) that an item must be physically viewable before the\n   * viewability callback will be fired. A high number means that scrolling through content without\n   * stopping will not mark the content as viewable.\n   */\n  minimumViewTime?: number,\n\n  /**\n   * Percent of viewport that must be covered for a partially occluded item to count as\n   * \"viewable\", 0-100. Fully visible items are always considered viewable. A value of 0 means\n   * that a single pixel in the viewport makes the item viewable, and a value of 100 means that\n   * an item must be either entirely visible or cover the entire viewport to count as viewable.\n   */\n  viewAreaCoveragePercentThreshold?: number,\n\n  /**\n   * Similar to `viewAreaPercentThreshold`, but considers the percent of the item that is visible,\n   * rather than the fraction of the viewable area it covers.\n   */\n  itemVisiblePercentThreshold?: number,\n\n  /**\n   * Nothing is considered viewable until the user scrolls or `recordInteraction` is called after\n   * render.\n   */\n  waitForInteraction?: boolean,\n|};\n```\nHere is the type of `onViewableItemsChanged`: \n```js\n /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  \nexport type ViewToken = {\n  item: any,\n  // The key of this item\n  key: string,\n  index: ?number,\n  // indicated whether this item is viewable or not\n  isViewable: boolean,\n  section?: any,\n  ...\n};\n```\n## How to use it \n\n```js\n  viewabilityConfig = {\n    waitForInteraction: true,\n    viewAreaCoveragePercentThreshold: 95,\n    itemVisiblePercentThreshold: 75\n  }\n\n  onViewableItemsChanged = ({viewableItems, changed}) => {\n    console.log(\"Visible items are\", viewableItems);\n    console.log(\"Changed in this iteration\", changed);\n  };\n\n  render() {\n    return (\n      <FlatList\n        style={{\n          paddingTop: 60\n        }}\n        viewabilityConfig={this.viewabilityConfig}\n        onViewableItemsChanged={this.onViewableItemsChanged}\n        data={this._items}\n        renderItem={this._renderItem}\n        keyExtractor={item => item.id}\n      />\n    )\n  }\n```\n\n## The Implementation \n\n### 1. Overview \n\n\n![a0336b02.png](/img/9af4f3b0-fe64-4a98-b94e-d456f65ae7cc/a0336b02.png)\n\n### 2. The Viewable Region \n\n1. Get VirtualizedList layout info from the `nativeEvent` using the `onScroll` func, and store these info in `scrollMetrics` object. \n\n\n```js\nconst timestamp = e.timeStamp;\nlet visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\nlet contentLength = this._selectLength(e.nativeEvent.contentSize);\nlet offset = this._selectOffset(e.nativeEvent.contentOffset);\nlet dOffset = offset - this._scrollMetrics.offset;\n\n// ...\n\n this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n\n```\n\n\n```js\n_selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n}\n\n_selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n}\n\n```\n\n\n![5d152b82.png](/img/9af4f3b0-fe64-4a98-b94e-d456f65ae7cc/5d152b82.png)\n\n## ViewabilityHelperCallbackTuple\n\n```js\n_viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n```\n\n`ViewabilityHelperCallbackTuple` is an array storing `ViewabilityHelper/onViewableItemsChanged` pairs\n\n```js\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n```\n\nIf a developer defines [viewabilityConfigCallbackPairs](https://facebook.github.io/react-native/docs/flatlist#viewabilityconfigcallbackpairs),  each `viewabilityConfig` will be used to initialize a `ViewabilityHelper` object. \n\n[ref code](https://github.com/facebook/react-native/blob/84adc85523770ebfee749a020920e0b216cf69f8/Libraries/Lists/VirtualizedList.js#L743). \n\n```js\n if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n```\n\nHere, we should pay attention on `ViewabilityHelper`, which is `\na utility class for calculating viewable items based on the viewabilityConfig and metrics, like scroll position and layout.\n`\nFor a `VirtualizedList`, there would be multiple `ViewabilityHelper` objects in `_viewabilityTuples`,  containing different `viewabilityConfig` to handle different viewability conditions.  \n\nThere are some important props in `ViewabilityHelper`. \n\n```js\nclass ViewabilityHelper {\n  _config: ViewabilityConfig;\n  _hasInteracted: boolean = false;\n  /* A set of `timeoutID`, used for memory management */\n  _timers: Set<number> = new Set();\n  // Indexs of the viewable items\n  _viewableIndices: Array<number> = [];\n  // A map for viewable items\n  _viewableItems: Map<string, ViewToken> = new Map();\n}\n\n```\n\nThere is a func `_updateViewableItems`,  which is called in many scenarios, like `onScroll` method. It will call `viewabilityHelper.onUpdate` to calculate the viewable items. \n\n```js\n_updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        // contentOffset of the list \n        this._scrollMetrics.offset,\n        // üåü viewportHeight \n        this._scrollMetrics.visibleLength, \n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n\n```\n- `this._scrollMetrics.visibleLength` is used as `viewportHeight`\n- `this._createViewToken` is used to construct a `ViewToken` object, which contains `item` data, `index`, `key` and viewability of the `item`. \n\n- [this._getFrameMetrics](1864) will get frame of the cell by index from the `this._frames` map, and its shape is \n\n```js\n{ [cellKey]: {\n      // offset of the item cell\n      offset: number, \n      // length of the item cell in the scrolling direction \n      length: number, \n      index: number,\n      inLayout: boolean,\n    }\n}\n```\n\n- The shape of the `this.state` is\n\n```js\ntype State = {\n  // The range of the rendered items, \n  // used for the optimization to reduce the scan size\n  first: number,\n  last: number,\n  ...\n};\n```\n\n### 3. How to get viewable items\n \nIn `onUpdate` method, it calls `computeViewableItems` to get `viewableIndices` \n\n#### computeViewableItems\n\nIn `computeViewableItems`, it only go through the specific range of items, [first, last]. If a item is viewable, it will be stored in an array named `viewableIndices`. \n\n```js\n  for (let idx = first; idx <= last; idx++) {\n      const metrics = getFrameMetrics(idx);\n      if (!metrics) {\n        continue;\n      }\n      // The top postion of current item cell, relative to the screen \n      const top = metrics.offset - scrollOffset;\n      // The bottom position of current item cell \n      const bottom = top + metrics.length;\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n        if (\n          _isViewable(\n            viewAreaMode,\n            viewablePercentThreshold,\n            top,\n            bottom,\n            viewportHeight,\n            metrics.length,\n          )\n        ) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n    return viewableIndices;\n  }\n```\n![layout.png](/img/9af4f3b0-fe64-4a98-b94e-d456f65ae7cc/3252d60e.png)\n\n### 4. The condition for viewable item \n\n An item is said to be in a \"viewable\" state when any of the following\n  is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n is true):\n \n1.  Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n   visible in the view area >= `itemVisiblePercentThreshold`.\n When it comes to the fraction of the item visible in the view area, \n there are 5 cases we need to care about when the height of a item is small than the viewportHeight\n    \n  ![partial](viewable-partial.png)\n2. Entirely visible on screen when the height of a item is bigger than the viewportHeight. \n\n![7c4f2df0.png](entire-viewable.png)\n\n[ref](https://github.com/facebook/react-native/blob/84adc85523770ebfee749a020920e0b216cf69f8/Libraries/Lists/ViewabilityHelper.js#L64)\n\n```js\nfunction _isViewable(\n  viewAreaMode: boolean,\n  viewablePercentThreshold: number,\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n  itemLength: number,\n): boolean {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    const pixels = _getPixelsVisible(top, bottom, viewportHeight);\n    const percent =\n      100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n): number {\n  const visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n): boolean {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n```\n[code here](https://github.com/facebook/react-native/blob/84adc85523770ebfee749a020920e0b216cf69f8/Libraries/Lists/ViewabilityHelper.js#L300)\n\n### Timer and Schedule \nInside [onUpdate func in ViewabilityHelper](https://github.com/facebook/react-native/blob/84adc85523770ebfee749a020920e0b216cf69f8/Libraries/Lists/ViewabilityHelper.js#L228), if the user defines `minimumViewTime` value, the `_onUpdateSync` should be scheduled to be called, using `setTimeout`.\n\n```js\n this._viewableIndices = viewableIndices;\n if (this._config.minimumViewTime) {\n      const handle = setTimeout(() => {\n        this._timers.delete(handle);\n        this._onUpdateSync(\n          viewableIndices,\n          onViewableItemsChanged,\n          createViewToken,\n        );\n      }, this._config.minimumViewTime);\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(\n        viewableIndices,\n        onViewableItemsChanged,\n        createViewToken,\n      );\n    }\n```\n\nAnd, in the [_onUpdateSync](https://github.com/facebook/react-native/blob/84adc85523770ebfee749a020920e0b216cf69f8/Libraries/Lists/ViewabilityHelper.js#L267) func, it will filter out indices that have gone out of view.\n\n\n```js\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii =>\n      this._viewableIndices.includes(ii),\n    );\n\n```\n\n\n## Calculate changed items \n\nThere is a `preItems` array, it stores the previous visible items. Now we have a `nextItems` array, we got to know how to the `changed` array by extract the changed items. \n\nFor example, if scrolling down, some viewable items will become out of the screen, some hidden items will become viewable. \n![99830c30.png](/img/9af4f3b0-fe64-4a98-b94e-d456f65ae7cc/99830c30.png)\n\n```js\n_onUpdateSync(\n    viewableIndicesToCheck,\n    onViewableItemsChanged,\n    createViewToken,\n  ) {\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii =>\n      this._viewableIndices.includes(ii),\n    );\n    const prevItems = this._viewableItems;\n    const nextItems = new Map(\n      viewableIndicesToCheck.map(ii => {\n        const viewable = createViewToken(ii, true);\n        return [viewable.key, viewable];\n      }),\n    );\n\n    const changed = [];\n    for (const [key, viewable] of nextItems) {\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n    for (const [key, viewable] of prevItems) {\n      if (!nextItems.has(key)) {\n        changed.push({...viewable, isViewable: false});\n      }\n    }\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed,\n        viewabilityConfig: this._config,\n      });\n    }\n  }\n}\n```","tags":["Dive into React Native"],"categories":["React Native"]},{"title":"Gaussian Filter","url":"/2019/07/12/Gaussian-Filter/","content":"\nÈ´òÊñØÂáΩÊï∞Âú®Â≠¶ÊúØÈ¢ÜÂüüËøêÁî®ÁöÑÈùûÂ∏∏ÂπøÊ≥õ„ÄÇ ÂÜôÂ∑•Á®ã‰∫ßÂìÅÁöÑÊó∂ÂÄôÔºåÁªèÂ∏∏Áî®ÂÆÉÊù•ÂéªÈô§ÂõæÁâáÊàñËÄÖËßÜÈ¢ëÁöÑÂô™Èü≥ÔºåÂπ≥ÊªëÂõæÁâá, BlurÂ§ÑÁêÜ„ÄÇÊàë‰ª¨‰ªäÂ§©Êù•ÁúãÁúãÈ´òÊñØÊª§Ê≥¢, Gaussian Filter„ÄÇ \n**1DÁöÑÈ´òÊñØÂáΩÊï∞**\n‰∏ÄÁª¥ÁöÑÈ´òÊñØÂáΩÊï∞ÔºàÊàñËÄÖÂè´Ê≠£ÊÄÅÂàÜÂ∏ÉÔºâÊñπÁ®ãË∑üÂõæÂΩ¢Â¶Ç‰∏ã: \n$$G(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{x^2}{2\\sigma^2}}$$\n![image.png](/img/Gaussian-Filter/gaussian.png)\n\n$\\mu$ÊòØÂùáÂÄºÔºõ$\\sigma$ ÊòØÊ†áÂáÜÊñπÂ∑Æ„ÄÇÂÆÉÊúâ‰∏™ÈáçË¶ÅÁâπÁÇπÊòØ -$\\sigma$ Âà∞+$\\sigma$ ‰πãÈó¥ÁöÑG(x)‰∏éxËΩ¥Âõ¥ÊàêÁöÑÈù¢ÁßØÂç†ÂÖ®ÈÉ®Èù¢ÁßØÁöÑ68.2%.  -2$\\sigma$ Âà∞+2$\\sigma$‰πãÈó¥ÁöÑÈù¢ÁßØÂç†95%„ÄÇ-3$\\sigma$ Âà∞+3$\\sigma$‰πãÈó¥ÁöÑÈù¢ÁßØÂç†99.7%„ÄÇ\nÂ¶ÇÊûúÊàë‰ª¨Áªô-3$\\sigma$ Âà∞+3$\\sigma$Âå∫Èó¥, ÂÆÉÂá†‰πéÂåÖÊã¨‰∫ÜÊâÄÊúâÂèØËÉΩÁöÑÁÇπ„ÄÇËøô‰∏™ÁâπÊÄßÂØπFilter kernelÁöÑÁîüÊàêÂæàÈáçË¶Å„ÄÇ\n\n\n**2DÁöÑÈ´òÊñØÂáΩÊï∞**\n$$G(x, y) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{x^2 + y^2}{2\\sigma^2}}$$\n\n![image.png](/img/Gaussian-Filter/2d-gaussian.png)\n\n\n**ÊâÄË∞ìÈ´òÊñØÊª§Ê≥¢Êìç‰ΩúÔºåÂÖ∂ÂÆûÂ∞±ÊòØÁî®È´òÊñØÂáΩÊï∞ÂØπimageÂÅöÂç∑ÁßØËÆ°ÁÆó**„ÄÇ‰ΩÜ‰∏ÄËà¨ÂõæÂÉèÂú®ËÆ°ÁÆóÊú∫‰∏≠‰∏ÄËà¨ÊòØÁ¶ªÊï£ÁöÑ3DÁü©ÈòµÔºåËÄåÈ´òÊñØÂáΩÊï∞ÊòØËøûÁª≠ÂáΩÊï∞ÔºåÊâÄ‰ª•Êàë‰ª¨Ë¶Å‰ªéËøûÁª≠È´òÊñØÂáΩÊï∞‰∏≠ÈááÊ†∑ÁîüÊàêÁ¶ªÊï£ÁöÑ2DÁü©ÈòµÔºåÂç≥Gaussian Filter Kernel„ÄÇ Êàë‰ª¨ÂèØ‰ª•ÊéßÂà∂KernalÁöÑsizeÔºåËÆ©ÂÆÉÁöÑÁÇπÈÉΩËêΩÂú®-3$\\sigma$ Âà∞+3$\\sigma$Âå∫Èó¥ÂÜÖ„ÄÇ\n### ÁîüÊàêÈ´òÊñØkernel \n\n```c++\n// Function to create Gaussian filter; sigma is standard deviation\nMatrix getGaussian(int height, int width, double sigma)\n{\n    Matrix kernel(height, Array(width));\n    // sum is for normalization \n    double sum=0.0;\n    int i,j;\n    \n   // generating the kernel \n    for (i=0 ; i<height ; i++) {\n        for (j=0 ; j<width ; j++) {\n            // using gaussian function to generate gaussian filter \n            kernel[i][j] = exp(-(i*i+j*j)/(2*sigma*sigma))/(2*M_PI*sigma*sigma);\n            sum += kernel[i][j];\n        }\n    }\n   \n   // normalising the Kernel \n    for (i=0 ; i<height ; i++) {\n        for (j=0 ; j<width ; j++) {\n            kernel[i][j] /= sum;\n        }\n    }\n\n    return kernel;\n}\n```\n[‰ª£Á†ÅÊù•Ê∫ê](https://gist.github.com/OmarAflak/aca9d0dc8d583ff5a5dc16ca5cdda86a)\nÊØîÂ¶ÇÔºåÊàë‰ª¨Áî®È´òÊñØÂáΩÊï∞ÁîüÊàê‰∫Ü‰∏Ä‰∏™5x5Ôºå $\\sigma$ÊòØ1ÁöÑÈ´òÊñØÊ†∏2DÁü©Èòµ:\n![image.png](/img/Gaussian-Filter/gaussian_matrix.png)\nÂÆÉÊúâÂá†‰∏™ÁâπÁÇπÔºö \n1. ÊúÄ‰∏≠Èó¥ÁöÑÂÄºÊúÄÂ§ßÔºåÂÄºÂêëÂë®Âõ¥ÈÄíÂáè\n2. $\\sigma$Ë∂äÂ§ßÔºåÈ´òÊñØÂáΩÊï∞ÁöÑÂ≥∞Ë∂äÂÆΩÔºå‰∏¥Êé•ÁöÑÊï∞ÂÄºÂ∑ÆË∂äÂ§ß\n\n### ÂØπÂõæÁâáÂ∫îÁî®È´òÊñØFilter\nÂØπÊüê‰∏™ÂÉèÁ¥†ÁÇπimage[i][j]ÔºåFitlerÂØπÂéüÂõæÂØπÂ∫îÁöÑÂÉèÁ¥†ÁÇπÂÅöÁÇπ‰πòÔºåÁõ∏Âä†„ÄÇ ÁîüÊàêÊñ∞ÁöÑÂÄº„ÄÇ\n![https://www.youtube.com/watch?v=C_zFhWdM4ic](/img/Gaussian-Filter/convoltion.gif)\n[ÊùêÊñôÊù•Ê∫ê](https://www.youtube.com/watch?v=C_zFhWdM4ic)\n```c++\nImage applyFilter(Image &image, Matrix &filter){\n    assert(image.size()==3 && filter.size()!=0);\n\n    int height = image[0].size();\n    int width = image[0][0].size();\n    int filterHeight = filter.size();\n    int filterWidth = filter[0].size();\n    int newImageHeight = height-filterHeight+1;\n    int newImageWidth = width-filterWidth+1;\n    int d,i,j,h,w;\n\n    Image newImage(3, Matrix(newImageHeight, Array(newImageWidth)));\n    \n   // iter the image pixel\n    for (d=0 ; d<3 ; d++) {\n        for (i=0 ; i<newImageHeight ; i++) {\n            for (j=0 ; j<newImageWidth ; j++) {\n                // using filter convolute the image matrix\n                for (h=i ; h<i+filterHeight ; h++) {\n                    for (w=j ; w<j+filterWidth ; w++) {\n                        newImage[d][i][j] += filter[h-i][w-j]*image[d][h][w];\n                    }\n                }\n            }\n        }\n    }\n\n    return newImage;\n}\n```\nÂ¶Ç‰∏ãÂõæÔºåÂõæÁâáË¢´Âπ≥ÊªëÂ§ÑÁêÜ‰∫Ü„ÄÇ\n![image.png](/img/Gaussian-Filter/blur_image.png)\n\n#### More: \n[https://gist.github.com/OmarAflak/aca9d0dc8d583ff5a5dc16ca5cdda86a](https://gist.github.com/OmarAflak/aca9d0dc8d583ff5a5dc16ca5cdda86a)\n\n","tags":["CV"],"categories":["Algorithm"]},{"title":"792. Number of Matching Subsequences","url":"/2019/07/06/792-Number-of-Matching-Subsequences/","content":"\n## [È¢òÁõÆ](https://leetcode-cn.com/problems/number-of-matching-subsequences/)\n\n## Solution 1 \nÊÄùË∑ØÔºöÂ≠òÂÇ® + ‰∫åÂàÜÊü•Êâæ\n1. È¶ñÂÖàÂ∞ÜÂ≠óÁ¨¶‰∏ÄÈõÜÂØπÂ∫îÁöÑ‰∏ãÊ†áÂ≠òÂÇ®Âú®26 * nÁöÑ‰∫åÁª¥Êï∞ÁªÑ‰∏≠„ÄÇÊØîÂ¶ÇÂØπÂ≠óÁ¨¶‰∏≤ 'abcdea'Â≠òÂÇ®‰∏∫\n\n| Char | Index |\n| --- | --- |\n| 0 | [0, 5] |\n| 1 | [1] |\n| 2 | [2] |\n| 3 | [3] |\n| 4 | [4] |\n| ... |  |\n| 25 |  |\n\nÂØπÂ∫î‰ª£Á†Å: \n\n```c++\n  vector<vector<int>> store(26, vector<int>());\n    for (int i = 0; i < S.size(); ++i) {\n        // Â≠òÂÇ®Â≠óÊØçË∑üindex\n        store[S[i] - 'a'].push_back(i);\n    }\n```\n\n1. ÂØπÊüê‰∏™wordÔºåÊü•ÊâæÂÆÉÁöÑÂ≠óÁ¨¶ÊòØÂê¶Âú®‰∫åÁª¥Êï∞ÁªÑ‰∏≠„ÄÇ\n\n```c++\nint numMatchingSubseq(string S, vector<string>& words) {\n    vector<vector<int>> store(26, vector<int>());\n    for (int i = 0; i < S.size(); ++i) {\n        // Â≠òÂÇ®Â≠óÊØçË∑üindex\n        store[S[i] - 'a'].push_back(i);\n    }\n\n    int res = 0;\n    for (auto &word: words) {\n        int x = -1;\n        bool found = true;\n        for (auto c: word) {\n            // search\n            auto it = upper_bound(store[c - 'a'].begin(), store[c - 'a'].end(), x);\n            if (it == store[c - 'a'].end()) {\n                found = false;\n                break;\n            } else {\n                // Êõ¥Êñ∞ÊúÄÊñ∞ÁöÑ‰∏ãÊ†á‰ΩçÁΩÆ\n                x = *it;\n            }\n        }\n        if (found) res++;\n    }\n\n    return res;\n}\n```\n## Solution 2 \nÁ¨¨‰∫åÁßçÊÄùË∑ØÔºåÊù•Ëá™[StefanÂ§ßÁ•û](https://leetcode.com/problems/number-of-matching-subsequences/discuss/117634/Efficient-and-simple-go-through-words-in-parallel-with-explanation)„ÄÇ \nËøôÁßçÊÄùË∑ØÔºåÂ≠òÂÇ®ÁöÑÊòØwords‰∏≠Á≠âÂæÖÂåπÈÖçÁöÑÂ≠óÁ¨¶ÁöÑindex pair„ÄÇÊØîÂ¶Ç words = [\"a\", \"bb\", \"acd\", \"ace\"]Â≠òÂÇ®ÁöÑÁªìÊûúÊòØ: \n|  idx | pair |\n| --- | --- |\n| ‚Äòa' | [(0, 1), (2, 1), (3, 1)] |\n| ‚Äòb' | [(1, 1)] |\n\n\n\n```c++\nint numMatchingSubseq(string S, vector<string>& words) {\n    vector<pair<int, int>> waiting[128];\n    for (int i = 0; i < words.size(); i++)\n        waiting[words[i][0]].emplace_back(i, 1);\n    for (char c : S) {\n        auto advance = waiting[c];\n        waiting[c].clear();\n        for (auto it : advance)\n            waiting[words[it.first][it.second++]].push_back(it);\n    }\n\n    return waiting[0].size();\n}\n```\n\n"},{"title":"1011. Capacity To Ship Packages Within D Days","url":"/2019/06/14/1011-Capacity-To-Ship-Packages-Within-D-Days/","content":"## [È¢òÁõÆ](https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/)\n## ÂàÜÊûê\nÊù•Ëá™VladÁ•ûÁöÑËß£Á≠îhttps://leetcode.com/problems/capacity-to-ship-packages-within-d-days/discuss/256737/C%2B%2B-Binary-Search \n\nÂÖàÂÆö‰∏ãÂèØËÉΩÁöÑÊâøÈáçËåÉÂõ¥: \n1. ÊúÄÂ§ß maxCap ÊòØÊâÄÊúâÂåÖË£πÁöÑÈáçÈáèÂíå\n2. ÊúÄÂ∞è minCap = max{ maxCap/D, ÊúÄÈáçÁöÑÂåÖË£πÈáçÈáè) \n3. Áî® Binary Search Êü•Êâæ `the least weight capacity of the ship`, ËØ•ËàπËÉΩÂú®DÂ§©ÂÜÖËøêÈÄÅÂÆåÊâÄÊúâË¥ßÁâ©\n\n```c++\n// Ê±ÇËΩΩË¥ßÂäõ‰∏∫ capacity ÁöÑËàπËøêÂÆåÊâÄÊúâË¥ßÁâ©ÁöÑÂ§©Êï∞\nint countDays(vector<int>& weights, int capacity) {\n    int count = 1, load = 0;\n    for (auto w: weights) {\n        load += w;\n        if (load > capacity) {\n            // Ë∂ÖËøáËΩΩÈáçËÉΩÂäõÔºåÁ¨¨‰∫åÂ§©ÁªßÁª≠ËøêËΩΩ\n            load = w;\n            count++;\n        }\n    }\n\n    return count;\n}\n\nint shipWithinDays(vector<int>& weights, int D) {\n    auto maxCap = std::accumulate(weights.begin(), weights.end(), 0);\n    auto minCap = max(*max_element(weights.begin(), weights.end()), maxCap / D);\n    // Binary Search \n    while (minCap < maxCap) {\n        int mid = (minCap + maxCap) / 2;\n        if (countDays(weights, mid) <= D) {\n            maxCap = mid;\n        } else {\n            minCap = mid + 1;\n        }\n    }\n\n    return minCap;\n}\n\n```","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"LeetCode:1014. Best Sightseeing Pair","url":"/2019/06/11/LeetCode-1014-Best-Sightseeing-Pair/","content":"\n## È¢òÁõÆÔºö [1014. Best Sightseeing Pair](https://leetcode.com/problems/best-sightseeing-pair/)\n \n\n### ÂàÜÊûê\nËøôÈÅìÈ¢òÊ±Ç `the maximum score of a pair of sightseeing spots`; score = A[i] + A[j] + i - j)„ÄÇ ÊòØ‰∏™ÊúÄ‰ºòËß£ÈóÆÈ¢ò„ÄÇ  \nËø≠‰ª£‰∏≠ÔºåÂΩìÂâçidx‰∏∫i; Ë¶ÅËÄÉËôë (0, i-1)ÁöÑÊï∞‰∏≠ÂØπscoreÂ¢ûÁõäÊúÄÂ§ßÁöÑÊï∞ÁöÑ‰∏ãÊ†áÊòØmax_idx„ÄÇ ËÆ°ÁÆó (max_idx, i)ÁöÑscoreÔºå Âπ∂Ë∑ü‰πãÂâçÊúÄÂ§ßÂÄºÂÅöÊØîËæÉ„ÄÇ\n\n```c++\nint maxScoreSightseeingPair(vector<int> & A) {\n    // 2<= A.length <= 50000\n    int max_idx = 0, res = A[0], inc = 0;\n    for (int i = 1; i < A.size(); ++i) {\n        inc = A[max_idx] - i + max_idx;\n        res = max(res, A[i] + inc);\n        max_idx = A[i] > inc ? i : max_idx;\n    }\n\n    return res;\n}\n```\n\n**Êõ¥‰∏∫ÁÆÄÁ∫¶ÁöÑÂÜôÊ≥ïÔºö**\nmax_incÊØèÊ¨°Ëø≠‰ª£ÂêéÈÉΩËá™Âáè1ÔºåÊòØÂõ†‰∏∫ËøõÂÖ•‰∏ã‰∏ÄÊ¨°Ëø≠‰ª£i+1ÁöÑÊó∂ÂÄôÔºåÂÆÉÂØπÂàÜÊï∞ÁöÑÂ¢ûÁõäÂè™Ââ©‰∏ã‰∫ÜA[max_inc] + i - (i+1)„ÄÇ\n```c++\nint maxScoreSightseeingPair2(vector<int>& A) {\n    int max_inc = A[0] - 1, res = 0;\n    for (int i = 1; i < A.size(); ++i, max_inc--) {\n        res = max(res, max_inc + A[i]);\n        max_inc = max(A[i], max_inc);\n    }\n\n    return res;\n}\n```\n\nÊó∂Èó¥Â§çÊùÇÂ∫¶: $o(n)$","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"ÁêÜËß£ÊâãÊú∫GPSÂÆö‰ΩçÂéüÁêÜ","url":"/2019/06/08/ÁêÜËß£GPSÂÆö‰ΩçÂéüÁêÜ/","content":"\nÊú¨ÊñáÂèñÊùêËá™ TEDÊïôÂ≠¶ËßÜÈ¢ë[How does your smartphone know your location? - Wilton L. Virgo](https://www.youtube.com/watch?v=70cDSUI4XKE)\nÊàë‰ª¨ÁöÑÊâãÊú∫ÊòØÂ¶Ç‰ΩïÂáÜÁ°ÆÂÆö‰ΩçÁöÑÂë¢Ôºü Á≠îÊ°àÂú®Á¶ªÊàë‰ª¨2000Â§öËã±ÈáåÁöÑÂç´Êòü‰∏ä„ÄÇ\n\nÁ¨¨‰∏Ä‰∏™ÈóÆÈ¢òÔºö ‰∏∫Âï•Âç´Êòü‰∏äÁöÑÊó∂Èó¥ÂØπGPSÂÆö‰ΩçÂ¶ÇÊ≠§ÈáçË¶ÅÔºü Âõ†‰∏∫Êàë‰ª¨Ë¶ÅÁü•ÈÅìÊâãÊú∫Ë∑üÂç´ÊòüÁöÑË∑ùÁ¶ª„ÄÇ ÊØè‰∏™Âç´ÊòüÂú®‰∏çÊñ≠ÂØπÂ§ñÂπøÊí≠‰ø°Âè∑„ÄÇ‰ø°Âè∑‰∏≠ËÆ∞ÂΩïËá™Â∑±ÁöÑÂàõÂª∫Êó∂Èó¥„ÄÇ\n\n\n![48bce392.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/48bce392.png)\n\nÊâãÊú∫Êî∂Âà∞‰ø°Âè∑ÂêéÔºåÂà©Áî®Êî∂Âà∞‰ø°Âè∑ÁöÑÂà∞ËææÊó∂Èó¥Ôºå ËÆ°ÁÆóËá™Â∑±Ë∑üÂç´ÊòüÁöÑË∑ùÁ¶ª: \n\n$$distance = c * \\Delta T $$\n\nc: ÂÖâÁöÑÈÄüÂ∫¶\n$\\Delta T$: ‰ø°Âè∑‰º†Êí≠ÁöÑÊó∂Èó¥Èó¥Èöî $time_{arrive} - time_{create}$\n\n‰ΩÜÊòØc = 299,792,458 m/s, ÈùûÂ∏∏Â§ß„ÄÇ Â¶ÇÊûúÁî®ÁßíÂÅöÂçï‰ΩçËÆ°ÁÆó$\\Delta T$Ôºå Âú∞ÁêÉ‰∏äÊâÄÊúâÁÇπÔºåÁîöËá≥Êúâ‰∫õËøúÁ¶ªÊàë‰ª¨ÁöÑ‰ΩçÁΩÆÔºåËÆ°ÁÆóÂá∫Êù•ÁöÑdistanceÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑÂÄº„ÄÇ \n\n![f8edfbb6.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/f8edfbb6.png)\n\n\nÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÈùûÂ∏∏ÈùûÂ∏∏ÈùûÂ∏∏Á≤æÁ°ÆÁöÑÊó∂ÈíüËÆ°ÁÆóÊó∂Èó¥. ‰∫éÊòØÂéüÂ≠êÈíüÁ≤âÂ¢®ÁôªÂú∫. Â∞±ÂÉèÊú∫Ê¢∞ÈíüÈù†ÂòÄÂóíÂòÄÂóíÊëáÊëÜÊù•ËÆ°Êó∂Ôºå ÂéüÂ≠êÈíü‰πüÊúâËøôÁßçÈó¥ÈöîÊó∂Èó¥Âõ∫ÂÆöÁöÑÊª¥Á≠îÊª¥Á≠îËÆ°Êó∂ÊñπÂºè„ÄÇ \n\n## ÂéüÂ≠êÈíü\n\n![782d2620.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/782d2620.png)\nÂéüÂ≠êÈíü‰æùËµñÂéüÂ≠êË∑ÉËøÅÊâÄÈáäÊîæÊàñÂê∏Êî∂ÁöÑÁîµÁ£ÅÊ≥¢Êù•ËÆ°Êó∂„ÄÇÂéüÂ≠êÂú®‰∏Ä‰∏™ËΩ®ÈÅìË∑ë‰∫Ü‰∏ÄÂúàÂêéÔºåË∑ÉËøÅÂà∞Âè¶‰∏Ä‰∏™ËΩ®ÈÅìÁöÑÊó∂ÂÄô‰ºö‰ª•ÁîµÁ£ÅÊ≥¢ÂΩ¢ÂºèÈáäÊîæÂá∫ËÉΩÈáè„ÄÇ\n\n![a68ec7af.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/a68ec7af.png)\n\nËÉΩÈáèËÆ°ÁÆóÂÖ¨ÂºèÔºö $\\Delta E = h \\nu$ $\\Delta E$ ÂèòÂåñÁöÑËÉΩÈáè; hÊòØÂ∏∏Èáè(h=6.626x$10^{-34}$ Js)„ÄÇ $\\nu$ÊòØÈ¢ëÁéá„ÄÇ ÊØîÂ¶ÇÈìØÂéüÂ≠êÈíüÔºåÂÆÉÁöÑÈ¢ëÁéáÊòØ‰∏™Âõ∫ÂÆöÂÄº 9,192,631,770HzÔºå‰Ω†ÂèØ‰ª•ÊÉ≥Ë±°‰∏∫‰∏Ä‰∏™ÊØèÁßíË∑ë9billionÂúàÁöÑÊó∂Èíü„ÄÇÊâÄ‰ª•Áî®ÂéüÂ≠êÈíüÂèØ‰ª•ÊØèÁßíÁ≤æÁ°ÆÂà∞ 1/1billion„ÄÇ \n\n![0bc32fc3.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/ca6ea804.png)\nËøôÂº†ÂõæÁöÑdetectorÊòØÁî®Êù•Ê£ÄÊµãprobe laserÂõ∫ÂÆöÈ¢ëÁéáÂèëÂá∫ÁöÑÁîµÁ£ÅÊ≥¢„ÄÇ\n\n\nÊúâ‰∫ÜÁ≤æÁ°ÆÁöÑÊó∂Èó¥ÔºåÊàë‰ª¨ÂèØ‰ª•Áü•ÈÅìÊâãÊú∫Ë∑üÂç´ÊòüÁöÑË∑ùÁ¶ª„ÄÇ ‰ª•Âç´Êòü‰∏∫‰∏≠ÂøÉÔºådistance‰∏∫ÂçäÂæÑÁîªÂúÜ(ÁêÉ)\n\n![f58c51ad.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/f58c51ad.png)\n\nÂ¶ÇÊûúÂ§öÂá†‰∏™Âç´ÊòüÔºåÊàë‰ª¨ÂèØ‰ª•Áî®Âá†‰ΩïÂÖ¨ÂºèËÆ°ÁÆóÂá∫ÂÆÉ‰ª¨ÁöÑÁ©∫Èó¥‰∫§ÂèâÁÇπ\n\n![293478f1.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/293478f1.png)\n\n![6cbd0ed3.png](/img/a9bb4ba0-9918-4e5c-9fc0-3b9a28363e6b/6cbd0ed3.png)\n\n","categories":["LBS"]},{"title":"714. Best Time to Buy and Sell Stock with Transaction Fee","url":"/2019/06/06/714-Best-Time-to-Buy-and-Sell-Stock-with-Transaction-Fee/","content":"\n##  [È¢òÁõÆ](https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee)\n\n## ÂàÜÊûê\n\n### ÂÆö‰πâ‰∏§‰∏™Áä∂ÊÄÅÂèòÈáè: \n- buy_profit: Ëã•i-1Â§©ÔºåÊåÅÊúâËÇ°Á•®ÔºåÊúÄÂ§ßÂà©Ê∂¶ÊòØ $(buy_profit)\n- sell_profit: Ëã•i-1Â§©ÔºåÂçñÂá∫ËÇ°Á•®, ÊúÄÂ§ßÂà©Ê∂¶ÊòØ $(sell_profit)\n\n### ‰π∞ÂçñÂà©Ê∂¶ÊÉÖÂÜµÔºö \n\n**ÊúÄÂºÄÂßã**: i == 0;  `int buy_profit = -prices[0], sell_profit = 0`\n**Á¨¨iÂ§©**: \n\n- ÂΩìÂ§©‰π∞: \n    - Áª¥ÊåÅi-1Â§©ÊåÅÊúâ, ‰∏çÂèòÔºõ $buy\\_profit_i == buy\\_profit_{i-1}$ \n    - i-1Â§©ÂçñÂá∫ÔºåiÂ§©‰π∞Ëøõ (Âõ†‰∏∫È¢òÁõÆË¶ÅÊ±ÇÊØèÊ¨°Âè™ËÉΩ‰π∞1 share of stock, ‰π∞ÂÖ•ÂâçÂøÖÈ°ªÊääÊâã‰∏äÁöÑstockÈÉΩÂçñÂá∫); $buy\\_profit_i = sell\\_profit_{i-1} - prices[i]$\n- ÂΩìÂ§©Âçñ:  \n    - i-1Â§©ÊåÅÊúâÔºåiÂ§©ÂçñÂá∫; ÂΩìÂ§©ÁöÑÂà©Ê∂¶‰∏∫ $sell\\_profit_i=buy\\_profit_i-1 + prices[i] - fee$\n    - i-1Â§©Â∑≤ÁªèÂçñÂá∫ÔºåÂΩìÂ§©‰∏çÊìç‰ΩúÔºõÂà©Ê∂¶‰∏∫ $sell\\_profit_i == sell\\_profit_{i-1}$ \n    \nÊØè‰∏™iËø≠‰ª£ÔºåÊàë‰ª¨ÈÉΩË¶ÅËÄÉËôëËøôÂõõÁßçÊÉÖÂÜµÔºåËÆ°ÁÆóÂá∫buy_profitË∑üsell_profitÁöÑÂ±ÄÈÉ®ÊúÄ‰ºò. \n\n\n### ‰æãÂ≠ê\nInput: prices = [1, 3, 2, 8, 4, 9], fee = 2\n\nÊúÄ‰ºòÊìç‰ΩúÔºö \n\n|  | 1 | 3 | 2 | 8 | 4 | 9 |\n| --- | --- | --- | --- | --- | --- | --- |\n| max buy_profit | -1 | -1 max{-1, -3} | -1 max{-1, -2}| -1 max{-1, 8}| 1 max{1, -4} | 1 max{1, -4}|\n| max sell_profit | 0 | 0 max{0, 0}| 0 max{0, -1}| 5 max{0, 5}| 5 max{5, 3}| 8 {5, 8}|\n\n### Ë¥™ÂøÉÁÆóÊ≥ï\nA greedy algorithm always makes the choice that `looks best at the moment` That is, it makes a `locally optimal choice` in the hope that this choice will `lead to a globally optimal solution`. \n\n\n## Greedy Algorithm   \n\n\n```c++\nint maxProfit(vector<int>& prices, int fee) {\n    if (prices.empty()) return 0;\n    int buy_profit = -prices[0], sell_profit = 0;\n    for (int i = 1; i < prices.size(); ++i) {\n        buy_profit = max(buy_profit, sell_profit - prices[i]);\n        sell_profit = max(sell_profit, buy_profit + prices[i] - fee);\n     }\n\n    return sell_profit;\n}\n```\nÊàñËÄÖ\n\n```c++\n    int maxProfit(vector<int>& prices, int fee) {\n      int n = prices.size();\n      if (n <= 1 ) return 0; // need at least 2 days to make a transactions\n      \n      vector<int> buys (n); // buys [i] means max money on day i ending in buy  state (have stock in hand)\n      vector<int> sells(n); // sells[i] means max money on day i ending in sell state (no stock in hand)\n      \n      buys [0] = -prices[0];\n      sells[0] = 0;\n      \n      for (int i = 1; i < n; ++i) {\n        buys [i] = max(buys [i-1], sells[i-1]-prices[i]);     // buy  state to buy  state: continue holding onto stock\n                                                              // sell state to buy  state: buy on day i\n        sells[i] = max(sells[i-1], buys [i-1]+prices[i]-fee); // sell state to sell state: continue not holding any stock\n                                                              // buy  state to sell state: sell on day i\n      }\n      return sells[n-1];\n    }\n```\nÊó∂Èó¥Â§çÊùÇÂ∫¶: $o(n)$","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"LeetCode:413. Arithmetic Slices","url":"/2019/06/04/LeetCode-413-Arithmetic-Slices/","content":"\n##  [413. Arithmetic Slices](https://leetcode.com/problems/arithmetic-slices/)\nËøôÈÅìÈ¢òÔºåÁÆÄËÄåË®Ä‰πãÔºåÊ±ÇÊï∞ÁªÑÈáåÔºåÁ≠âÂ∑ÆÂ∫èÂàóÁöÑ‰∏™Êï∞„ÄÇ \n\nÊØîÂ¶Ç\n```\nA = [1, 2, 3, 4]\nÊúâ3‰∏™Á≠âÂ∑ÆÊï∞Âàó\n[1, 2, 3], [2, 3, 4], [1, 2, 3, 4]\n```\n\nÈ¢òÁõÆÊ≤°ÊúâËØ¥ÊòéAÊòØÁ≠âÂ∑ÆÊï∞ÂàóÔºåÊâÄ‰ª•‰πüË¶ÅËÄÉËôëA‰∏çÊòØÁ≠âÂ∑ÆÊï∞ÂàóÔºå‰ΩÜÊòØÂÖ∂Â≠êÊï∞ÁªÑÊòØÁ≠âÂ∑ÆÊï∞ÂàóÁöÑÊÉÖÂÜµ„ÄÇ\n```\nA = [1, 3, 5, 7, 9, 15, 20, 25]\n1, 3, 5\n\n3, 5, 7\n1, 3, 5, 7\n\n5, 7, 9\n3, 5, 7, 9\n1, 3, 5, 7, 9\n\n15, 20, 25\n```\n\n## Solution \n\n```c++\nint numberOfArithmeticSlices(vector<int>& A) {\n    int dp = 0;\n    int sum = 0;\n\n    for (int i = 2; i < A.size(); ++i) {\n        if (A[i] - A[i-1] == A[i-1] - A[i-2])  {\n           dp = 1+dp;\n           sum += dp;\n        } else {\n           dp = 0;\n        }\n    }\n    return sum;\n}\n```","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"ReactNativeÂºÄÂèë-Á•ûÂô®Reactoron","url":"/2019/05/23/ReactNative-reactoron/","content":"ReactoronËÉΩÊîπÂñÑReact NativeÂºÄÂèë‰ΩìÈ™å„ÄÇ \n<!--more--> \n \nReactoronËøô‰∏™ÂºÄÂèëÂ∑•ÂÖ∑ÔºåÊääÊàë‰ª¨ËæìÂá∫ÁöÑÊó•ÂøóÂÉètwitter‰ø°ÊÅØÊµÅ‰∏ÄÊ†∑‰øùÂ≠òËµ∑Êù•ÔºåÁ≠âÊàë‰ª¨ÈúÄË¶ÅÁöÑÊó∂ÂÄôÔºåÂèØ‰ª•ÂõûËøáÂ§¥ËøáÊª§ÊâæÂà∞Êó•ÂøóÔºåÂ±ïÂºÄÊó•ÂøóËØ¶ÊÉÖÊü•Áúã„ÄÇÊèêÈ´òReactNativeÂºÄÂèëÊïàÁéá„ÄÇ ÁúãÊó•Âøó‰ºöÁâπÂà´Êñπ‰æøÔºå‰ΩìÈ™å‰πü‰∏çÈîô„ÄÇ\n\n![image](https://github.com/infinitered/reactotron/raw/master/docs/images/quick-start-react-native/react-demo-native-reactotron.jpg)\n\nÈ°πÁõÆÂú∞ÂùÄÔºö [GitHub - infinitered/reactotron: A desktop app for inspecting your React JS and React Native projects. macOS, Linux, and Windows.](https://github.com/infinitered/reactotron)\n\n‰∏ãËΩΩÊúÄÊñ∞ÁöÑreleaseÂåÖÔºåÊú¨Âú∞ÂÆâË£Ö„ÄÇ\n\n## ‰ΩøÁî®\n\n### 1. ÈõÜÊàêÂú®React NativeÈ°πÁõÆ‰∏≠\n\n```sh\nnpm i --save-dev reactotron-react-native\n// or\nyarn add reactotron-react-native --dev\n```\n\n### 2. ÈÖçÁΩÆÊñá‰ª∂\n\nÂàõÂª∫`ReactotronConfig.js`\n\nÂü∫Á°ÄÁî®Ê≥ïÔºö\n```js\nimport Reactotron from 'reactotron-react-native'\n\nReactotron\n  .configure() // controls connection & communication settings\n  .useReactNative() // add all built-in react native plugins\n  .connect() // let's connect!\n```\nÈ´òÁ∫ßÈÖçÁΩÆ: \n\n```js\nimport Reactotron from 'reactotron-react-native'\n\nReactotron\n  .configure({\n    name: \"React Native Demo\"\n  })\n  .useReactNative({     \n      asyncStorage: {ignore: []},\n      networking: {\n          ignoreUrls: new RegExp(`http://127.0.0.1:19000/logs`)\n      },\n      editor: false,\n      errors: {veto: (stackFrame) => false},\n      overlay: false,})\n  .connect();\n```\n\n#### asyncStorage \n\nÂèÇÊï∞Á±ªÂûãÔºö\n\n```js\nexport interface AsyncStorageOptions {\n    ignore?: string[];\n}\n```\n\n`ignore`ÁöÑÂÄºÔºå‰º†ÂÖ•keyÊï∞ÁªÑÔºå`reactotron`‰∏ç‰ºöÂ±ïÁ§∫Ëøô‰∫õkeyÁöÑÂ≠òÂÇ®Êï∞ÊçÆ\n\n#### networking\nÂèÇÊï∞Á±ªÂûãÔºö \n```js\nexport interface NetworkingOptions {\n    ignoreContentTypes?: RegExp; // Â¶ÇÊûúresponseÁöÑContent-TypeÂåπÈÖç‰∏äËøô‰∏™Ê≠£ÂàôË°®ËææÂºèÔºå‰∏çÂ±ïÁ§∫responseÔºå\n    ignoreUrls?: RegExp; //  Ë¶ÅÂøΩÁï•ÁöÑurls\n}\n```\n‰æãÂ≠êÔºö\n```js networking({\n  ignoreContentTypes: /^(image)\\/.*$/i,\n  ignoreUrls: /\\/(logs|symbolicate)$/,\n})\n```\n\n\n#### Error \nÂèÇÊï∞Á±ªÂûãÔºö\n```js\nexport interface TrackGlobalErrorsOptions {\n    veto?: (frame: any) => boolean;\n}\n```\n`veto`ÂáΩÊï∞ÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáÂÆÉÊåáÂÆöÊàë‰ª¨‰∏çÊÉ≥ÁúãÂà∞ÁöÑÂ†ÜÊ†à‰ø°ÊÅØ.ËøôÈáåÁöÑframeÊåástack frame.\n\nÊØîÂ¶ÇÔºö Â¶Ç‰∏ãÂøΩÁï•Êä•ÈîôÊó∂ÊâÄÊúâreact-native moduleÈáåÂ§¥ÁöÑstack frame.\n```js\nReactotron\n  .configure()\n  .use(trackGlobalErrors({\n    veto: frame => frame.fileName.indexOf('/node_modules/react-native/') >= 0\n   }))\n  .connect()\n```\n### 3. improt\n\n Âú®`App.js` ÊàñËÄÖ`index.js`Êñá‰ª∂Â§¥‰∏≠ÂºïÂÖ•Ôºö\n \n```js\nif(__DEV__) {\n  import('./ReactotronConfig').then(() => console.log('Reactotron Configured'))\n}\n```\n\n### 4. ÊâìÁÇπ\n\nÂÉèÁî®`console.log`‰∏ÄÊ†∑ÔºåË∞ÉÁî® `Reactotron.log`\n\nReactNativeÈ°πÁõÆË∑ëËµ∑Êù•ÂêéÔºåÂèØ‰ª•Âú®ReactotronÈù¢Êùø‰∏äÁúãÂà∞Ôºö \n\n![9b1dbee4.png](https://github.com/infinitered/reactotron/raw/master/docs/images/quick-start-react-native/hello-1.jpg)\n\nÂÖ∂‰ªñAPIÔºö \n```js\nReactotron.log({ numbers: [1, 2, 3], boolean: false, nested: { here: 'we go' } })\n\nReactotron.warn('*glares*')\nReactotron.error('Now you\\'ve done it.')\nReactotron.display({\n  name: 'KNOCK KNOCK',\n  preview: 'Who\\'s there?',\n  value: 'Orange.'\n})\n\nReactotron.display({\n  name: 'ORANGE',\n  preview: 'Who?',\n  value: 'Orange you glad you don\\'t know me in real life?',\n  important: true\n})\n\n```\n\n## ReduxÁöÑÊï∞ÊçÆ‰ø°ÊÅØ\n[reactotron/plugin-redux.md at master ¬∑ infinitered/reactotron ¬∑ GitHub](https://github.com/infinitered/reactotron/blob/master/docs/plugin-redux.md)\n![](https://github.com/infinitered/reactotron/raw/master/docs/images/redux/redux-keys-values.jpg)\n\n[YouTube](https://www.youtube.com/watch?v=UiPo9A9k7xc)\n\n\n","tags":["React Native Dev"],"categories":["React Native"]},{"title":"LeetCode:542. 01 Matrix-DP","url":"/2019/05/23/LeetCode-542-01-Matrix-DP/","content":"Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\n\n<!--more-->\n \n\n## È¢òÁõÆ: [01-matrix](https://leetcode.com/problems/01-matrix/)\nGiven a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\n\nThe distance between two adjacent cells is 1.\n```\nExample:\nInput:\n[[0,0,0],\n [0,1,0],\n [1,1,1]]\n\nOutput:\n[[0,0,0],\n [0,1,0],\n [1,2,1]]\n```\n## ÂàÜÊûêÔºö \nÈ¢òÁõÆÊúâÁÇπÊ≤°ËÆ≤ÊòéÁôΩÔºåËøôÈÅìÈ¢òÔºåÊ±ÇÂÄº‰∏∫1ÁöÑcellÂà∞ÊúÄËøëÁöÑ0ÁöÑÊúÄÁü≠Ë∑ùÁ¶ª„ÄÇ\n\nËøôÈÅìÈ¢òÔºåÊàëÁöÑÁ¨¨‰∏ÄÊÉ≥Ê≥ïÊòØBFSÔºåÂêéÊù•ÁúãÂà∞DPÂÜôÊ≥ïÊõ¥‰ºòÈõÖ„ÄÇ[Simple-Java-solution](https://leetcode.com/problems/01-matrix/discuss/101051/Simple-Java-solution-beat-99-(use-DP))\n\nÂèØ‰ª•ÂèëÁé∞ËßÑÂæã„ÄÇÂØπmatrix[i][j], Â¶ÇÊûúÁü•ÈÅìÂÆÉ‰∏ä‰∏ãÂ∑¶Âè≥Âõõ‰∏™cellÂà∞0ÁöÑÊúÄÁü≠Ë∑ùÁ¶ªÔºåÈÇ£‰πà\n$$matrix[i][j] = min(left, top, right, bottom) + 1$$\n\n1. ÈÅçÂéÜmatrixÁü©ÈòµÔºåmatrix[i][j]‰∏ç‰∏∫0ÔºåËÆ°ÁÆó leftCell Ë∑ü topCellÊúÄÂ∞èÂÄºÔºåÂÜçÂä†1. \n2. ÂÜçÂÄíÂèôÈÅçÂéÜmatrix, matrix[i][j]‰∏ç‰∏∫0, ÂÖàËÆ°ÁÆórightCell Ë∑ü topCellÁöÑÊúÄÂ∞èÂÄºÔºåÂÜçË∑ümin(left, top)ÁöÑÂÄºÊØîËæÉ\n\n```c++\n vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {\n     if (matrix.empty()) return {};\n     int n = (int)matrix.size(), m = (int)matrix[0].size(), MAX_LEN = 10002;\n     for (int i = 0; i < n; ++i) {\n         for (int j = 0; j < m; ++j) {\n             if (matrix[i][j] != 0) {\n                 int top = (i - 1 < 0) ? MAX_LEN : matrix[i-1][j];\n                 int left = (j - 1 < 0) ? MAX_LEN : matrix[i][j-1];\n                 matrix[i][j] = 1 + min(top, left);\n             }\n         }\n    \n     for (int i = n - 1; i >= 0; i--) {\n         for (int j = m - 1; j >= 0; j--) {\n             if(matrix[i][j] != 0) {\n                 int right = (j + 1 >= m) ? MAX_LEN: matrix[i][j+1];\n                 int bottom = (i + 1 >= n) ? MAX_LEN: matrix[i+1][j];\n                 matrix[i][j] = min(min(right, bottom) + 1, matrix[i][j]);\n             }\n         }\n     }\n     return matrix;\n }\n```\n### Êó∂Èó¥Â§çÊùÇÂ∫¶ $o(n^2)$\n### Á©∫Èó¥Â§çÊùÇÂ∫¶ $o(1)$\n\n```\nRuntime: 184 ms, faster than 96.53% of C++ online submissions for 01 Matrix.\nMemory Usage: 20.9 MB, less than 91.39% of C++ online submissions for 01 Matrix.\n```\nÊúâ‰∫∫ÈóÆÔºå‰∏∫Âï•Ë¶Å‰∏§Ê¨°ÈÅçÂéÜÔºü ‰∏çËÉΩÂÉè‰∏ãÈù¢Ëøô‰πàÂÜôÂêóÔºü\n\n```c++\n// ÈîôËØØÁöÑÂÜôÊ≥ï\n vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {\n       if (matrix.empty()) return {};\n       int n = (int)matrix.size(), m = (int)matrix[0].size();\n       for (int i = 0; i < n; ++i) {\n           for (int j = 0; j < m; ++j) {\n               if (matrix[i][j] != 0) {\n                   int top = (i - 1 < 0) ? INT32_MAX : matrix[i-1][j];\n                   int left = (j - 1 < 0) ? INT32_MAX : matrix[i][j-1];\n                   int right = (j + 1 >= m) ? INT32_MAX : matrix[i][j+1];\n                   int bottom = (i + 1 >= n) ? INT32_MAX : matrix[i+1][j];\n                   matrix[i][j] = 1 + min(min(top, left), min(right, bottom));\n               }\n           }\n       }\n       return matrix;\n   }\n```\nÈóÆÈ¢òÂú®‰∫éÔºåÈ°∫Â∫èÈÅçÂéÜÊó∂ÂÄôÔºåbottomË∑ürightËøòÊ≤°Êõ¥Êñ∞‰∏∫Ê≠£Á°ÆÁöÑÂÄº„ÄÇÊØîÂ¶Ç‰∏ãÂõæÔºåÈÅçÂéÜÂà∞matrix[3][0]ÁöÑÊó∂ÂÄôÔºåmatrix[3, 1] ËøòÊòØ1Ôºå ËÄåmatrix[2][0] == 2; ÁªìÊûúÂ∞±Âá∫Èîô‰∫Ü„ÄÇ\n```\n0 0 0 0 0 \n1 0 0 0 0 \n1 1 1 0 0 \n1 1 1 1 0 \n```\n","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"LeetCode:650. 2 Keys Keyboard","url":"/2019/05/20/LeetCode-650-2-Keys-Keyboard/","content":"\n## È¢òÊÑè: \nnotepadÈáåÂè™Êúâ‰∏Ä‰∏™'A'Â≠óÁ¨¶‰∏≤„ÄÇ Âè™ËÉΩÂÖÅËÆ∏‰∏§‰∏™Êìç‰Ωú: \n\n1. Copy All: ÊäänotepadÈáåÊâÄÊúâÁöÑÂ≠óÁ¨¶‰∏≤copy\n2. Paste: Â§çÂà∂‰∏äÊ¨°copyÁöÑÂÜÖÂÆπ\n\nÈóÆÔºåÊúÄÂ∞ëÁöÑÊ≠•È™§Ôºàcopy & paste) ËÉΩÁîüÊàên‰∏™'A'\n\n## ÂàÜÊûê\n\nÂèØ‰ª•ÂèëÁé∞ËßÑÂæã: \n\n\n| n | op | cur char |\n| --- | --- | --- |\n| 2 | c | A |\n|  | p | AA |\n| 3 | c | A |\n|  | p | AA |\n|  | p | AAA |\n| 4 | c | A |\n|  | p | AA |\n|  | c | AA |\n|  | p | AAAA |\n| 5 | c | A |\n|  | p | AA |\n|  | p | AAA |\n|  | p | AAAA |\n|  | p | AAAAA |\n| 6 | c | A |\n|  | p | AA |\n|  | c | AA |\n|  | p | AAAAA |\n|  | p | AAAAAA |\n\nÂΩìn‰∏∫Ë¥®Êï∞Ôºå ÊâÄÈúÄÊúÄÂ∞ëÊ≠•È™§‰∏∫n; ÂΩìn‰∏çÊòØË¥®Êï∞Ôºå ÊâÄÈúÄÊ≠•È™§‰∏∫ nÁöÑË¥®Âõ†Êï∞Áõ∏Âä†‰πãÂíå„ÄÇÊØîÂ¶Ç6 = 2 x 3;ÂÆÉÊâÄÈúÄÊúÄÂ∞èÊ≠•È™§ 2+3 = 5\n\n## Solution 1Ôºö Ë¥®Âõ†Êï∞ÂàÜËß£\n```c++\nint minSteps(int n) {\n    int ans = 0, d = 2;\n    while (n > 1) {\n        while (n % d == 0)  {\n            ans += d;\n            n /= d;\n        }\n        d++;\n    }\n\n    return ans;\n}\n```\n\n## Solution 2: \n\n```c++\nint minSteps(int n) {\n    if (n <= 1) return 0;\n    if (n <= 5) return n;\n    // n>1ÁöÑÊìç‰ΩúÔºåÂâç‰∏§Ê≠•È™§ÈÉΩÊòØcopy & paste, ‰ªé'A'ÂèòÊàê 'AA', ÊâÄ‰ª• cur_len == 2, res == 2, ‰∏äÊ¨°copyÁöÑÂ≠óÁ¨¶Êï∞Èáè == 1, Â¶ÇÊûú‰∏ã‰∏ÄÊ¨°Ë¶Åcopy & paste, Ë¶Å‰∏ÄÊ¨°copy'AA' 2‰∏™Â≠óÁ¨¶  \n    int cur_len = 2, res = 2, next_cp_num = 2, copy_num = 1;\n    while (cur_len < n) {\n        if ((n - cur_len) % next_cp_num == 0) {\n           // copy + paste\n           cur_len += next_cp_num;\n           copy_num = next_cp_num;\n           // copy + paste; 2 steps\n           res += 2;\n        } else {\n            // paste the characters copied last time \n            cur_len += copy_num;\n            // only paste, 1 step\n            res += 1;\n        }\n\n        // È¢òÁõÆË¶ÅÊ±ÇÔºöCopyÊìç‰ΩúË¶ÅCopyÊâÄÊúâÂ≠óÁ¨¶\n        next_cp_num = cur_len;\n    }\n\n    return res;\n}\n```\n","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"Â∞èÁôΩËØªËÆ∫Êñá:Semantic Image Synthesis with Spatially-Adaptive Normalization","url":"/2019/05/18/Semantic-Image-Synthesis-with-Spatially-Adaptive-Normalization/","content":"[GauGAN: Changing Sketches into Photorealistic Masterpieces](https://www.youtube.com/watch?v=p5U4NgVGAwg&feature=youtu.be) 3ÊúàÁöÑÊó∂ÂÄôÔºåËã±‰ºüËææÂèëÂ∏É‰∫Ü‰∏Ä‰∏™ËßÜÈ¢ëÊå∫ÁÅ´ÁöÑÔºö ‰Ω†Âè™Ë¶ÅÁ≤óÁï•ÂãæÂãíÁÆÄÂçïÁöÑÁ∫øÊù°ÔºåAIÂ∞±ËÉΩÁîüÊàêÈÄºÁúüÁöÑÂÜôÂÆûÂõæÁâá„ÄÇ\n\n\n  \n  \n\n\n<!--more-->\n[GauGAN: Changing Sketches into Photorealistic Masterpieces](https://www.youtube.com/watch?v=p5U4NgVGAwg&feature=youtu.be) 3ÊúàÁöÑÊó∂ÂÄôÔºåËã±‰ºüËææÂèëÂ∏É‰∫Ü‰∏Ä‰∏™ËßÜÈ¢ëÊå∫ÁÅ´ÁöÑÔºö ‰Ω†Âè™Ë¶ÅÁ≤óÁï•ÂãæÂãíÁÆÄÂçïÁöÑÁ∫øÊù°ÔºåAIÂ∞±ËÉΩÁîüÊàêÈÄºÁúüÁöÑÂÜôÂÆûÂõæÁâá„ÄÇ\n\n![68747470733a2f2f6e766c6162732e6769746875622e696f2f53504144452f2f696d616765732f6f6365616e2e676966](https://camo.githubusercontent.com/a295a79daea9d1dd0cb16b48055607d0f17258b2/68747470733a2f2f6e766c6162732e6769746875622e696f2f53504144452f2f696d616765732f6f6365616e2e676966)\n[GitHubÂú∞ÂùÄ](https://github.com/NVlabs/SPADE)\nÈÇ£ÂÆÉÊòØÊÄé‰πàÂÆûÁé∞ÁöÑÂë¢Ôºü Ëøô‰∏™È°πÁõÆÁî®ÁöÑÊòØGANÁÆóÊ≥ï„ÄÇ\n## GANÊ®°ÂûãÁöÑ‰ªªÂä°Ôºö \n**Â≠¶‰π†‰ªªÂä°** : ËæìÂÖ•semantic segmentation mask, ÂêàÊàê photorealistic images„ÄÇ \n\n`Semantic Image` ÊòØÂï•ÂèªÔºü Áõ¥ËßÇ‰∏äÁêÜËß£ÔºåÂ¶Ç‰∏ãÂõæÔºö \n\n![31085460.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/31085460.png)\n\n`Image segmentation`Âë¢Ôºü \n```\nImage segmentation is a computer vision task in which we label specific regions of an image according to what's being shown. \nthe goal of semantic image segmentation is to label each pixel of an image with a corresponding class of what is being represented.\n```\nÂ¶Ç‰∏ãÂõæÈáåÁöÑÊØè‰∏™ÂÉèÁ¥†ÈÉΩË¢´ÂàÜÁ±ªÂΩíÂ±ûÂà∞‰∏çÂêåÁöÑclass\n![Screen-Shot-2018-05-17-at-9.02.15-PM.png](https://www.jeremyjordan.me/content/images/2018/05/Screen-Shot-2018-05-17-at-9.02.15-PM.png)\n[ÂõæÁâáÊù•Ê∫ê](https://www.jeremyjordan.me/semantic-segmentation/#representing)\n\n## SPADE:  SPatially-Adaptive (DE)normalization\n\n### [Normalizaing training sets](https://mooc.study.163.com/learn/2001281003?tid=2001391036&_trace_c_p_k2_=5c39b3d9b1544824a0675bd3f4ed78d5#/learn/content?type=detail&id=2001701046)\nÈ¶ñÂÖàÔºåË¶Å‰∫ÜËß£‰∏Ä‰∏ãNormalizationÁöÑÂ§ÑÁêÜË∑üÂ•ΩÂ§Ñ„ÄÇ\n\n**Â§ÑÁêÜ**Ôºö ‰ª•ÈÄªËæëÂõûÂΩí‰∏∫‰æã, ÂÆÉÁöÑËæìÂÖ•ÁâπÂæÅ$X$,ÊùÉÈáç$W$, mapÂáΩÊï∞Â¶Ç‰∏ã\n$$f(x) = \\sum_{i=1}^{n}x_i*w_i$$\n\n1. ÂÖàÊ±ÇËæìÂÖ•ÁöÑÁâπÂæÅ$x$ÁöÑÊúüÊúõ\n$$\\mu=\\frac{1}{n}\\sum_{i=1}^{n}x_i$$\n\n2. ÂÜçÊ±Ç$x$ÁöÑÊñπÂ∑Æ\n\n$$\\sigma^2 = \\frac{1}{n} \\sum_{i=1}^{n}(x_i - \\mu)^2$$\n\n3. ÂÜçÂØπËæìÂÖ•ÁâπÂæÅÂÅöNormalization: \n$$\\frac{x-u}{\\sigma^2}$$\n\n**Â•ΩÂ§Ñ**ÊòØÔºåÁªèËøáÂ§ÑÁêÜÁöÑinputÁâπÂæÅÂÄºÂàÜÂ∏ÉÊõ¥ÈõÜ‰∏≠ÂùáÂåÄÔºå Â¶Ç‰∏ãÂõæÁöÑÁ¨¨‰∏â‰∏™ÂùêÊ†áÁ≥ªÔºå \n![826f032b.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/826f032b.png)\n\nÂØπ‰∫éÊçüÂ§±ÂáΩÊï∞Ôºå\n$$J(w, x) = \\frac{1}{m}\\sum_{i=1}^{m}L(\\hat{y}, y)$$\nÁî®Ê¢ØÂ∫¶‰∏ãÈôçËÆ≠ÁªÉWÔºåBÁöÑÊó∂ÂÄôÔºåNormalizationÂêéÔºåÂΩ¢Áä∂Êõ¥ÂúÜ‰∏Ä‰∫õÔºåÊõ¥ÂÆπÊòì‰ºòÂåñ„ÄÇÊó†ËÆ∫ÂàùÂßã‰ªéÂì™‰∏™‰ΩçÁΩÆÂºÄÂßãÔºå‰Ω†ÈÉΩÂèØ‰ª•Áî®ËæÉÂ§ßÁöÑÊ≠•Èïø,ÊØîËæÉÂÆπÊòìÊâæÂà∞ÈÄÇÂêàÁöÑw,bÁöÑÂÄºÔºå‰ΩøÂæóJÔºàw,b)ÁöÑÂÄºÊúÄÂ∞è„ÄÇ\n![6ad7add2.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/6ad7add2.png)\n\n### [Batch Normalization](https://mooc.study.163.com/learn/2001281003?tid=2001391036&_trace_c_p_k2_=f3e0afd9612c439a9f25d08040d39eab#/learn/content?type=detail&id=2001701055) \n[ÊîπÂñÑÊ∑±Â±ÇÁ•ûÁªèÁΩëÁªúÔºöË∂ÖÂèÇÊï∞Ë∞ÉËØï„ÄÅÊ≠£ÂàôÂåñ‰ª•Âèä‰ºòÂåñ - ÁΩëÊòì‰∫ëËØæÂ†Ç](https://mooc.study.163.com/learn/2001281003?tid=2001391036&_trace_c_p_k2_=f3e0afd9612c439a9f25d08040d39eab#/learn/content?type=detail&id=2001701055)\n\nBatch Norm‰∏çÊ≠¢normailize input feature;‰πüÂèØÂ∞Ünormalization processÂ∫îÁî®Âú®Á•ûÁªèÁΩëÁªú‰∏≠ÁöÑhidden layer‰∏ä„ÄÇ\n\n![747a0d26.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/747a0d26.png)\n\nÊØîÂ¶ÇÂØπÈöêËóèÂ±Ç$a^{[2]}$ÁöÑËæìÂá∫ËøõË°åÊ≠£ÂàôÂåñÂ§ÑÁêÜÔºåÂä†ÈÄü‰∏ã‰∏ÄÂ±ÇÁöÑÂèÇÊï∞$w^{[3]}$,$b^{[3]}$ÁöÑËÆ≠ÁªÉÈÄüÂ∫¶„ÄÇÊØîÂ¶Ç$a^{[2]}$Â±ÇÁöÑÁ•ûÁªèÂçïÂÖÉÂàÜÂà´ÊòØ $z^{(1)}, z^{(2)}...z^{(m)}$\n\nÂØπÂÆÉÁöÑÂ§ÑÁêÜÊòØ\n1. Ê±ÇÊúüÊúõ:\n$$\\mu = \\frac{1}{m}\\sum_{i=1}^{m}z_i$$\n2. Ê±ÇÊñπÂ∑Æ:\n$$\\sigma^2 = \\frac{1}{m}\\sum_{i=1}^{m}(z_i - u)^2$$\n3. norimal\n$$z_i = \\frac{z_i-u}{\\sqrt{\\sigma^2 + \\varepsilon}}$$\nÂä†‰∏ä$\\varepsilon$ÊòØÈò≤Ê≠¢$\\sigma^2$‰∏∫0\n4. Âä†‰∏ä $\\gamma$ Ë∑ü $\\beta$Ôºõ `scale and shift the normalized value`\n$$\\hat{z} = \\gamma z_i + \\beta$$\n \n\n$\\gamma$ Ë∑ü $\\beta$ ‰πüÊòØÂèÇÊï∞ÔºåË∑ü`w, b`‰∏ÄÊ†∑Âú®ËÆ≠ÁªÉËøáÁ®ã‰∏≠Ëø≠‰ª£Â≠¶‰π†„ÄÇ Á•ûÁªèÁΩëÁªú‰∏≠‰ªñ‰ª¨‰πüÂ∏∏Âú®ÊøÄÊ¥ªÂ±Ç‰πãÂâçËøõË°åBatch NormalizationÂ§ÑÁêÜ„ÄÇ \n\n### (Spatially-Adaptive normalization)SPADE\nËøôÁØáËÆ∫ÊñáÊèêÂá∫Ëá™Â∑±ÁöÑnormalizationÊÄùË∑ØÔºå$h^i$ÊòØ i-thÂ±ÇÁöÑÊøÄÊ¥ªÂáΩÊï∞ËæìÂá∫„ÄÇ\nÊ≠£ÂàôÂåñÂ§ÑÁêÜ:\n$$\\gamma_{c, y, x}^i (m)\\frac{h_{n, c, y, x}^i - \\mu_c^i}{\\sigma_c^i} + \\beta_{c, y, x}^{i}(m)$$\n\nc: $c \\epsilon C^i, C^i$ÊòØi-thÂ±ÇÁöÑchannel‰∏™Êï∞\nx: $x \\epsilon W^i, W^i$ÊòØi-thÂ±ÇÁöÑÂÆΩ\ny: $y \\epsilon H^i$, È´ò\nm: segmentation mask m\n$\\gamma_{c, y, x}^i$Ë∑ü$\\beta_{c, y, x}^{i}$ ÊòØÂáΩÊï∞ÔºåÁî®Âç∑ÁßØÁΩëÁªúÂÆûÁé∞\n\n**ÁªìÊûÑÂõæ**Ôºö \n\n![2f3fe4e8.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/1ec7011c.png)\n- `3x3-Conv-k`ÊòØ 3x3Âç∑ÁßØÂ±ÇÔºåÊúâk‰∏™Âç∑ÁßØfilter, filter size 3x3\n- `ReLU` ÊøÄÊ¥ªÂáΩÊï∞ \n- ËøôÈáåÁöÑ`Resize`Áî®ÁöÑÊòØ`nearest-neighbor downsampling`Ôºå‰∏çÁªÜËØ¥‰∫Ü„ÄÇ\n\nÂÆÉÁöÑÂ§ÑÁêÜÊµÅÁ®ãÊòØËøôÊ†∑ÔºåÂØπsematic image ËøõË°åresize„ÄÅÂç∑ÁßØ„ÄÅReLUÊøÄÊ¥ªÂ§ÑÁêÜÔºå Âç≥$\\gamma_{c, y, x}^i(m)$Ë∑ü$\\beta_{c, y, x}^{i}(m)$Ôºå ‰πò„ÄÅÂä†‰∏ä`Batch Normalization`ÁöÑËæìÂá∫Êï∞ÊçÆ$\\frac{h_{n, c, y, x}^i - \\mu_c^i}{\\sigma_c^i}$ Ôºå \n![ab4c46cb.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/ad9094aa.png)\n\nÊØîËµ∑‰º†ÁªüBatch Normal,SPADEÁöÑ$\\gamma_{c, y, x}^i(m)$Ë∑ü$\\beta_{c, y, x}^{i}(m)$ÊòØÂØπsematic imageÂÅöÂç∑ÁßØÊìç‰ΩúÔºåÂÆÉÂú®normalizationËøáÁ®ã‰∏≠‰øùÂ≠òÊõ¥Â§ösemanticÁöÑ‰ø°ÊÅØ„ÄÇËÆ∫Êñá‰∏≠‰πüËÆ§‰∏∫ËøôÊòØSPADEÊïàÊûúÊõ¥Â•ΩÁöÑÂéüÂõ†„ÄÇ\n\n#### Áõ∏ÂÖ≥‰ª£Á†ÅÔºö \n`normalization.py`\n\n```python\n//  Áî®‰º†ÁªüÁöÑnormalization methodÊ≠£ÂàôÂåñÊøÄÊ¥ªÂáΩÊï∞ËæìÂá∫\n  if param_free_norm_type == 'instance':\n      self.param_free_norm = nn.InstanceNorm2d(norm_nc, affine=False)\n  elif param_free_norm_type == 'syncbatch':\n      self.param_free_norm = SynchronizedBatchNorm2d(norm_nc, affine=False)\n  elif param_free_norm_type == 'batch':\n      self.param_free_norm = nn.BatchNorm2d(norm_nc, affine=False)\n  else:\n      raise ValueError('%s is not a recognized param-free norm type in SPADE'\n                             % param_free_norm_type)\n\n \n```\n```python\n   // ÊûÑÂª∫gamma,betaÂáΩÊï∞, Âç∑ÁßØÂ±ÇÂÆûÁé∞\n   self.mlp_gamma = nn.Conv2d(nhidden, norm_nc, kernel_size=ks, padding=pw)\n   self.mlp_beta = nn.Conv2d(nhidden, norm_nc, kernel_size=ks, padding=pw)\n```\n\n```python\n  def forward(self, x, segmap):\n\n        # Part 1. generate parameter-free normalized activations\n        normalized = self.param_free_norm(x)\n\n        # ‚ú®‚ú®‚ú® Part 2. produce scaling and bias conditioned on semantic map\n        segmap = F.interpolate(segmap, size=x.size()[2:], mode='nearest')\n        actv = self.mlp_shared(segmap)\n        gamma = self.mlp_gamma(actv)\n        beta = self.mlp_beta(actv)\n\n        # apply scale and bias\n        out = normalized * (1 + gamma) + beta\n\n        return out\n```\n\n\n## Ê®°ÂûãÊû∂ÊûÑ GANs\n\nGANsÁî±‰∏§ÈÉ®ÂàÜÁªÑÊàêÔºö \n\n1. generatorÔºöË¥üË¥£ÂêàÊàêÂÜôÂÆûÈ£éÊ†ºÁöÑÂõæÁâá\n2. discriminator: Ë¥üË¥£ÊâæËå¨„ÄÇËÆ§Âá∫ËøôÊòØÂº†ÂêàÊàêÂõæÁâáÔºå ËÄå‰∏çÊòØÁúüÂÆûÁöÑÁÖßÁâáÔºàor ÂÜôÂÆûÂõæÁâáÔºâ\n### generator Êû∂ÊûÑ\n\nÈ¶ñÂÖà\n\n![d3313a9e.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/d3313a9e.png)\n\nËøôÂπÖÂõæÈáåÂ•ΩÂ§öSPADE ResBlkÂïäÔºåÂï•ÊòØSPADE ResBlk? ‰∏ãÈù¢ÊòØÂÆÉÁöÑÁªìÊûÑÂõæÔºö \n\n![630b2d2a.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/630b2d2a.png)\n\n- `3x3-Conv-k`ÊòØ 3x3Âç∑ÁßØÂ±ÇÔºåÊúâk‰∏™Âç∑ÁßØfilter, filter size 3x3\n- `ReLU` ÊøÄÊ¥ªÂáΩÊï∞\n- SPADEÊøÄÊ¥ªËßÅ‰∏äÊñáÂàÜÊûê\n\n\nÈÇ£`ResBlk`Âë¢Ôºü \nËøôË¶Å‰ªéÂ§ßÂêçÈºéÈºéÁöÑÊÆãÂ∑ÆÁΩëÁªúËØ¥Ëµ∑ [Residual block](https://mooc.study.163.com/learn/2001281004?tid=2001392030&_trace_c_p_k2_=5c60eb2c1e0d4adbb2516471e9ebb431#/learn/content?type=detail&id=2001728692) ÔºàÂº∫ÁÉàÊé®ËçêAndrew NgÂÖ¨ÂºÄËØæ; ÂºÑÊòéÁôΩÂá†‰∏™ÁÇπÔºö 1. Residual BlockË¶ÅËß£ÂÜ≥‰ªÄ‰πàÈóÆÈ¢ò;  2. ÂÆÉÁöÑËÆæËÆ°;  3. ‰∏∫Âï•ÊúâÊïà„ÄÇ ÂÜçÂõûÊù•ÁúãSPADE ResBlk)\n\n![fd021761.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/fd021761.png)\n```python\n    def __init__(self, fin, fout, opt):\n        super().__init__()\n        # Attributes\n        self.learned_shortcut = (fin != fout)\n        fmiddle = min(fin, fout)\n\n        # create conv layers\n        self.conv_0 = nn.Conv2d(fin, fmiddle, kernel_size=3, padding=1)\n        self.conv_1 = nn.Conv2d(fmiddle, fout, kernel_size=3, padding=1)\n        if self.learned_shortcut:\n            self.conv_s = nn.Conv2d(fin, fout, kernel_size=1, bias=False)\n\n        # apply spectral norm if specified\n        if 'spectral' in opt.norm_G:\n            self.conv_0 = spectral_norm(self.conv_0)\n            self.conv_1 = spectral_norm(self.conv_1)\n            if self.learned_shortcut:\n                self.conv_s = spectral_norm(self.conv_s)\n\n        # ‚ú®‚ú®‚ú® define normalization layers\n        spade_config_str = opt.norm_G.replace('spectral', '')\n        self.norm_0 = SPADE(spade_config_str, fin, opt.semantic_nc)\n        self.norm_1 = SPADE(spade_config_str, fmiddle, opt.semantic_nc)\n        if self.learned_shortcut:\n            self.norm_s = SPADE(spade_config_str, fin, opt.semantic_nc)\n```\n## Discriminator \n\ndiscriminatorÊû∂ÊûÑÂõæ„ÄÇ (segmentation image,  image)‰Ωú‰∏∫ËæìÂÖ•Ôºå ‰ªªÂä°ÊòØËØÜÂà´imageÊòØ‰∏çÊòØÂÅáÁöÑ„ÄÇ\n![c5347e81.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/c5347e81.png)\n\nimage encoderÂ∞ÜÂõæÁâáencodeÁîüÊàêÂùáÂÄºÂêëÈáèË∑üÊñπÂ∑ÆÂêëÈáèÔºå ËÆ°ÁÆóÂá∫noise inputËæìÂÖ•Áªôgenerator, segmentation mask‰πü‰ºöÈÄöËøáSPADE ResBlksËæìÂÖ•Áªôgenerator„ÄÇ generatorÁîüÊàêimageË∑üsegmentation image contactÂêéÔºåÂÜçËæìÂÖ•Áªôdiscriminator, discriminatorÊù•Ëæ®Âà´Áúü‰º™„ÄÇ \n![f4341bd9.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/f4341bd9.png)\n\n### Training Data \n\nÊàêÂØπÁöÑsegmentation masksË∑üÁúüÂÆûÂõæÁâá„ÄÇ (segmentation mask, real image) \n\n### Test \n\n1.ÂÆâË£Ö:\n\n```sh\ngit clone https://github.com/NVlabs/SPADE.git\ncd SPADE/\n```\n2.Ëøô‰∏™È°πÁõÆ‰æùËµñPyTorch 1.0Ë∑üpython3.0+. Ëøò‰æùËµñSynchronized-BatchNorm-PyTorch‰ªìÂ∫ì„ÄÇ\n\n```\n// SPADEÁõÆÂΩï‰∏ã\ncd models/networks/\ngit clone https://github.com/vacancy/Synchronized-BatchNorm-PyTorch\ncp -rf Synchronized-BatchNorm-PyTorch/sync_batchnorm .\ncd ../../\n```\n3.Áî®PyCharmÊâìÂºÄËøô‰∏™È°πÁõÆ, Preference -> Project Interpreter -> Project -> Project Interpreter; ÈÄâpython3.+ÁöÑËß£ÈáäÂô®, PyCharm‰ºöÊèêÁ§∫ÂÆâË£Ö‰æùËµñÁöÑpackage„ÄÇ‰æùËµñÂåÖÂÆâË£ÖÂ•ΩÂêéÔºåÂ¶Ç‰∏ãÂõæ: \n\n![ed349b19.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/ed349b19.png)\n\n4.‰∏ãËΩΩÊèêÂâçËÆ≠ÁªÉÂ•ΩÁöÑÊ®°Âûã\n[checkpoints.tar.gz - Google ‰∫ëÁ´ØÁ°¨Áõò](https://drive.google.com/file/d/12gvlTbMvUcJewQlSEaZdeb2CdOB-b8kQ/view)\n\n```\ncd checkpoints\ntar xvf checkpoints.tar.gz\ncd ../\n\nls\n// checkpointsÁõÆÂΩïÂ¶Ç‰∏ã:\nade20k_pretrained     checkpoints.tar.gz    cityscapes_pretrained coco_pretrained\n```\n5.ÁºñËæëConfiguration, ËøêË°åtest.pyËÑöÊú¨„ÄÇ\n```sh\npython test.py --name [type]_pretrained --dataset_mode [dataset] --dataroot [path_to_dataset]\n```\n\nÂèÇÊï∞Ôºö \n- `[type]_pretrained` ÂÖàÊ∏≤ÊüìÂ•ΩÁöÑÊ®°ÂûãÔºåcoco_pretrainedÔºå ade20k_pretrainedÔºå cityscapes_pretrained‰∏≠‰ªªÈÄâ‰∏Ä‰∏™„ÄÇ\n- `[dataset]` Â°´coco, ade20k, ÊàñËÄÖcityscapes \n- `[path_to_dataset]` Êï∞ÊçÆÔºåÊØîÂ¶Ç./datasets/coco_stuff\n\nÊØîÂ¶ÇÔºåÊàëÁöÑÂèÇÊï∞: \n```\n--name\ncoco_pretrained\n--dataset_mode\ncoco\n--dataroot\n./datasets/coco_stuff\n--gpu_ids\n-1\n```\nËæìÂá∫ÁöÑË∑ØÂæÑÔºö `./results/[type]_pretrained/` ÊàëÁöÑÊòØ`./results/coco_pretrained/`\n\n![412b71cb.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/412b71cb.png)\n\nËøôÂá†Âº†ÂõæÁâáÁúüÊòØÁúãÁöÑÊàëÊúâÁÇπÂ§±ÊúõÔºåÂÜçÁúãÁúã‰∏ãÂõæËÆ∫ÊñáÁöÑÂõæÁâá„ÄÇ ÊûúÁÑ∂ËÆ∫ÊñáÁöÑÂõæÁâáÈÉΩÊòØÁ≤æÊåëÁªÜÈÄâ, Â•óË∑ØÊª°Êª°„ÄÇ\n\n![b037261d.png](/img/7c2b5608-840f-411f-bcd4-024df194b0de/b037261d.png)\n\n- [An overview of semantic image segmentation.](https://www.jeremyjordan.me/semantic-segmentation/)","tags":["Image Segment"],"categories":["Neural Network"]},{"title":"React NativeË∞ÉËØï:Expo + WebStorm","url":"/2019/05/14/React-NativeË∞ÉËØï-Expo-WebStorm/"},{"title":"The Weights of the YOLO Neural Network","url":"/2019/05/12/The-Weights-of-the-YOLO-Neural-Network/","content":"\n## Load Weights\n\nFirst, see this C library function:  \n```c\nsize_t fread ( void * ptr, size_t size, size_t count, FILE * stream );\n```\n**Parameters**\n- **ptr** ‚àí Pointer to a block of memory with a size of at least (size*count) bytes, converted to a void*.\n\n- **size** ‚àí This is the size in bytes of each element to be read.\n\n- **count** ‚àí This is the number of elements, each one with a size of size bytes.\n\n- **stream** ‚àí This is the pointer to a FILE object that specifies an input stream.\n\nThen, in the `load_weights_upto` function in `parser.c`, it begins to load weights for layers from xxx.weights. \n```c\nvoid load_weights_upto(network *net, char *filename, int start, int cutoff) {\n ...\n     // Begin to load weights for layers\n    for(i = start; i < net->n && i < cutoff; ++i){\n        layer l = net->layers[i];\n        if (l.dontload) continue;\n        if(l.type == CONVOLUTIONAL || l.type == DECONVOLUTIONAL){\n            load_convolutional_weights(l, fp);\n        }\n  ...\n}\n```\n\n### Convolutional Layer\nIn `load_convolutional_weights` function, it loads values of biases for filters. One bias for one filter. \n\n```c\n    fread(l.biases, sizeof(float), l.n, fp);\n```\n`l.n` is the number of filter in this layer. \n\nAssign the values to scales, rolling_mean and rooling_variance \n```\n if (l.batch_normalize && (!l.dontloadscales)){\n        fread(l.scales, sizeof(float), l.n, fp);\n        fread(l.rolling_mean, sizeof(float), l.n, fp);\n        fread(l.rolling_variance, sizeof(float), l.n, fp);\n```\n        \nAnd load weights for filters in this layer. The default value of `l.groups` is 1.\n```c\n    int num = l.c/l.groups*l.n*l.size*l.size;\n    fread(l.weights, sizeof(float), num, fp);\n```\n\n`l.c` is input channel. The number of input channel equal to the number of channel of a filter in this layer. Thus, `l.size` is the size of a filter.\n\nFor a 3x3x3 filter (size=3, channel=3), it has 3x3x3=27 parameters as follow  \n\n![-w208](/img/15576478323378/15576531132966.jpg)\n\nIf a convolutional layer has 3 such filters, it will have 3 values for bias, 3x3x3x3 .Its weight layout in memory is like this: \n\n![-w746](/img/15576478323378/15576535368751.jpg)\n\n## Write Weights \n\n`save_weights_upto` and `save_convolutional_weights`functions show how to save weights into a xxx.weights file. It's just a reverse process. \n\n```c\nvoid save_convolutional_weights(layer l, FILE *fp)\n{\n    if(l.binary){\n        //save_convolutional_weights_binary(l, fp);\n        //return;\n    }\n    int num = l.nweights;\n    fwrite(l.biases, sizeof(float), l.n, fp);\n    if (l.batch_normalize){\n        fwrite(l.scales, sizeof(float), l.n, fp);\n        fwrite(l.rolling_mean, sizeof(float), l.n, fp);\n        fwrite(l.rolling_variance, sizeof(float), l.n, fp);\n    }\n    fwrite(l.weights, sizeof(float), num, fp);\n}\n```\n\n```\nsize_t fwrite ( const void * ptr, size_t size, size_t count, FILE * stream );\n\n```\n\n**Parameters**\n- **ptr**\nPointer to the array of elements to be written, converted to a const void*.\n- **size**\nSize in bytes of each element to be written.\nsize_t is an unsigned integral type.\n- **count**\n Number of elements, each one with a size of size bytes.\nsize_t is an unsigned integral type.\n- **stream**\nPointer to a FILE object that specifies an output stream.\n","tags":["YOLO"],"categories":["Neural Network"]},{"title":"LeetCode:237. Delete Node in a Linked List","url":"/2019/05/12/LeetCode-237-Delete-Node-in-a-Linked-List/","content":"\nWrite a function to delete a node (except the tail) in a singly linked list, given only access to that node.\n\n<!--more-->\n\n## [È¢òÁõÆ](https://leetcode.com/problems/delete-node-in-a-linked-list/)\n\nWrite a function to delete a node (except the tail) in a singly linked list, given only access to that node.\n\nGiven linked list -- head = [4,5,1,9], which looks like following:\n\n![237_example.png](https://assets.leetcode.com/uploads/2018/12/28/237_example.png)\n\n## ÂàÜÊûêÔºö \n\nÂ¶ÇÊûúÊàë‰ª¨Êúâ‰∏Ä‰∏™Â¶Ç‰∏ãÁöÑLinked ListÔºåÊÉ≥Âà†Èô§ÂÄºÊòØ5ÁöÑËäÇÁÇπ. ËøôÈÅìÈ¢òË¶ÅÊ±Ç Ôºå`only access to that node`„ÄÇ\n\n```\n4 -> 5 -> 1\n```\n\n![48d29b19.png](/img/f394f304-a25b-4128-bcaa-779a974c8c4a/48d29b19.png)\nÁïôÊÑèÂõæ‰∏≠ÔºåË¶ÅÂà†Èô§ÁöÑÂØπË±°ÁöÑÂú∞ÂùÄÊòØ0x7ff07ae00090\n\n```c++\n    void deleteNode(ListNode* node) {\n        *node = *(node->next);\n    }\n```\n\n`*node`ÂØπnodeÊåáÈíàÂèñÂÜÖÂÆπÔºåËøîÂõûÊòØ‰∏Ä‰∏™ÂØπË±°, ÂØπË±°Âú∞ÂùÄ0x7ff07ae00090\n\n![f94bba4f.png](/img/f394f304-a25b-4128-bcaa-779a974c8c4a/f94bba4f.png)\n\n`*node->next`ÂØπnodeÊåáÈíàÂèñÂÜÖÂÆπÔºåËøîÂõûÊòØ‰∏Ä‰∏™ÂØπË±°Ôºå ÂØπË±°Âú∞ÂùÄ0x7ff07ae000a0\n\n![69411ad8.png](/img/f394f304-a25b-4128-bcaa-779a974c8c4a/69411ad8.png)\n\nÊâßË°å\n```\n*node = *(node->next);\n```\nÁªìÊûúÂ¶Ç‰∏ãÔºö \n\n![83d8670d.png](/img/f394f304-a25b-4128-bcaa-779a974c8c4a/83d8670d.png)\n\nnodeÊåáÈíàÊâÄÊâßË°åÁöÑÂØπË±°Âú∞ÂùÄ‰∏çÂèòÔºå‰ΩÜÊòØÂØπË±°ÂÜÖÂÆπÂèëÁîüÂèòÂåñ„ÄÇÂ∞±ÂÉè‰∏â‰∏™ÊàøÂ≠êÔºå‰ΩçÁΩÆÊ≤°ÂèòÔºå ‰ΩÜÊòØÁ¨¨‰∏â‰∏™ÊàøÂ≠êÈáåÁöÑ‰ΩèÊà∑Êê¨Âà∞‰∫ÜÁ¨¨‰∫å‰∏™ÊàøÂ≠êÈáå‰Ωè‰∫Ü„ÄÇ nodeÊåáÈíàÊåáÂêëÁöÑÂØπË±°ÁöÑÂú∞ÂùÄ‰æùÊóßÊòØ0x7ff07ae00090, val‰∏çÂÜçÊòØ5ËÄåÊòØ1Ôºå nextÊåáÈíà‰πüÊâßÂêëNULL„ÄÇ‰ΩÜÊòØÊàë‰ª¨‰πü‰∏¢Â§±‰∫ÜÂØπ0x7ff07ae000a0ÂØπË±°ÁöÑÊåáÈíàÂºïÁî®„ÄÇ\n\n![e8798a20.png](/img/f394f304-a25b-4128-bcaa-779a974c8c4a/e8798a20.png)","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"LeetCode  Flatten a Multilevel Doubly Linked List","url":"/2019/05/12/LeetCode-Flatten-a-Multilevel-Doubly-Linked-List/","content":"Flatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.\n\n<!--more-->\n\nÈ¢òÁõÆÔºö [430. Flatten a Multilevel Doubly Linked List]([Loading...](https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/)\n)\n\nÂàÜÊûêÔºö \n![da80f35a.png](/img/ed6ee62a-3dcb-4189-9404-14b91692d436/da80f35a.png)\n\n ÂΩìÈÅáÂà∞ÊúâchildÁöÑNodeÔºåÂÖàÁî®`*next`Â≠òcur->next; Êääcur->nextÊåáÈíàÊåáÂêëchild, child->preÊåáÂêëcurÔºõ Êé•ÁùÄ‰ª•child‰∏∫Ëµ∑ÁÇπÊâæÂà∞ËØ•ÊõæÊúÄÂêé‰∏Ä‰∏™NodeÔºåËÆ©ÂÆÉÊåáÂêë`*next`ÁöÑËäÇÁÇπ„ÄÇ Êé•ÁùÄ‰ª•ÂéüÊù•ÁöÑchild‰∏∫cur NodeÈáçÊñ∞ÂºÄÂßã‰∏ÄËΩÆ„ÄÇ \n\n```c++\n    class Node {\n    public:\n        int val;\n        Node *prev;\n        Node *next;\n        Node *child;\n\n        Node() {}\n\n        Node(int _val, Node *_prev, Node *_next, Node *_child) {\n            val = _val;\n            prev = _prev;\n            next = _next;\n            child = _child;\n        }\n    };\n\n    Node *flatten(Node *head) {\n        Node *cur = head;\n        while (cur) {\n            if (cur->child) {\n                Node *next = cur->next;\n                cur->next = cur->child;\n                cur->child = nullptr;\n                cur->next->prev = cur;\n\n                // iter the children \n                Node *p = cur->next;\n                while (p->next) p = p->next;\n                  \n                p->next = next;\n                if (next) next->prev = p;\n            }\n            cur = cur->next;\n        }\n\n        return head;\n    }\n```\n\nÊó∂Èó¥Â§çÊùÇÂ∫¶Ôºö $O(n)$","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"The Architecture of YOLO-Tiny Neural Network","url":"/2019/05/08/The-Implementation-of-Convolutional-and-MaxPool-layer/","content":" Now, let's see how Darknet construct a nerual network. See at `detector.c` `test_detector` function, it construct a network by parsing  the `xxx.cfg` file and `xxx.weights` file. In my case, they are yolo3-tiny.cfg and yolo3-tiny.weights \n <!-- more --> \n\n\nI am trying to understand [Darknet source code](https://pjreddie.com/darknet/yolov2/) that implements YOLO algorithm. First, I run the detector.\n\n```\n./darknet detect cfg/yolov3-tiny.cfg yolov3-tiny.weights data/dog.jpg\n```\n## Parse the argumenets \n\nIn `main` function, it goes to function `test_detector` according to the first argument`detect`. \n\n```c\nif (0 == strcmp(argv[1], \"detect\")){\n   float thresh = find_float_arg(argc, argv, \"-thresh\", .5);\n   char *filename = (argc > 4) ? argv[4]: 0;\n   char *outfile = find_char_arg(argc, argv, \"-out\", 0);\n   int fullscreen = find_arg(argc, argv, \"-fullscreen\");\n   test_detector(\"cfg/coco.data\", argv[2], argv[3], filename, thresh, .5, outfile, fullscreen);\n   }   \n```\n\nHere is the architecture of neural network defined by yolov3-tiny.cfg\n\n```\n\nlayer     filters    size              input                output\n    0 conv     16  3 x 3 / 1   416 x 416 x   3   ->   416 x 416 x  16  0.150 BFLOPs\n    1 max          2 x 2 / 2   416 x 416 x  16   ->   208 x 208 x  16\n    2 conv     32  3 x 3 / 1   208 x 208 x  16   ->   208 x 208 x  32  0.399 BFLOPs\n    3 max          2 x 2 / 2   208 x 208 x  32   ->   104 x 104 x  32\n    4 conv     64  3 x 3 / 1   104 x 104 x  32   ->   104 x 104 x  64  0.399 BFLOPs\n    5 max          2 x 2 / 2   104 x 104 x  64   ->    52 x  52 x  64\n    6 conv    128  3 x 3 / 1    52 x  52 x  64   ->    52 x  52 x 128  0.399 BFLOPs\n    7 max          2 x 2 / 2    52 x  52 x 128   ->    26 x  26 x 128\n    8 conv    256  3 x 3 / 1    26 x  26 x 128   ->    26 x  26 x 256  0.399 BFLOPs\n    9 max          2 x 2 / 2    26 x  26 x 256   ->    13 x  13 x 256\n   10 conv    512  3 x 3 / 1    13 x  13 x 256   ->    13 x  13 x 512  0.399 BFLOPs\n   11 max          2 x 2 / 1    13 x  13 x 512   ->    13 x  13 x 512\n   12 conv   1024  3 x 3 / 1    13 x  13 x 512   ->    13 x  13 x1024  1.595 BFLOPs\n   13 conv    256  1 x 1 / 1    13 x  13 x1024   ->    13 x  13 x 256  0.089 BFLOPs\n   14 conv    512  3 x 3 / 1    13 x  13 x 256   ->    13 x  13 x 512  0.399 BFLOPs\n   15 conv    255  1 x 1 / 1    13 x  13 x 512   ->    13 x  13 x 255  0.044 BFLOPs\n   16 yolo\n   17 route  13\n   18 conv    128  1 x 1 / 1    13 x  13 x 256   ->    13 x  13 x 128  0.011 BFLOPs\n   19 upsample            2x    13 x  13 x 128   ->    26 x  26 x 128\n   20 route  19 8\n   21 conv    256  3 x 3 / 1    26 x  26 x 384   ->    26 x  26 x 256  1.196 BFLOPs\n   22 conv    255  1 x 1 / 1    26 x  26 x 256   ->    26 x  26 x 255  0.088 BFLOPs\n   23 yolo\n```\nNow, let's see how Darknet construct a nerual network. See  `detector.c` `test_detector` function, it construct a network by parsing  the `xxx.cfg` file and `xxx.weights` file. In my case, they are yolo3-tiny.cfg and yolo3-tiny.weights \n\n\n## Parse the configuration file\n\n### Sections in the file \n\nparse the yolo.cfg file here \n\n```c\nlist *read_cfg(char *filename)\n{\n    FILE *file = fopen(filename, \"r\");\n    if(file == 0) file_error(filename);\n    char *line;\n    int nu = 0;\n    list *options = make_list();\n    section *current = 0;\n    while((line=fgetl(file)) != 0){\n        ++ nu;\n        strip(line);\n        switch(line[0]){\n            case '[':\n                current = malloc(sizeof(section));\n                list_insert(options, current);\n                current->options = make_list();\n                current->type = line;\n                break;\n            case '\\0':\n            case '#':\n            case ';':\n                free(line);\n                break;\n            default:\n                if(!read_option(line, current->options)){\n                    fprintf(stderr, \"Config file error line %d, could parse: %s\\n\", nu, line);\n                    free(line);\n                }\n                break;\n        }\n    }\n    fclose(file);\n    return options;\n}\n```\n\n\nfor exmaple: \n\n```js\n[net]              // '[' is a tag for a section, the type of current setion is '[net]'\n# Testing          // ignore\nbatch=1         \nsubdivisions=1\n# Training\n# batch=64\n# subdivisions=2\nwidth=416\nheight=416\nchannels=3\nmomentum=0.9\ndecay=0.0005\nangle=0\nsaturation = 1.5\nexposure = 1.5\nhue=.1\n                 // ignore\nlearning_rate=0.001\n...\n\n[convolutional]    // [convoltional] \n...\n\n[maxpool]      // [maxpool] \n\n...\n[yolo]\n...\n\n[route]\n...\n\n```\n\n#### `[net]`\n\nIn section '[net]', `batch=1` is a option stored in `kvp`(option_list.c line 70) struct. Its key is batch, value is 1. Then this kvp object will be inserted into a node list (see it at option_list.c line76 & list.c line 40).\nAfter parsing the yolo3-tiny.cfg file, We will get a section list; its size is 25. Because there are 25 \\'[\\' tags in yolo3-tiny.cfg\n\n\nIn `parse_network_cfg` function, it parses the `[net]` section to get the params for the whole network. \n\n```c\nnetwork *parse_network_cfg(char *filename)\n{\n    list *sections = read_cfg(filename);\n    node *n = sections->front;\n    if(!n) error(\"Config file has no sections\");\n    network *net = make_network(sections->size - 1);\n    // other codes ...\n    \n}\n```\n\n#### `[convolutional]`\n\nThen parse the different sections. \n\n```c\n        s = (section *)n->val;\n        options = s->options;\n        layer l = {0};\n        LAYER_TYPE lt = string_to_layer_type(s->type);\n        if(lt == CONVOLUTIONAL){\n            l = parse_convolutional(options, params);\n        }else if(lt == DECONVOLUTIONAL){\n            l = parse_deconvolutional(options, params);\n        }else if(lt == LOCAL){\n            l = parse_local(options, params);\n        }else if(lt == ACTIVE){\n            l = parse_activation(options, params);\n        // other code here ...\n       \n```\n\n\nFor the first `[convolutional]` section in the yolo3-tiny.cfg as follow, the darknet will construct a `convolutional_layer` using thess params (see function `parse_convolutional` in parse.c and  function `make_convolutional_layer` in convolutional_layer.c)\n\n```js\n[convolutional]\nbatch_normalize=1\nfilters=16\nsize=3\nstride=1\npad=1\nactivation=leaky\n```\n\nIn this layer, there are 16 filters; the size of each filter is 3X3Xnum_channel; what is num_channel? well, `the number of channels in a filter must match the number of channels in input volume`, so here num_channel is equal to 3. The stride value for filters is 1, padding value is 1. \n\n\nLet's see how darknet calculate the output size of convolutional_layer by the input size(`l.h`) and filter params (`l.size`, `l.pad`, `l.stride`). There is a formula that shows how size of input volume relates to the one of output volume\n \n\n```c\n\nint convolutional_out_height(convolutional_layer l)\n{\n    return (l.h + 2*l.pad - l.size) / l.stride + 1;\n}\n\nint convolutional_out_width(convolutional_layer l)\n{\n    return (l.w + 2*l.pad - l.size) / l.stride + 1;\n}\n\n```\n\n As for yolo3-tiny.cfg, for this first convolutional_layer, its input size is 416 x 416 and channel is 3. So its ouput height is (416+2x1 - 3)/1 + 1 = 416, its output width is 416 too. `What about its output channel? It equals to the number of filters (16)`. \n \n ```c\n \n  l.out_c = n    // in func make_convolutional_layer\n  \n ```\n So its output volume size is 416 X 416 X 16.\n \n \n ![02b028d9.png](/img/995676c2-24ed-4165-8224-0bc01148242a/9b76325f.png)\n \n For a beginner, I strongly recommend these courses: [Strided Convolutions - Foundations of Convolutional Neural Networks \\| Coursera](https://www.coursera.org/lecture/convolutional-neural-networks/strided-convolutions-wfUhx) and  [One Layer of a Convolutional Network - Foundations of Convolutional Neural Networks \\| Coursera](https://www.coursera.org/lecture/convolutional-neural-networks/one-layer-of-a-convolutional-network-nsiuW)\n  \nNow, we have 16 filters that are 3X3X3 in this layer, `how many parameters does this layer have`?  Each filter is a 3X3X3 volume, so it's 27 numbers tp be learned, and then plus the bias, so that was the b parameters. it's 28 parameters. There are 16 filters so that would be 448 parameters to be learned in this layer. \n \n```c\n\n    // c: the number of channels; n: the number of filters; \n    // size: the number of filter width or height; groups: default is 1 \n    l.weights = calloc(c/groups*n*size*size, sizeof(float));\n    l.weight_updates = calloc(c/groups*n*size*size, sizeof(float));\n\n    l.biases = calloc(n, sizeof(float));\n    l.bias_updates = calloc(n, sizeof(float));\n\n    l.nweights = c/groups*n*size*size;\n    l.nbiases = n;\n\n```\n \n \n#### Activation \n \n In this convolution layer, it choose leaky ReLU as activation function. The function is defined as follow  where Œ± is a small constant.\n \n $$\nf(x)=\\begin{cases}\nŒ±x,\\quad x\\leq 0 \\\\\\\\ \nx,\\quad x>0\n\\end{cases}\n$$\n\n \n Still, I recommend this course for a beginner. [Activation functions - Shallow neural networks \\| Coursera](https://www.coursera.org/lecture/neural-networks-deep-learning/activation-functions-4dDC1)\n\n \nThere are `forward_activation_layer` and `backward_activation_layer` in Darknet. Both of them handle batch inputs. \n\nFor forward activation layer, leaky_activate is to computes f(x)\n\n ```c\n static inline float leaky_activate(float x){return (x>0) ? x : .1*x;}\n ```\n For backward activation layer, leaky_gradient returns the slop of the function \n\n```c\nstatic inline float leaky_gradient(float x){return (x>0) ? 1 : .1;}\n```\n\n\n \n \n#### [maxpool]\n \n Maxpool layer is used to reduce the size of representation to speed up computation as well as to make some of the features it detects a bit more robust. Look at the `tiny-yolo3.cfg`\n \n ```js\n [maxpool]\nsize=2\nstride=2\n\n ```\n ```c\n maxpool_layer make_maxpool_layer(int batch, int h, int w, int c, int size, int stride, int padding)\n{\n    maxpool_layer l = {0};\n    l.type = MAXPOOL;\n    l.batch = batch;\n    l.h = h;\n    l.w = w;\n    l.c = c;         // output channel equals to input one \n    l.pad = padding;  // default value is size - 1\n    l.out_w = (w + padding - size)/stride + 1;\n    l.out_h = (h + padding - size)/stride + 1;\n    l.out_c = c;\n    l.outputs = l.out_h * l.out_w * l.out_c;\n    // other codes ...\n    return l;\n}\n\n \n ```\n This `[maxpool]` sections comes after the `[convolutional]` section. Its input size(416 x 416 x 16) equal to the ouput size of the former layer (416 x 416 x  16). The filter size is 2 x 2, stride is 2. Each time, the filter would move 2 steps, for a 4x4x1 input volume, its output is 2x2x1 volume. \n![e65fb56d.png](/img/995676c2-24ed-4165-8224-0bc01148242a/e65fb56d.png)\n```\n9 == max(1, 3, 2, 9)\n2 == max(2, 1, 1, 1)\n6 == max(1, 3, 5, 6)\n3 == max(2, 3, 1, 2)\n```\nSo in this layer, its ouput width equals to (int)((416+ 1 - 2)/2 + 1), 208. And the number of its output channels equals to the number of input channels. Now, we know its output volume size is 208 X 208 X 16. There is no parameter to be learned. \n\n**input volume size**: \n\n$$ n_H . n_W . n_c$$\n\n  $n_c$ : the number of channels\n\n**output volume size**: \n\n$$(\\frac{n_H + pading-f}{stride} + 1) . (\\frac{n_W + padding-f}{stride} +1) . n_c$$\n \n$f$: the width or height of a filter\n \n [Pooling Layers - Foundations of Convolutional Neural Networks \\| Coursera](https://www.coursera.org/lecture/convolutional-neural-networks/pooling-layers-hELHk)\n \n #### Why does 1 x 1 convolution do? \n \n [Networks in Networks and 1x1 Convolutions - Deep convolutional models: case studies \\| Coursera](https://www.coursera.org/lecture/convolutional-neural-networks/networks-in-networks-and-1x1-convolutions-ZTb8x)\n \n \n For example, in this picture, the number of input volume channels ,192, has gotten too big, we can shrink it to a 28x28x32 dimension volume using 32 filters that are 1x1x192. So this is a way to shrink the number of channels .\n \n ![a085e0e4.png](/img/995676c2-24ed-4165-8224-0bc01148242a/a085e0e4.png)\n \n \n In YOLO, it implements fully connected layer by two convolutional layer. \n \n ```\n[convolutional]\nbatch_normalize=1\nfilters=256\nsize=3\nstride=1\npad=1\nactivation=leaky\n\n[convolutional]\nsize=1\nstride=1\npad=1\nfilters=255\nactivation=linear\n ```\n \n [Convolutional Implementation of Sliding Windows - Object detection \\| Coursera](https://www.coursera.org/lecture/convolutional-neural-networks/convolutional-implementation-of-sliding-windows-6UnU4)\n \n","tags":["YOLO"],"categories":["Neural Network"]},{"title":"LeetCode Unique Paths 1-2","url":"/2019/05/08/Leetcode-Unique-Paths-1-2/","content":"Leetcode Unique Paths 1-2 \n<!-- more --> \n\n# Unique Paths 1-2\n\n## È¢òÁõÆ1Ôºö [Unique Paths 1](https://leetcode.com/problems/unique-paths/)\n\n![e2ca2848.png](/img//c5619f25-13a6-4e38-b7f8-d87ff624f5b5/e2ca2848.png)\n\n### Âä®ÊÄÅËßÑÂàíËß£È¢òÊ≠•È™§Ë¶ÅÁÇπ: \n\n1. ÊâæÂà∞ÊúÄ‰ºòËß£ÁöÑÁªìÊûÑ\n2. ÈÄíÂΩíÊñπÊ°à\n3. bottom-up ÊàñËÄÖ top-downÊñπÂºèÊ±ÇÊúÄ‰ºòËß£\n4. ‰ºòÂåñÔºåÁ©∫Èó¥Êç¢Êó∂Èó¥\n\n### ÂàÜÊûê\n\nËøôÈÅìÈ¢òÂæàÁÆÄÂçï„ÄÇ\n1. ÂÆö‰πâ‰∏Ä‰∏™ mxn ÁöÑ‰∫åÁª¥Êï∞ÁªÑgrides[m][n]Ôºå ÂØπÂ∫îÊ†ºÂ≠êÂú∞Âõæ„ÄÇÂØπÂ∫îÈÄî‰∏≠grides[2][6]\n\n![e594b650.png](/img//c5619f25-13a6-4e38-b7f8-d87ff624f5b5/e594b650.png)\nÊØîÂ¶ÇÔºåÊàë‰ª¨ÊÉ≥Áü•ÈÅì‰ªé(0,0)Âà∞(1, 2)ÊúâÂá†Êù°Ë∑Ø„ÄÇÊ†πÊçÆÈ¢òÁõÆË¶ÅÊ±ÇÔºåÂè™ËÉΩÂæÄÂè≥Ëµ∞ÊàñËÄÖ‰∏ãËµ∞‰∏Ä‰∏™Ê†ºÂ≠ê„ÄÇ\nÊàë‰ª¨ÂÖàÁúã‰ªé(1, 1)Âà∞Ôºà1Ôºå2ÔºâÔºå‰∏§ÁßçËµ∞Ê≥ïÔºö \n- (2, 0) -> (1, 2)\n- (1, 1) -> (1, 2)\n\nÂÜçÁúã‰ªé(0, 0)Âà∞(2Ôºå 0) Âè™Êúâ‰∏ÄÊù°Ë∑Ø: (0, 0) -> (1, 1) -> (2, 0)Ôºõ grides[2][0] = 1„ÄÇ\n\n‰ªé(0, 0)Ê†ºÂ≠êÂà∞(1,1)Ê†ºÂ≠êÔºåÊúâ‰∏§ÁßçË∑Ø: \n- (0,0) -> (0, 1)-> (1, 1)\n- (0,0) -> (1, 0)-> (1, 1)\nÈÇ£‰πàgrides(1, 1) = 2. \n \nÂæàÂÆπÊòìÂèëÁé∞ËßÑÂæãÔºå grids[m][n] = grids[m - 1][n] + grides[m][n -1]; ÂèØÁî®ÈÄíÂΩíÊ±ÇËß£„ÄÇ‰ΩÜÊòØÁ∫ØÁ¢éÁöÑÈÄíÂΩíÊúâÂæàÂ§öÈáçÂ§çËÆ°ÁÆó„ÄÇ Â¶Ç‰∏ãÂõæÁöÑÈÄíÂΩíÊ†ëÔºö \n![72a3d4ef.png](/img//c5619f25-13a6-4e38-b7f8-d87ff624f5b5/72a3d4ef.png)\nÊâÄ‰ª•Êàë‰ª¨ÂºïÂÖ•‰∏Ä‰∏™recordÊï∞ÁªÑÔºåËÆ∞ÂΩïÂ∑≤ÁªèËÆ°ÁÆóÁöÑÁªìÊûúÔºåÁúÅÂéªÈáçÂ§çËÆ°ÁÆó„ÄÇ\n\nÊó∂Èó¥Â§çÊùÇÂ∫¶: \no(m* n)\n\n```c++\nint inner_path(int i, int j, int m, int n, vector<vector<int>>& record) {\n    if (i < 0 || j < 0) {\n        return 0;\n    }\n\n    if (record[i][j]) {\n        return record[i][j];\n    }\n\n    if ((i == 0) && (j == 0)) {\n        return 1;\n    }\n\n    record[i][j] = inner_path(i-1, j, m, n, record) + inner_path(i, j-1, m, n, record);\n    return record[i][j];\n}\n\nint uniquePaths(int m, int n) {\n    vector<vector<int>> res(m, vector<int>(n, 0));\n    return inner_path(m-1, n-1, m, n, res);\n}\n```\n\n### [Unique Paths 2](https://leetcode.com/problems/unique-paths-ii/)\n\nÂàÜÊûêÔºö \nË∑üUnique Paths 1ÊØîËµ∑Êù•ÔºåÂ§ö‰∫ÜÈöúÁ¢çÁâ©„ÄÇÂ¶ÇÊûú(i, j)ÊòØÈöúÁ¢çÁâ©ÔºåÈÇ£‰πàgrid(i, j) = 0, Ë°®Á§∫Êàë‰ª¨Êó†Ê≥ïÁªèÁî±(i, j) Âà∞ËææÁªàÁÇπ„ÄÇ\n\n\n\n```c++\nint path_helper(int i, int j, int m, int n, vector<vector<int>>& record, vector<vector<int>> &obstacleGrid) {\n        if (i < 0 || j < 0 || obstacleGrid[i][j] == 1) {\n            return 0;\n        }\n\n        if (record[i][j]) {\n            return record[i][j];\n        }\n\n        if ((i == 0) && (j == 0)) {\n            return 1;\n        }\n\n        record[i][j] = path_helper(i - 1, j, m, n, record, obstacleGrid) + path_helper(i, j - 1, m, n, record, obstacleGrid);\n        return record[i][j];\n    }\n\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        if (obstacleGrid.empty()) return 0;\n        int m = (int)obstacleGrid.size();\n        int n = (int)obstacleGrid[0].size();\n\n        vector<vector<int>> res(m, vector<int>(n, 0));\n        return path_helper(m - 1, n - 1, m, n, res, obstacleGrid);\n    }\n```\n\nËá™Â∫ïÂêë‰∏äÁöÑÂÜôÊ≥ïÔºö \n\n```c++\n   int uniquePathsWithObstacles(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        if(rows == 0) return 0;\n        int cols = grid[0].size();\n        vector<vector<long>> res(rows+1, vector<long>(cols+1, 0));\n        for(int i=rows-1; i>=0;i--){\n            for(int j=cols-1; j>=0;j--){\n                if(grid[i][j] == 1) res[i][j] = 0;\n                else if(i == rows-1 && j == cols-1) res[i][j] = 1;\n                else res[i][j] = res[i][j+1] + res[i+1][j];\n            }\n        }\n        return res[0][0];\n    }\n```","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"LeetCode 959. Regions Cut By Slashes Á¨îËÆ∞","url":"/2019/04/23/Leetcode-959-Regions-Cut-By-Slashes/","content":"\nÈ¢òÁõÆÔºöhttps://leetcode.com/problems/regions-cut-by-slashes/description/\n\n## Solution1: DFS \n\nTime Complexity::  $O(n^2)$\n\n### ÂàÜÊûêÔºö \n[Ëøô‰∏™Á•ûÂ•áÁöÑÊÄùË∑Ø](https://leetcode.com/problems/regions-cut-by-slashes/discuss/205674/C++-with-picture-DFS-on-upscaled-grid)ÂàÜÂâ≤Ê†ºÂ≠êÔºåËΩ¨Âåñ‰∏∫ÂõæÁöÑDFSÈóÆÈ¢ò„ÄÇ\n```json\nInput:\n[\n  \"\\\\/\",\n  \"/\\\\\"\n]\n```\n\nÊää`\\\\`Ôºå`/`ÊàñËÄÖ` `ÂàÜÂà´ÂàÜÂâ≤Êàê3*3ÁöÑÊ†ºÂ≠ê„ÄÇÂõæËΩ¨Âåñ‰∏∫: \n\n```json\n[\n 1,0,0,0,0,1,\n 0,1,0,0,1,0,\n 0,0,1,1,0,0\n 0,0,1,1,0,0\n 0,1,0,0,1,0\n 1,0,0,0,0,1\n]\n```\n\nÈóÆÈ¢òÂ∞±ÂèòÊàêÔºö ËÆ°ÁÆóË¢´1ÂàÜÂâ≤ÂºÄÁöÑÂå∫ÂüüÁöÑÊï∞Èáè„ÄÇ\n\nÁ±ª‰ººÁöÑ[Â≠§Â≤õÊï∞ÈáèÈóÆÈ¢ò](https://www.geeksforgeeks.org/find-number-of-islands/) ÈÉΩÊòØÂêå‰∏Ä‰∏™ÈóÆÈ¢òÁöÑÂèòÁßçÔºö[Counting the number of connected components in an undirected graph](https://www.geeksforgeeks.org/connected-components-in-an-undirected-graph/)\n\n```c++\nvoid dfs(vector<vector<int>>& board, int i, int j ) {\n    // index out of range\n    if (i < 0 || j < 0 || i >= board.size() || j >= board[0].size()) return;\n    // this grid has been visited or it was part of a slash character\n    if (board[i][j] == 1) return;\n\n    // mark this grid visited\n    board[i][j] = true;\n\n    dfs(board, i - 1, j);\n    dfs(board, i + 1, j);\n    dfs(board, i, j - 1);\n    dfs(board, i, j + 1);\n}\n\nint regionsBySlashes(vector<string>& grid) {\n    if (grid.empty())\n        return 0;\n    int row = (int)grid.size(), col = (int)grid[0].size();\n    vector<vector<int>> board (row * 3, vector<int>(col * 3, 0));\n\n    // n*n graph represented as 3n*3n graph\n    for (int i = 0; i < row; ++i) {\n        for (int j = 0; j < col; ++j) {\n            if (grid[i][j] == '/') board[i * 3][j * 3 + 2] = board[i * 3 + 1][j * 3 + 1] = board[i * 3 + 2][j * 3] = 1;\n            if (grid[i][j] == '\\\\') board[i * 3][j * 3] = board[i * 3 + 1][j * 3 + 1] = board[i * 3 + 2][j * 3 + 2] = 1;\n        }\n    }\n\n    int cnt = 0;\n    for (int i = 0; i < row * 3; ++i) {\n        for (int j = 0; j < col * 3; ++j) {\n            // only count components connected by space\n            if (!board[i][j]) {\n               dfs(board, i, j);\n               cnt++;\n            }\n        }\n    }\n\n    return cnt;\n}\n\n```\n\nÂ¶ÇÊûúÂàÜÂâ≤‰∏∫2*2ÁöÑÊ†ºÂ≠êÔºå‰ºöÈÅáÂà∞Ëøô‰∏™ÈóÆÈ¢ò:\n```\nInput:\n[\n  \"//\",\n  \"/ \"\n]\nOutput: 5\nExpected: 3\n\n0101\n1010\n0100\n1000\n```\n01**0**1\n1**0**10\n**0**100\n1000\n\nÂä†Á≤óÁöÑËøô‰∏â‰∏™0ÔºåË¢´ÂàÜÂâ≤ÂºÄ‰∫Ü„ÄÇÈ¢òÊÑèË¶ÅÊ±ÇÊòØËøûÂú®‰∏ÄËµ∑ÁöÑ„ÄÇ\n\n\n## Solution2: DSU\n\nTime Complexity:  $O(n^2*\\alpha(n))$\nSpace Complexity: $O(n^2)$\n\n### ÂàÜÊûêÔºö \n\n#### DSU: \nhttps://www.youtube.com/watch?v=YKE4Vd1ysPI\nhttps://www.youtube.com/watch?v=gpmOaSBcbYA\n\nDSU‰∏≠Áî®Êï∞ÁªÑÊù•Ë°®Á§∫Ê†ëÔºå Â¶Ç‰∏ãÔºö \n\n| idx | 0 |  1 | 2 |\n| --- | --- | --- | --- |\n| parent | 1 | -1 | 1 |\n\n \nparent[0] = 1, ‰ª£Ë°®node 0ÁöÑparentÊòØ1Ôºõ parent[2] = 1‰ª£Ë°®node 2ÁöÑparentÊòØ1; parent[1] = -1, ‰ª£Ë°®ÂÆÉÊòØroot„ÄÇ \n\n```\n   1\n /  \\\n0    2\n```\n\n‰∏§‰∏™operationÔºö \n**find(x)**: find root of cluster in which x is \n\n```\n   1                   5\n  / \\                 / \\\n 0   2               6   7\n    / \\                   \\\n   3   4                  8\n```\nÊØîÂ¶ÇÔºö Êàë‰ª¨ÊÉ≥Êâæ3Ë∑ü8ÊâÄÂú®clusterÁöÑrootÔºå find(3) == 1,  find(8) == 5\n\n```c\n/*ÈÄíÂΩíÊü•Êâæroot*/\nint find(int x, int parent[]) {\n    int x_root = x; \n    while (parent[x_root]!= -1) {\n        x_root = parent[x_root];\n    }\n    return x_root;\n}\n```\n**union(x, y)**: union two cluster where x, y are in \n\nÊØîÂ¶ÇÔºö Êàë‰ª¨ÊÉ≥union(3, 8),  Â∞±Ë¶ÅÂÖàÊâæÂà∞3ÁöÑx_rootÔºå Ë∑ü8ÁöÑy_rootÔºåÁÑ∂ÂêéÂêàÂπ∂‰∏§‰∏™root.\n\n```c\nint union(int x, int y, int parent[]) {\n    int x_root = find(x, parent);\n    int y_root = find(y, parent); \n    if (x_root == y_root) {\n        return 0; \n    } else {\n        // y_root ÂèòÊàê x_rootÁöÑÊ†π\n        parent[x_root] = y_root;\n        return 1\n    }\n}\n```\n\n```\n              5\n         /   / \\\n        1   6   7\n       / \\       \\\n      0   2       8\n         / \\ \n        3   4 \n```\n\n                                \nDSUËÖªÂÆ≥ÁöÑ‰∏ÄÁÇπÊòØ‰ºòÂåñÂêéÔºåÁî®$O(1)$ÁöÑaverage time cost, Ê£ÄÊµãÂõæÈáåÊúâÂí©ÊúâÁéØ\n\n‰∏§Áßç‰ºòÂåñÔºö \n- Make tree flat \n- Union by rank\n\nhttps://www.youtube.com/watch?v=VJnUwsE4fWA\n\n\n### ÂàÜÂâ≤Êàê4‰∏™‰∏âËßíÂΩ¢Ôºå ‰∏ä‰∏ãÂ∑¶Âè≥\nÊØè‰∏™Ê†ºÂ≠êÂàÜÂâ≤Êàê‰∏ä‰∏ãÂ∑¶Âè≥Âõõ‰∏™‰∏âËßíÂΩ¢„ÄÇ\nhttps://assets.leetcode.com/uploads/2018/12/15/3.png\n\nÊØè‰∏™‰∏âËßíÂΩ¢Áªô‰∏™idx: 0, 1, 2, 3ÂàÜÂà´ÂØπÂ∫î top, right, bottom, left\n```\n\\ 0 /\n3 \\ 1\n/ 2 \\\n```\nn*nÁöÑÂõæÔºõÂèòÊàê 4*n*nÁöÑÊï∞ÁªÑ„ÄÇ ÂàùÂßãÂåñÊó∂Êï∞ÁªÑparentÁöÑÊØè‰∏™ÂÄºÈÉΩÊòØ-1, ‰ª£Ë°®ÊØè‰∏™ÁÇπÈÉΩÊòØÁã¨Á´ãÁöÑ„ÄÇÊàë‰ª¨ÈÅçÂéÜgrid‰∏≠ÁöÑÊØè‰∏™ÁÇπ, grid[i][j]Ôºå ÂàÜÂà´ËøõË°åÂ¶Ç‰∏ãÊìç‰ΩúÔºö \n\n'/':  ‰∏ä„ÄÅÂ∑¶ËøûÊé•Ôºõ ‰∏ã„ÄÅÂè≥ËøûÊé•\n'\\\\': ‰∏ä„ÄÅÂè≥ËøûÊé•Ôºõ Â∑¶„ÄÅ‰∏ãËøûÊé•\n' ': Âõõ‰∏™ÈÉ®ÂàÜËøûÊé•\n\nÂØπÊØè‰∏™grid[i][j], ÂêàÂπ∂grid[i-1][j]ÁöÑbottom‰∏âËßíÂΩ¢Ê†πgrid[i][j]ÁöÑtop ‰∏âËßíÂΩ¢ÔºõÂêàÂπ∂grid[i][j-1]ÁöÑright‰∏âËßíÂΩ¢Ë∑ügrid[i][j]ÁöÑleft‰∏âËßíÂΩ¢„ÄÇ\n\nÊúÄÁªà‰ª£Á†ÅÂ¶Ç‰∏ã:\n\n```c++\nclass DSU {\nprivate:\n    // use array represents a graph\n    vector<int> parent;\n    int row = 0;\npublic:\n    // num of root of independent cluster\n    int num_root = 0;\n\n    DSU(int n) {\n        parent = vector<int>(n * n * 4, -1);\n        num_root = n * n * 4;\n        row = n;\n    }\n\n    int find(int x) {\n        // find the root of the cluster where x is iteratively\n        while (parent[x] != -1) {\n            x = parent[x];\n        }\n        return x;\n    }\n\n    /**\n    * return: 1: successfully; 0: failed\n    */\n    int union_cluster(int x, int y) {\n        int x_root = find(x);\n        int y_root = find(y);\n        if (x_root == y_root) {\n            return 0;\n        } else {\n            int min_ = min(x_root, y_root);\n            int max_ = max(x_root, y_root);\n            parent[min_] = max_;\n            \n            num_root--;\n            return 1;\n        };\n    }\n\n    /**\n     * Â∞ÜÂõæ‰∏≠Ôºài,j)‰ΩçÁΩÆÁöÑÁÇπÔºåÊò†Â∞ÑÂà∞Êï∞ÁªÑÁöÑidx\n     * @param i\n     * @param j\n     * @param part\n     * @param n\n     * @return\n     */\n    int idx(int i, int j, int part) {\n        return (i * row + j) * 4 + part;\n    }\n};\n\n\n// https://leetcode.com/problems/regions-cut-by-slashes/discuss/205680/JavaC%2B%2BPython-Split-4-parts-and-Union-Find\nint regionsBySlashes(vector<string> &grid) {\n    if (grid.empty()) return 0;\n    int n = (int) grid.size();\n\n    DSU dsu = DSU(n);\n\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < n; ++j) {\n            // merge the bottom part of the (i-1, j) grid and the top part of the grid (i, j)\n            if (i > 0) dsu.union_cluster(dsu.idx(i - 1, j, 2), dsu.idx(i, j, 0));\n            // merge the right part of the (i, j-1) grid and the left part of the grid(i,j)\n            if (j > 0) dsu.union_cluster(dsu.idx(i, j - 1, 1), dsu.idx(i, j, 3));\n\n            if (grid[i][j] == '/') {\n                // union the top and the left part of this cell\n                dsu.union_cluster(dsu.idx(i, j, 3), dsu.idx(i, j, 0));\n                // union the right and the bottom of this cell\n                dsu.union_cluster(dsu.idx(i, j, 2), dsu.idx(i, j, 1));\n            }\n\n            if (grid[i][j] == '\\\\') {\n                dsu.union_cluster(dsu.idx(i, j, 0), dsu.idx(i, j, 1));\n                dsu.union_cluster(dsu.idx(i, j, 2), dsu.idx(i, j, 3));\n            }\n\n            if (grid[i][j] == ' ') {\n                dsu.union_cluster(dsu.idx(i, j, 0), dsu.idx(i, j, 2));\n                dsu.union_cluster(dsu.idx(i, j, 1), dsu.idx(i, j, 3));\n                dsu.union_cluster(dsu.idx(i, j, 1), dsu.idx(i, j, 2));\n            }\n        }\n    }\n\n    return dsu.num_root;\n}\n\n```\n\nhttps://leetcode.com/problems/regions-cut-by-slashes/discuss/205680/JavaC%2B%2BPython-Split-4-parts-and-Union-Find\n","tags":["Algorithm"],"categories":["Algorithm"]},{"title":"XMPP(6):XMPP-Ê∂àÊÅØÂ≠òÂÇ®‰∏éÊãâÂèñÂéÜÂè≤Ê∂àÊÅØ","url":"/2019/04/10/XMPP-6-XMPP-Ê∂àÊÅØÂ≠òÂÇ®‰∏éÊãâÂèñÂéÜÂè≤Ê∂àÊÅØ/","content":"\n\nXEP-0313ÂÆö‰πâ‰∫ÜXMPPÊ∂àÊÅØÂ≠òÂÇ®ÁöÑËßÑÂàô„ÄÇ\n\n### Âú∫ÊôØÈúÄÊ±Ç\n0313ÂçèËÆÆ‰∏ªË¶ÅÊúâËøô‰∫õÂú∫ÊôØÔºö \n- ÂêåË¥¶Âè∑Â§öÂÆ¢Êà∑Á´Ø‰πãÈó¥ÁöÑÂéÜÂè≤Ê∂àÊÅØÂêåÊ≠•\n- ÂÆ¢Êà∑Á´ØÊãâÂèñÂéÜÂè≤Ê∂àÊÅØÔºåÊåâÊó•ÊúüÊéíÂ∫èÂ±ïÁ§∫ÔºàÊÉ≥ÊÉ≥Êàë‰ª¨Âú®ÂæÆ‰ø°ÁöÑÂéÜÂè≤Ê∂àÊÅØÔºâ\n- ÂàÜÈ°µÊãâÂèñÊ∂àÊÅØ\n\n### Â≠òÂÇ®\n\n1. ÂçïÊù°Ê∂àÊÅØÂ≠òÂÇ®ÂåÖÊã¨Ôºö \n- Ê∂àÊÅØÂèëÈÄÅË∑üÊé•Êî∂ÁöÑÊó∂Èó¥Êà≥\n- from Ë∑ü to ÁöÑJID\n- server-assigned UID\n- message stanza \n\n2. Ê∂àÊÅØÁöÑÈ°∫Â∫èË¶Å‰øùÂ≠òÔºö ‰æùËµñtimestampË¶ÅÂ∞èÂøÉÔºåÂõ†‰∏∫Â§öÊù°Ê∂àÊÅØÂèØËÉΩÂÖ±‰∫´Êó∂Èó¥Êà≥\n3. Ë∂ÖËøá‰∏ÄÂÆöÊï∞ÈáèÔºåÂèØÂà†Èô§Êóß‰ø°ÊÅØ\n4. Áæ§ËÅäËÆ∞ÂΩïÁî®MAMÊúçÂä°\n5. archive id ` <stanza-id/>`\nË¢´archivedËøáÁöÑÊ∂àÊÅØÔºåserverË¶ÅÁªôÂÆÉÂä†‰∏ästanza-id\nExample 1. Client receives a message that has been archived\n\n```xml\n<message to='juliet@capulet.lit/balcony'\n         from='romeo@montague.lit/orchard'\n         type='chat'>\n  <body>Call me but love, and I'll be new baptized; Henceforth I never will be Romeo.</body>\n  <stanza-id xmlns='urn:xmpp:sid:0' by='juliet@capulet.lit' id='28482-98726-73623' />\n</message>\n\n```\nstanza-id: archive ID \n\n### Êü•ËØ¢\n\n#### 1. A user queries their archive for messages\nÁî®Ê∂àÊÅØUIDÊü•ËØ¢\n\n'urn:xmpp:mam:2' namespace, indicating the UID of the first and last message of the (possibly limited) result set. \n\n```xml\n<iq type='set' id='juliet1'>\n  <query xmlns='urn:xmpp:mam:2' queryid='f27' />\n</iq>\n```\n\n#### 2. Their server sends the matching messages\n\n\n\n```xml\n<message id='aeb213' to='juliet@capulet.lit/chamber'>\n  <result xmlns='urn:xmpp:mam:2' queryid='f27' id='28482-98726-73623'>\n    <forwarded xmlns='urn:xmpp:forward:0'>\n      <delay xmlns='urn:xmpp:delay' stamp='2010-07-10T23:08:25Z'/>\n      <message xmlns='jabber:client' from=\"witch@shakespeare.lit\" to=\"macbeth@shakespeare.lit\">\n        <body>Hail to thee</body>\n      </message>\n    </forwarded>\n  </result>\n</message>\n\n```\n\n#### 3. Server returns the result IQ to signal the end\n\n\n```xml\n<iq type='result' id='juliet1'>\n  <fin xmlns='urn:xmpp:mam:2'>\n    <set xmlns='http://jabber.org/protocol/rsm'>\n      <first index='0'>28482-98726-73623</first>\n      <last>09af3-cc343-b409f</last>\n    </set>\n  </fin>\n</iq>\n```\n\nserverÁöÑËøôÊù°iq stanzaÊ†áËÆ∞Êü•ËØ¢ÁªìÊûúÁªìÊùü„ÄÇ\n\n### ËøáÊª§Âô®\n\n#### 1. Ê†πÊçÆJIDËøáÊª§\n\n`with` Â≠óÊÆµ + JID(Bare JID)Ôºö ‰ºöÊãøÂà∞toÊàñfromÂú∞ÂùÄÂåπÈÖçJIDÁöÑ‰ø°ÊÅØ; Â¶ÇÊûúÊ≤°Êúâwith, ÊúçÂä°Á´ØËøîÂõûqueryÊåáÂÆöÁöÑÊó∂Èó¥ÊÆµÂÜÖÁöÑÊ∂àÊÅØ„ÄÇ \n\n```xml \nExample 6. Querying for all messages to/from a particular JID¬∂\n<iq type='set' id='juliet1'>\n  <query xmlns='urn:xmpp:mam:2'>\n    <x xmlns='jabber:x:data' type='submit'>\n      <field var='FORM_TYPE' type='hidden'>\n        <value>urn:xmpp:mam:2</value>\n      </field>\n      <field var='with'>\n        <value>juliet@capulet.lit</value>\n      </field>\n    </x>\n  </query>\n</iq>\n```\n\n**‰ΩøÁî®Âú∫ÊôØÔºö**\nAÊÉ≥Êü•ËØ¢Ë∑üBÁöÑËÅäÂ§©ËÆ∞ÂΩïÔºåwithÂ≠óÊÆµÁöÑvalueËÆæ‰∏∫B, ÊúçÂä°Á´ØËøîÂõûÁöÑmessages‰∏≠ÔºåÊó¢ÊúâBÂèëÈÄÅÁªôAÁöÑmsgÔºå‰πüÊúâAÂèëÈÄÅÁªôBÁöÑmsg„ÄÇ \n\n![3c4760c7.png](/img/f3eaaed1-370f-4abc-93b2-a3312d3ebcd4/3c4760c7.png)\n#### 2. Ê†πÊçÆÊé•Êî∂Êó∂Èó¥ËøáÊª§\n\n`start` Ë∑ü `end` Â≠óÊÆµÊ†áËÆ∞Êó∂Èó¥Êà≥„ÄÇ Êó∂Èó¥Êà≥Ê†ºÂºèËßÅhttps://xmpp.org/extensions/xep-0082.html\n\n```xml\nExample 7. Querying the archive for all messages in a certain timespan¬∂\n<iq type='set' id='juliet1'>\n  <query xmlns='urn:xmpp:mam:2'>\n    <x xmlns='jabber:x:data' type='submit'>\n      <field var='FORM_TYPE' type='hidden'>\n        <value>urn:xmpp:mam:2</value>\n      </field>\n      <field var='start'>\n         // UTCÊ†ºÂºè\n        <value>2010-06-07T00:00:00Z</value>\n      </field>\n      <field var='end'>\n        <value>2010-07-07T13:23:54Z</value>\n      </field>\n    </x>\n  </query>\n</iq>\n```\nÂ¶ÇÊûú`end` Áº∫Â§±Ôºå server‰ºöËá™Âä®ËÆ§‰∏∫ÊòØÊúÄËøëÁöÑÊ∂àÊÅØÁöÑÂ≠òÂÇ®Êó∂Èó¥\n\n``` xml\nExample 8. Querying the archive for all messages after a certain time¬∂\n<iq type='set' id='juliet1'>\n  <query xmlns='urn:xmpp:mam:2'>\n    <x xmlns='jabber:x:data' type='submit'>\n      <field var='FORM_TYPE' type='hidden'>\n        <value>urn:xmpp:mam:2</value>\n      </field>\n      <field var='start'>\n        <value>2010-08-07T00:00:00Z</value>\n      </field>\n    </x>\n  </query>\n</iq>   \n```\n\n#### 3. ÈôêÂÆöresultsÁöÑÊï∞Èáè\n\n[Result Set Management (XEP-0059)](https://xmpp.org/extensions/xep-0059.html) \n\n```xml\nExample 9. A query using Result Set Management¬∂\n<iq type='set' id='q29302'>\n  <query xmlns='urn:xmpp:mam:2'>\n    <x xmlns='jabber:x:data' type='submit'>\n      <field var='FORM_TYPE' type='hidden'>\n        <value>urn:xmpp:mam:2</value>\n      </field>\n      <field var='start'>\n        <value>2010-08-07T00:00:00Z</value>\n      </field>\n    </x>\n    <set xmlns='http://jabber.org/protocol/rsm'>\n      <max>10</max>\n    </set>\n  </query>\n</iq>\n```\n\nËøô‰∏™ËØ∑Ê±ÇÔºåÊåáÂÆöÂÆ¢Êà∑Á´ØÊúÄÂ§öÂè™ËÉΩÊî∂Âà∞10Êù°stanzas„ÄÇ‰ΩÜÊúçÂä°Á´ØÁöÑËøîÂõûÁªìÊûúÂèØËÉΩÂõûÊîπÂèò`set`ÁöÑÂÜÖÂÆπÔºåËøîÂõûËá™Â∑±ÈôêÂÆöÁöÑÊï∞ÈáèÔºåÊØîÂ¶ÇÔºö ËøôÊòØËøîÂõû`start`Êó∂Èó¥Ë∑ü`end`Êó∂Èó¥ÊÆµÂÜÖÁöÑ20Êù°Ê∂àÊÅØ„ÄÇ\n\n```xml\nExample 10. Server responds to client with limited results using RSM¬∂\n<!-- result messages -->\n<iq type='result' id='q29302'>\n  <fin xmlns='urn:xmpp:mam:2'>\n    <set xmlns='http://jabber.org/protocol/rsm'>\n      <first index='0'>28482-98726-73623</first>\n      <last>09af3-cc343-b409f</last>\n      <count>20</count>\n    </set>\n  </fin>\n</iq>\n```\n\n#### 4. ÂàÜÈ°µÊãâÂèñÊ∂àÊÅØ\n\nÂ¶ÇÊûú‰πãÂâçÂ∑≤ÁªèËé∑Âèñ‰∫ÜmÊù°Ê∂àÊÅØÔºåÂÆ¢Êà∑Á´ØÂèØ‰ª•ÂÜçÂèëÈÄÅÂêåÊ†∑ÁöÑËØ∑Ê±ÇÔºåÊãâÂèñ‰∏ã‰∏ÄÈ°µÊ∂àÊÅØ„ÄÇ`set`‰∏≠Ë¶ÅÂ∏¶‰∏ä`after`(‰∏äÊ¨°ÊãâÂèñÂà∞ÁöÑÊúÄÂêé‰∏ÄÊù°Ê∂àÊÅØÁöÑUID)\n\n```xml\nExample 11. A page query using Result Set Management¬∂\n<iq type='set' id='q29303'>\n  <query xmlns='urn:xmpp:mam:2'>\n      <x xmlns='jabber:x:data' type='submit'>\n        <field var='FORM_TYPE' type='hidden'><value>urn:xmpp:mam:2</value></field>\n        <field var='start'><value>2010-08-07T00:00:00Z</value></field>\n      </x>\n      <set xmlns='http://jabber.org/protocol/rsm'>\n         <max>10</max>\n         <after>09af3-cc343-b409f</after>\n      </set>\n  </query>\n</iq>\n```\n\nserverËøîÂõûÊúÄÂêé‰∏ÄÈ°µÊ∂àÊÅØÔºå‰ºöÂú® finÈáåÂ§¥Â∏¶‰∏ä`complete`Â±ûÊÄßÔºåÂÄº‰∏∫`ture`\n\n```xml\nExample 12. Server completes a result with the last page of messages¬∂\n<!-- result messages -->\n<iq type='result' id='u29303'>\n  <fin xmlns='urn:xmpp:mam:2' complete='true'>\n    <set xmlns='http://jabber.org/protocol/rsm'>\n      <first index='0'>23452-4534-1</first>\n      <last>390-2342-22</last>\n      <count>16</count>\n    </set>\n  </fin>\n</iq>\n    \n```\n\n**‰ΩøÁî®Âú∫ÊôØÔºö**\n\nAÂÆ¢Êà∑Á´ØÊú¨Âú∞Â≠òÂÇ®Ë∑üBÁöÑËÅäÂ§©‰ø°ÊÅØÔºå ÊúÄÂêé‰∏ÄÊù°messageÁöÑidÊòØ`09af3-cc343-b409f`„ÄÇ Áé∞Âú®AÊÉ≥ÁúãÁúãÊúÄËøëÁöÑÊ∂àÊÅØÔºà`09af3-cc343-b409f`ÂêéÁöÑmessageÔºåÂèØ‰ª•ÂèëÈÄÅiqËØ∑Ê±Ç‰∏≠Â∏¶‰∏ä`<after>09af3-cc343-b409f</after>`„ÄÇÂ∑ÆÈáèËØ∑Ê±ÇÊúÄÊñ∞Ê∂àÊÅØÔºåÂü∫‰∫éÊ∏∏Ê†áÁöÑÂàÜÈ°µ„ÄÇ\n#### 5.ÂÖ∂‰ªñÂ≠óÊÆµÁöÑÁ≠õÈÄâ\n\nÂÆ¢Êà∑Á´ØÊü•ËØ¢ÊúçÂä°Á´ØÊîØÊåÅÁöÑÂÖ∂‰ªñÂ≠óÊÆµ\n```xml\nExample 13. Client requests supported query fields¬∂\n<iq type='get' id='form1'>\n  <query xmlns='urn:xmpp:mam:2'/>\n</iq>\n```\n\n```xml\nExample 14. Server returns supported fields¬∂\n<iq type='result' id='form1'>\n  <query xmlns='urn:xmpp:mam:2'>\n    <x xmlns='jabber:x:data' type='form'>\n      <field type='hidden' var='FORM_TYPE'>\n        <value>urn:xmpp:mam:2</value>\n      </field>\n      <field type='jid-single' var='with'/>\n      // ÊåâÊ∂àÊÅØreceivedÊó∂Èó¥Êü•ËØ¢\n      <field type='text-single' var='start'/>\n      <field type='text-single' var='end'/>\n      // ÊåâÊñáÊú¨Êü•ËØ¢\n      <field type='text-single' var='urn:example:xmpp:free-text-search'/>\n      // stanzaÂÜÖÂÆπ\n      <field type='text-single' var='urn:example:xmpp:stanza-content'/>\n    </x>\n  </query>\n</iq>\n```\n### ËøîÂõûÁöÑmessage stanza ÁªìÊûÑ\n\n- `message`Ë¢´Â∞ÅË£ÖÂú®`forwarded`ÂÖÉÁ¥†‰∏≠„ÄÇ [XEP-0297: Stanza Forwarding](https://xmpp.org/extensions/xep-0297.html)\n- Â∏¶`result` ÂÖÉÁ¥†Ôºå ÂÖ∂Â±ûÊÄßidÊòØËøôÊù°messageÁöÑUID\n- delayÂÖÉÁ¥† [XEP-0203: Delayed Delivery](https://xmpp.org/extensions/xep-0203.html) messageË¢´Êî∂Âà∞ÁöÑÊó∂Èó¥, UTCÊó∂Èó¥Êà≥Ê†ºÂºè\n\n\n```xml\nExample 16. Server returns two matching messages¬∂\n<message id='aeb213' to='juliet@capulet.lit/chamber'>\n  <result xmlns='urn:xmpp:mam:2' queryid='f27' id='28482-98726-73623'>\n    <forwarded xmlns='urn:xmpp:forward:0'>\n      <delay xmlns='urn:xmpp:delay' stamp='2010-07-10T23:08:25Z'/>\n      <message xmlns='jabber:client'\n        to='juliet@capulet.lit/balcony'\n        from='romeo@montague.lit/orchard'\n        type='chat'>\n        <body>Call me but love, and I'll be new baptized; Henceforth I never will be Romeo.</body>\n      </message>\n    </forwarded>\n  </result>\n</message>\n\n<message id='aeb214' to='juliet@capulet.lit/chamber'>\n  <result xmlns='urn:xmpp:mam:2' queryid='f27' id='5d398-28273-f7382'>\n    <forwarded xmlns='urn:xmpp:forward:0'>\n      <delay xmlns='urn:xmpp:delay' stamp='2010-07-10T23:09:32Z'/>\n      <message xmlns='jabber:client'\n         to='romeo@montague.lit/orchard'\n         from='juliet@capulet.lit/balcony'\n         type='chat' id='8a54s'>\n        <body>What man art thou that thus bescreen'd in night so stumblest on my counsel?</body>\n      </message>\n    </forwarded>\n  </result>\n</message>\n    \n```\n\n## MUC Archive\n\n- Â≠òÂÇ®ÊâÄÊúâÂèëÈÄÅÁªôroomJidÁöÑmessage\n- ‰∏çÂåÖÂê´`private message`\n- userÈúÄË¶ÅÊùÉÈôêÊü•ËØ¢Áæ§ÂéÜÂè≤ËÅäÂ§©ËÆ∞ÂΩï\n- `forward` stanza‰∏≠Â∏¶Êúâ`to`Â±ûÊÄß,ÂÄºÊòØroomJidÔºå`from`ÂÄºÊòØuserJid \n- `x`ÈáåÊúâËØ•Ê∂àÊÅØÁöÑÂèëÈÄÅËÄÖJid\n```xml\nExample 17. Server returns MUC messages¬∂\n<message id='iasd207' from='coven@chat.shakespeare.lit' to='hag66@shakespeare.lit/pda'>\n  <result xmlns='urn:xmpp:mam:2' queryid='g27' id='34482-21985-73620'>\n    <forwarded xmlns='urn:xmpp:forward:0'>\n      <delay xmlns='urn:xmpp:delay' stamp='2002-10-13T23:58:37Z'/>\n      <message xmlns=\"jabber:client\"\n        from='coven@chat.shakespeare.lit/firstwitch'\n        id='162BEBB1-F6DB-4D9A-9BD8-CFDCC801A0B2'\n        type='groupchat'>\n        <body>Thrice the brinded cat hath mew'd.</body>\n        <x xmlns='http://jabber.org/protocol/muc#user'>\n          <item affiliation='none'\n                jid='witch1@shakespeare.lit'\n                role='participant' />\n        </x>\n      </message>\n    </forwarded>\n  </result>\n</message>\n\n<message id='iasd207' from='coven@chat.shakespeare.lit' to='hag66@shakespeare.lit/pda'>\n  <result xmlns='urn:xmpp:mam:2' queryid='g27' id='34482-21985-73620'>\n    <forwarded xmlns='urn:xmpp:forward:0'>\n      <delay xmlns='urn:xmpp:delay' stamp='2002-10-13T23:58:43Z'/>\n      <message xmlns=\"jabber:client\"\n        from='coven@chat.shakespeare.lit/secondwitch'\n        id='90057840-30FD-4141-AA44-103EEDF218FC'\n        type='groupchat'>\n        <body>Thrice and once the hedge-pig whined.</body>\n        <x xmlns='http://jabber.org/protocol/muc#user'>\n          <item affiliation='none'\n                jid='witch2@shakespeare.lit'\n                role='participant' />\n        </x>\n      </message>\n    </forwarded>\n  </result>\n</message>\n```\n[XEP-0313: Message Archive Management](https://xmpp.org/extensions/xep-0313.html#intro)","tags":["XMPP"],"categories":["XMPP"]},{"title":"XMPP(5): Ê∂àÊÅØ","url":"/2019/04/09/XMPP-5-Ê∂àÊÅØ/","content":"\n \n## MessageÊ∂àÊÅØ‰ΩìÊûÑÈÄ†\n\nÂ±ûÊÄßÔºö \n1. to ÔºöÊé•Êî∂ÊñπÂú∞ÂùÄÔºå JID \n2. from Ôºö ÂèëÈÄÅÊñπÔºå JID\n3. type \n  - chat: ‰∏ÄÂØπ‰∏ÄËÅäÂ§©\n  - error: Âá∫Èîô\n  - groupchat: Áæ§ËÅä\n  - headline: ÈÄöÁü•„ÄÅ‰∏¥Êó∂Ê∂àÊÅØËøôÁßç‰∏çÈúÄË¶ÅÂõûÂ§çÁöÑÁ≥ªÁªüÊ∂àÊÅØ\n  - normal: ‰πãÂâçÊ≤°ÊúâËÅäÂ§©ÁöÑËÆ∞ÂΩïÔºå ÂÆ¢Êà∑Á´ØÂèØ‰ª•ÂõûÂ§çÁöÑÊ∂àÊÅØ\n\nÂ≠êÂÖÉÁ¥†\n1. body: Ê∂àÊÅØÂÜÖÂÆπ\n\n```xml\n<message\n    from='juliet@example.com/balcony'\n    id='b4vs9km4'\n    to='romeo@example.net'\n    type='chat'\n    xml:lang='en'>\n  <body>Wherefore art thou, Romeo?</body>\n</message>\n\n```\n2. Subject: ËÅäÂ§©ÁöÑËØùÈ¢ò\n\n```xml\n\n<message\n    from='juliet@example.com/balcony'\n    id='c8xg3nf8'\n    to='romeo@example.net'\n    type='chat'\n    xml:lang='en'>\n  <subject>I implore you!</subject>\n  <body>Wherefore art thou, Romeo?</body>\n</message>\n```\n\n3. Thread: ËÅäÂ§©‰ºöËØùÁöÑÂîØ‰∏ÄÊ†áËØÜ\n\n## Example \n\nÂØπËØùÔºö \n\n```xml\nCC: <message\n        from='juliet@example.com/balcony'\n        to='romeo@example.net'\n        type='chat'\n        xml:lang='en'>\n      <body>My ears have not yet drunk a hundred words</body>\n      <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n    </message>\n\nCC: <message\n        from='juliet@example.com/balcony'\n        to='romeo@example.net'\n        type='chat'\n        xml:lang='en'>\n      <body>Of that tongue's utterance, yet I know the sound:</body>\n      <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n    </message>\n\nCC: <message\n        from='juliet@example.com/balcony'\n        to='romeo@example.net'\n        type='chat'\n        xml:lang='en'>\n      <body>Art thou not Romeo, and a Montague?</body>\n      <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n    </message>\n\nUC: <message\n        from='romeo@example.net/orchard'\n        to='juliet@example.com/balcony'\n        type='chat'\n        xml:lang='en'>\n      <body>Neither, fair saint, if either thee dislike.</body>\n      <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n    </message>\n\nCC: <message\n        from='juliet@example.com/balcony'\n        to='romeo@example.net/orchard'\n        type='chat'\n        xml:lang='en'>\n      <body>How cam'st thou hither, tell me, and wherefore?</body>\n      <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n    </message>\n\n```\n\nÂú®[xmpp.js](https://github.com/xmppjs/xmpp.js/)‰∏≠ÔºåÂÆ¢Êà∑Á´Ø‰∏éÊúçÂä°Á´ØÂª∫Á´ã‰∫ÜWebSocketÈïøÈìæÊé•ÂêéÔºåÂèëÊ∂àÊÅØÔºåÈúÄË¶ÅËá™Â∑±ÊûÑÈÄ†Ê∂àÊÅØ‰Ωì\n\n``` js \nconst {client, xml} = require('@xmpp/client')\n\nconst xmpp = client({\n  service: 'ws://localhost:5280/xmpp-websocket',\n  domain: 'localhost',\n  resource: 'example',\n  username: 'username',\n  password: 'password',\n})\n\n const message = xml(\n    'message',\n    {type: 'chat', to: address},\n    xml('body', 'hello world')\n  )\n  await xmpp.send(message)\n\n```\n\nÂ¶ÇÊûúÊî∂Âà∞Ê∂àÊÅØ‰ºöËµ∞Âà∞‰∏Ä‰∏™ÂõûË∞ÉÈáå, chat-sdkÂ∞±ÂèØ‰ª•Ê†πÊçÆtypeÂ≠óÊÆµÊù•ÂàÜÂèë„ÄÇ\n\n\n```js \nself.xmppClient.on('stanza', function (stanza: any) {\n    Utils.DLog('[Chat] RECV:', stanza.toString());\n    /**\n     * Detect typeof incoming stanza\n     * and fire the Listener\n     */\n    if (stanza.is('presence')) {\n        self._onPresence(stanza);\n    } else if (stanza.is('iq')) {\n        self._onIQ(stanza);\n    } else if (stanza.is('message')) {\n        if (stanza.attrs.type === 'headline') {\n            self._onSystemMessageListener(stanza);\n        } else if (stanza.attrs.type === 'error') {\n            self._onMessageErrorListener(stanza);\n        } else {\n            self._onMessage(stanza);\n        }\n    }\n});\n```\n\n- ref: https://xmpp.org/rfcs/rfc6121.html#message","tags":["XMPP"],"categories":["XMPP"]},{"title":"JWT ÂÖ•Èó®","url":"/2019/04/03/JWT-ÂÖ•Èó®/","content":"\n\n## ‰ªÄ‰πàÊòØJSON Web Tokens (JWT)Ôºü \n\n\n```\n  JSON Web Token (JWT) is a compact, URL-safe means of representing\n   claims to be transferred between two parties.  The claims in a JWT\n   are encoded as a JSON object that is used as the payload of a JSON\n   Web Signature (JWS) structure or as the plaintext of a JSON Web\n   Encryption (JWE) structure, enabling the claims to be digitally\n   signed or integrity protected with a Message Authentication Code\n   (MAC) and/or encrypted.\n   \n\n```\n\n## ÊÄé‰πàÁî®Ôºü \n\nauthenticationÊó∂ÔºåÂΩìuserÊàêÂäüÁôªÂΩïÔºåserverÁîüÊàêaccess token, ÂèëÈÄÅÁªôuserÔºõuserËØ∑Ê±ÇserverÊó∂Â∏¶‰∏äJWTÔºåserverÈÄöËøáJWTÈ™åËØÅÊòØÂê¶ÊòØÂèØ‰ø°‰ªªÁöÑÂÆ¢Êà∑Á´ØËØ∑Ê±Ç‰∫Ü„ÄÇ\n\n\n![1*SSXUQJ1dWjiUrDoKaaiGLA.png](https://cdn-images-1.medium.com/max/1600/1*SSXUQJ1dWjiUrDoKaaiGLA.png)\n\n## ÁªìÊûÑ\n\nÂú®ÂÆ¢Êà∑Á´ØÁúãÊù•JWTÊòØ‰∏Ä‰∏≤encodeÂä†ÂØÜËøáÁöÑÂ≠óÁ¨¶‰∏≤,`header.payload.signature`ÔºåÂ¶Ç‰∏ãÂõæÂ∑¶Ëæπ„ÄÇ‰ΩÜÂÆÉdecodeÂêéÂÖ∂ÂÆûÊòØ‰∏ãÂõæÂè≥ËæπÁöÑJSONÁªìÊûÑ‰Ωì\n\n![legacy-app-auth-5.png](https://cdn.auth0.com/blog/legacy-app-auth/legacy-app-auth-5.png)\n\n#### 1. ÁîüÊàêheader\n\ne.g.\n```json\n{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}\n```\n\nËøôÈáåÔºåalgÁöÑÂÄºÊåáÂÆöÁî®HMAC-SHA256ÁÆóÊ≥ïÁ≠æÂêç\n\n#### 2. ÁîüÊàêpayload\n\nÂåÖÂê´Áî®Êà∑Áõ∏ÂÖ≥ÁöÑ‰ø°ÊÅØ\n```\nThe second part of the token is the payload, which contains the claims. \nClaims are statements about an entity (typically, the user) and additional data. \n```\nÊúâ‰∏âÁßç[claims](https://tools.ietf.org/html/rfc7519#section-4.1): registered, public, and private claims.\n\ne.g.\n```json\n\n{\n  \"sub\": \"1234567890\",\n  \"name\": \"John Doe\",\n  \"iat\": 1516239022\n}\n```\n\n#### 3.ÁîüÊàêsignature\n\n```js\n\nHMACSHA256(\n  base64UrlEncode(header) + \".\" +\n  base64UrlEncode(payload),\n  your-256-bit-secret\n) \n```\nÊääheaderË∑üpayload encodeÁªìÊûÑÂêéÔºåÁî®'.'ËøûÊé•ÔºåÁîüÊàê: <span style=\"color:#fb015b\"> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span>.</span>\n<span style=\"color:#d63aff\"> eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span>\n\nÂÜçÁî®ÊåáÂÆöÁöÑhashÁÆóÊ≥ï(‰æãÂ≠êÊòØHS256),Áî®ÁßÅÈí•ÔºàÊúçÂä°Á´ØÁöÑÔºâÁîüÊàêÁ≠æÂêç:<span style=\"color:#00b9f1\">SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c<span>\n\n\n## È™åËØÅ\n\nÂ¶ÇÂõæ1Ôºå JWTÁî±Authentication serverÁîüÊàêÔºå Âú®clientËÆ§ËØÅÂêéÂèëÁªôclientÔºõ clientËØ∑Ê±Çapplication serverÁöÑÊó∂ÂÄôÂ∏¶‰∏äJWTÔºåapplication serverÂú®ËÆ§ËØÅÈò∂ÊÆµ‰ªéAuthentiation serverÈÇ£ÂÑøÊãøÂà∞scret keyÔºõÁî®ÂêåÊ†∑ÁÆóÊ≥ïÁîüÊàêsignatureÔºå Ë∑üclientÂèëÊù•ÁöÑJWTÁöÑsignatureÂÅöÊØîËæÉÔºåÁúãÊòØÂê¶match„ÄÇ\n\n\n\n\n\n\n\n\n\n\n\n\n[5 Easy Steps to Understanding JSON Web Tokens (JWT)](https://medium.com/vandium-software/5-easy-steps-to-understanding-json-web-tokens-jwt-1164c0adfcec)\n[JSON Web Token Introduction - jwt.io](https://jwt.io/introduction/) \n[RFC 7519 - JSON Web Token (JWT)](https://tools.ietf.org/html/rfc7519)","tags":["Auth"],"categories":["NetWork"]},{"title":"XMPP(4):Search Âíå vCard","url":"/2019/03/31/XMPP-4-Search-vCard/","content":"`jabber:iq:search`ÂçèËÆÆÁî®Êù•Êü•ÊâæÁî®Êà∑‰ø°ÊÅØ„ÄÇ\n\n1. Êàë‰ª¨ÂÖàÊü•ËØ¢ÂèØ‰ª•Áî®Âì™‰∫õÂ≠óÊÆµÊü•ÊâæÁî®Êà∑\n<!-- more -->\n\n# XMPP Search \n\n`jabber:iq:search`ÂçèËÆÆÁî®Êù•Êü•ÊâæÁî®Êà∑‰ø°ÊÅØ„ÄÇ\n\n1. Êàë‰ª¨ÂÖàÊü•ËØ¢ÂèØ‰ª•Áî®Âì™‰∫õÂ≠óÊÆµÊü•ÊâæÁî®Êà∑\n\n```xml\n// Requesting Search Fields\n\n<iq type='get'\n    from='romeo@montague.net/home'\n    to='characters.shakespeare.lit'\n    id='search1'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'/>\n</iq>\n```\n\n2. service ËøîÂõû\n\n```xml\n// Receiving Search Fields\n<iq type='result'\n    from='characters.shakespeare.lit'\n    to='romeo@montague.net/home'\n    id='search1'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'>\n    <instructions>\n      Fill in one or more fields to search\n      for any matching Jabber users.\n    </instructions>\n    <first/>\n    <last/>\n    <nick/>\n    <email/>\n  </query>\n</iq>\n```\n3. ÊúçÂä°Á´ØËøîÂõûÔºåÂèØ‰ª•Áî®`first` `last` `nick` `email` ËøôÂá†‰∏™Â≠óÊÆµÊâæ‰∫∫„ÄÇÊé•ÁùÄÂ∞±Áî®lastÊü•‰∫∫.\n\n```xml\n// Submitting a Search Request\n\n<iq type='set'\n    from='romeo@montague.net/home'\n    to='characters.shakespeare.lit'\n    id='search2'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'>\n    <last>Capulet</last>\n  </query>\n</iq>\n```\n\nÊúçÂä°Á´ØÂèØ‰ª•ËÉΩ‰ºöËøîÂõûÂ•ΩÂ§ö‰∏™lastÂåπÈÖçÁöÑitem\n```xml\n<iq type='result'\n    from='characters.shakespeare.lit'\n    to='romeo@montague.net/home'\n    id='search2'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'>\n    <item jid='juliet@capulet.com'>\n      <first>Juliet</first>\n      <last>Capulet</last>\n      <nick>JuliC</nick>\n      <email>juliet@shakespeare.lit</email>\n    </item>\n    <item jid='tybalt@shakespeare.lit'>\n      <first>Tybalt</first>\n      <last>Capulet</last>\n      <nick>ty</nick>\n      <email>tybalt@shakespeare.lit</email>\n    </item>\n  </query>\n</iq>\n```\nÊ≤°ÊúâÁªìÊûúÁöÑËØùÔºåqueryÂ∞±Ê≤°ÊúâÂ≠êÂÖÉÁ¥†\n\n```xml\n<iq type='result'\n    from='characters.shakespeare.lit'\n    to='romeo@montague.net/home'\n    id='search2'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'/>\n</iq>\n```\n\nXMPP Search \n\n`jabber:iq:search`ÂçèËÆÆÁî®Êù•Êü•ÊâæÁî®Êà∑‰ø°ÊÅØ„ÄÇ\n\nÊàë‰ª¨ÂÖàÊü•ËØ¢ÂèØ‰ª•Áî®Âì™‰∫õÂ≠óÊÆµÊü•ÊâæÁî®Êà∑\n\n```xml\n// Requesting Search Fields\n\n<iq type='get'\n    from='romeo@montague.net/home'\n    to='characters.shakespeare.lit'\n    id='search1'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'/>\n</iq>\n```\n\nservice ËøîÂõû\n\n```xml\n// Receiving Search Fields\n<iq type='result'\n    from='characters.shakespeare.lit'\n    to='romeo@montague.net/home'\n    id='search1'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'>\n    <instructions>\n      Fill in one or more fields to search\n      for any matching Jabber users.\n    </instructions>\n    <first/>\n    <last/>\n    <nick/>\n    <email/>\n  </query>\n</iq>\n```\nÊúçÂä°Á´ØËøîÂõûÔºåÂèØ‰ª•Áî®`first` `last` `nick` `email` ËøôÂá†‰∏™Â≠óÊÆµÊâæ‰∫∫„ÄÇÊé•ÁùÄÂ∞±Áî®lastÊü•‰∫∫.\n\n```xml\n// Submitting a Search Request\n\n<iq type='set'\n    from='romeo@montague.net/home'\n    to='characters.shakespeare.lit'\n    id='search2'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'>\n    <last>Capulet</last>\n  </query>\n</iq>\n```\n\nÊúçÂä°Á´ØÂèØ‰ª•ËÉΩ‰ºöËøîÂõûÂ•ΩÂ§ö‰∏™lastÂåπÈÖçÁöÑitem\n```xml\n<iq type='result'\n    from='characters.shakespeare.lit'\n    to='romeo@montague.net/home'\n    id='search2'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'>\n    <item jid='juliet@capulet.com'>\n      <first>Juliet</first>\n      <last>Capulet</last>\n      <nick>JuliC</nick>\n      <email>juliet@shakespeare.lit</email>\n    </item>\n    <item jid='tybalt@shakespeare.lit'>\n      <first>Tybalt</first>\n      <last>Capulet</last>\n      <nick>ty</nick>\n      <email>tybalt@shakespeare.lit</email>\n    </item>\n  </query>\n</iq>\n```\nÊ≤°ÊúâÁªìÊûúÁöÑËØùÔºåqueryÂ∞±Ê≤°ÊúâÂ≠êÂÖÉÁ¥†\n\n```xml\n<iq type='result'\n    from='characters.shakespeare.lit'\n    to='romeo@montague.net/home'\n    id='search2'\n    xml:lang='en'>\n  <query xmlns='jabber:iq:search'/>\n</iq>\n```\n\n# vCard \nvCardÂçèËÆÆ‰∏ªË¶ÅË¥üË¥£Áî®Êà∑‰ø°ÊÅØÂ≠òÂÇ®ÔºåÂ∞±ÂÉè‰∏™‰∫∫ÂêçÁâá„ÄÇ\n\n1. Êü•ÁúãËá™Â∑±ÁöÑvCard\nÂ¶ÇÊûúÂÆ¢Êà∑Á´ØÊÉ≥Êü•ËØ¢Ëá™Â∑±ÁöÑvCard, ÈúÄË¶ÅÂèëÈÄÅIQ-set stanzaÔºåÊ≥®ÊÑèÊ≤°ÊúâtoÂú∞ÂùÄÂì¶„ÄÇ\n\n```xml\n<iq from='stpeter@jabber.org/roundabout'\n    id='v1'\n    type='get'>\n  <vCard xmlns='vcard-temp'/>\n</iq>\n```\n\n2. ËøîÂõû‰ø°ÊÅØ\nÊé•ÁùÄÊúçÂä°Á´ØËøîÂõû‰∏ÄÂ†ÜÁöÑÁî®Êà∑‰ø°ÊÅØ\n\n```xml\n\n<iq id='v1'\n    to='stpeter@jabber.org/roundabout'\n    type='result'>\n  <vCard xmlns='vcard-temp'>\n    <FN>Peter Saint-Andre</FN>\n    <N>\n      <FAMILY>Saint-Andre</FAMILY>\n      <GIVEN>Peter</GIVEN>\n      <MIDDLE/>\n    </N>\n    <NICKNAME>stpeter</NICKNAME>\n    <URL>http://www.xmpp.org/xsf/people/stpeter.shtml</URL>\n    <BDAY>1966-08-06</BDAY>\n    <ORG>\n      <ORGNAME>XMPP Standards Foundation</ORGNAME>\n      <ORGUNIT/>\n    </ORG>\n    <TITLE>Executive Director</TITLE>\n    <ROLE>Patron Saint</ROLE>\n    <TEL><WORK/><VOICE/><NUMBER>303-308-3282</NUMBER></TEL>\n    <TEL><WORK/><FAX/><NUMBER/></TEL>\n    <TEL><WORK/><MSG/><NUMBER/></TEL>\n    <ADR>\n      <WORK/>\n      <EXTADD>Suite 600</EXTADD>\n      <STREET>1899 Wynkoop Street</STREET>\n      <LOCALITY>Denver</LOCALITY>\n      <REGION>CO</REGION>\n      <PCODE>80202</PCODE>\n      <CTRY>USA</CTRY>\n    </ADR>\n    <TEL><HOME/><VOICE/><NUMBER>303-555-1212</NUMBER></TEL>\n    <TEL><HOME/><FAX/><NUMBER/></TEL>\n    <TEL><HOME/><MSG/><NUMBER/></TEL>\n    <ADR>\n      <HOME/>\n      <EXTADD/>\n      <STREET/>\n      <LOCALITY>Denver</LOCALITY>\n      <REGION>CO</REGION>\n      <PCODE>80209</PCODE>\n      <CTRY>USA</CTRY>\n    </ADR>\n    <EMAIL><INTERNET/><PREF/><USERID>stpeter@jabber.org</USERID></EMAIL>\n    <JABBERID>stpeter@jabber.org</JABBERID>\n    <DESC>\n      More information about me is located on my\n      personal website: http://www.saint-andre.com/\n    </DESC>\n  </vCard>\n</iq>\n```\nÂ¶ÇÊûúÊ≤°ÊúâÁõ∏ÂÖ≥vCardÔºå‰ºöËøîÂõûerror\n```xml\n// item-not-found\n<iq id='v1'\n    to='stpeter@jabber.org/roundabout'\n    type='error'>\n  <vCard xmlns='vcard-temp'/>\n  <error type='cancel'>\n    <item-not-found xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n```\n\n```xml\n// empty element\n<iq id='v1'\n    to='stpeter@jabber.org/roundabout'\n    type='result'>\n  <vCard xmlns='vcard-temp'/>\n</iq>\n\n```\n\n3. Êü•ÁúãÂà´‰∫∫ÁöÑvCard\n\nÁî®IQ-get stanza, Â∏¶‰∏ätoÂú∞ÂùÄ\n\n```xml \n\n<iq from='stpeter@jabber.org/roundabout'\n    id='v3'\n    to='jer@jabber.org'\n    type='get'>\n  <vCard xmlns='vcard-temp'/>\n</iq>\n```\n\n```xml\n<iq from='jer@jabber.org'\n    to='stpeter@jabber.org/roundabout'\n    type='result'\n    id='v3'>\n  <vCard xmlns='vcard-temp'>\n    <FN>JeremieMiller</FN>\n    <N>\n      <GIVEN>Jeremie</GIVEN>\n      <FAMILY>Miller</FAMILY>\n      <MIDDLE/>\n    </N>\n    <NICKNAME>jer</NICKNAME>\n    <EMAIL><INTERNET/><PREF/><USERID>jeremie@jabber.org</USERID></EMAIL>\n    <JABBERID>jer@jabber.org</JABBERID>\n  </vCard>\n</iq>\n\n```\n\n4. Êõ¥Êñ∞vCard\n\nÂÆ¢Êà∑Á´ØÂèØ‰ª•Áî®IQ-set stanza Êõ¥Êñ∞Ëá™Â∑±ÁöÑvCard‰ø°ÊÅØ\n\n```xml\n<iq id='v2' type='set'>\n  <vCard xmlns='vcard-temp'>\n    <FN>Peter Saint-Andre</FN>\n    <N>\n      <FAMILY>Saint-Andre</FAMILY>\n      <GIVEN>Peter</GIVEN>\n      <MIDDLE/>\n    </N>\n    <NICKNAME>stpeter</NICKNAME>\n    <URL>http://www.xmpp.org/xsf/people/stpeter.shtml</URL>\n    <BDAY>1966-08-06</BDAY>\n    <ORG>\n      <ORGNAME>XMPP Standards Foundation</ORGNAME>\n      <ORGUNIT/>\n    </ORG>\n    <TITLE>Executive Director</TITLE>\n    <ROLE>Patron Saint</ROLE>\n    <TEL><WORK/><VOICE/><NUMBER>303-308-3282</NUMBER></TEL>\n    <TEL><WORK/><FAX/><NUMBER/></TEL>\n    <TEL><WORK/><MSG/><NUMBER/></TEL>\n    <ADR>\n      <WORK/>\n      <EXTADD>Suite 600</EXTADD>\n      <STREET>1899 Wynkoop Street</STREET>\n      <LOCALITY>Denver</LOCALITY>\n      <REGION>CO</REGION>\n      <PCODE>80202</PCODE>\n      <CTRY>USA</CTRY>\n    </ADR>\n    <TEL><HOME/><VOICE/><NUMBER>303-555-1212</NUMBER></TEL>\n    <TEL><HOME/><FAX/><NUMBER/></TEL>\n    <TEL><HOME/><MSG/><NUMBER/></TEL>\n    <ADR>\n      <HOME/>\n      <EXTADD/>\n      <STREET/>\n      <LOCALITY>Denver</LOCALITY>\n      <REGION>CO</REGION>\n      <PCODE>80209</PCODE>\n      <CTRY>USA</CTRY>\n    </ADR>\n    <EMAIL><INTERNET/><PREF/><USERID>stpeter@jabber.org</USERID></EMAIL>\n    <JABBERID>stpeter@jabber.org</JABBERID>\n    <DESC>\n      Check out my blog at https://stpeter.im/\n    </DESC>\n  </vCard>\n</iq>\n```\n\nÊúçÂä°Á´ØËøîÂõûÁªìÊûú\n\n```xml\n<iq id='v2'\n    to='stpeter@jabber.org/roundabout'\n    type='result'/>\n```\n\nref: https://xmpp.org/extensions/xep-0054.html#intro\nref: https://xmpp.org/extensions/xep-0055.html#intro","tags":["XMPP"],"categories":["XMPP"]},{"title":"ÂΩ±ÂìçÊõùÂÖâÁöÑ3‰∏™Âõ†Á¥†","url":"/2019/03/31/ÂΩ±ÂìçÊõùÂÖâÁöÑÂá†‰∏™Âõ†Á¥†/","content":"\n\n\n## ËøõÂÖâÈáè\n\n`ÊõùÂÖâ`‰πüÊåáÂçï‰ΩçÈù¢ÁßØ‰∏äÂÖâÂ≠êÁöÑÊï∞Èáè„ÄÇ\n\n- Â¶ÇÊûúÊàë‰ª¨Ê≤°ÊúâÊçïËé∑Ë∂≥Â§üÁöÑÂÖâÔºåÈÇ£‰πàÁõ∏ÁâáÂ∞±‰ºö`Ê¨†Êõù`:\n\n<img src=\"/img/15000130641224/15000133443588.jpg\" width = \"368\" height = \"500\" alt=\"ÂõæÁâáÂêçÁß∞\" align=center />\n\n\n- Â¶ÇÊûúÊàë‰ª¨ÊçïËé∑ÁöÑÂÖâÂ§™Â§öÔºåÂõæÂÉèÂ∞±‰ºö`ËøáÊõù`:\n\n<img src=\"/img/15000130641224/15000133832576.jpg\" width = \"368\" height = \"500\" alt=\"ÂõæÁâáÂêçÁß∞\" align=center />\n\n\n\n## ‰∏â‰∏™Ë¶ÅÁ¥†ÂèØ‰ª•ÂΩ±ÂìçÊõùÂÖâÁöÑËøõÂÖâÈáè\n\n- Âø´Èó®ÈÄüÂ∫¶\n- ÂÖâÂúà\n- ÊÑüÂÖâÂ∫¶ (ISO)\n\n![](/img/15000130641224/15006272782478.jpg)\n\nÊÉ≥Ë±°Áõ∏Êú∫ÊòØÈªëÊöóÊàøÈó¥ÔºåÊúâ‰∏™Á™óÊà∑ÔºàÂÖâÂúàÔºâÔºå ÊúâÂùóÁ™óÂ∏òÔºàÂø´Èó®ÔºâÔºåÁ™óÊà∑Ë∂äÂ§ßËøõÂÖâÈáèË∂äÂ§ßÔºåÁ™óÂ∏òÊãâÂºÄÁöÑÊó∂Èó¥Ë∂ä‰πÖ„ÄÇ Á™óÊà∑ÂØπÈù¢ÊúâÈù¢ÈïúÂ≠êÔºàÊÑüÂÆòÂÖÉ‰ª∂ÔºâÔºåÊçïËé∑ÂÖâÂ≠êÊàêÂÉè„ÄÇ\n\n## 1.Âø´Èó®ÈÄüÂ∫¶\nÂΩìÊàë‰ª¨ÊçïÊçâÂõæÁâáÊó∂ÔºåÂõæÂÉè‰º†ÊÑüÂô®ÈúÄË¶ÅÊçïÊçâ‰∏ÄÊÆµÊó∂Èó¥ÁöÑÂÖâ„ÄÇ Ëøô‰∏™Êó∂Èó¥ÊÆµÊõùÂÖâÊó∂Èó¥Ôºà‰πüÂè´Âø´Èó®ÈÄüÂ∫¶„ÄÇÁõ∏Êú∫‰∏≠‰∏ÄËà¨Áî®`1/400„ÄÅ8`ËøôÊ†∑ÁöÑÂΩ¢ÂºèË°®Á§∫ÔºâËøô‰∏™Êï∞ÂÄºË∂äÂ§ßÔºåÂø´Èó®ÂºÄÂêØÁöÑÊó∂Èó¥Ë∂äÈïøÔºåËøõÂÖ•Áõ∏Êú∫ÁöÑÂÖâÁ∫øÂ∞±Ë∂äÂ§öÔºå‰ΩÜËøêÂä®ÁöÑÁâ©‰ΩìÂæàÂèØËÉΩÊ®°Á≥ä.\n\nÁúã‰∏ãÂõæÔºö \n\n![](/img/15000130641224/15006271573170.jpg)\n\n\n## 2.ÊÑüÂÖâÂ∫¶ (ISO)\n\nÂÆÉË¢´Áî®Êù•Ë°°ÈáèÂõæÂÉè‰º†ÊÑüÂô®ÂØπÂÖâÁöÑ`ÁÅµÊïèÁ®ãÂ∫¶`Ôºå‰ª•ÂèäÂõ†Ê≠§Â∏¶Êù•ÁöÑÊõùÂÖâÂô™Èü≥„ÄÇISOË∂äÂ§ßÔºå‰º†ÊÑüÂô®Ë∂äÁÅµÊïèÔºåÊçïËé∑ÂÖâËÉΩÂäõË∂äÂº∫ÔºåÁÖßÁâáË∂ä‰∫ÆÔºå‰ΩÜÂô™ÁÇπ‰πüË∂äÂ§ö„ÄÇ\n\n![](/img/15000130641224/15006272197963.jpg)\n\n####Â∑¶Ôºö ISO 32 Âíå 1/3 ÁßíÊõùÂÖâ\n####Âè≥Ôºö ISO 1600 Âíå 1/180 Áßí\n![](/img/15000130641224/15000247388896.jpg)\n\n\n**ÂõæÂÉè‰º†ÊÑüÂô®**\nËøô‰∏™ÈÉ®ÂàÜÂ∞±Áõ∏ÂΩì‰∫éÊàë‰ª¨ÁúºÁùõÈáåÁöÑËßÜÁΩëËÜú„ÄÇÂõæÂÉè‰º†ÊÑüÂô®ÂèØ‰ª•Â∞ÜÂÖâÊàñËÄÖÂÖâÂ≠êËΩ¨Êç¢‰∏∫Áîµ‰ø°Âè∑„ÄÇ\n\n**ÂõæÂÉè‰º†ÊÑüÂô®ÊòØÁî±Êµ∑ÈáèÁöÑÁã¨‰∏™ÁöÑÂÉèÁ¥†‰º†ÊÑüÂô®‰∏≤Ëµ∑Êù•ÁöÑÂ∑®Â§ßÁü©ÂΩ¢Âå∫Âüü** Êàë‰ª¨ÂèØ‰ª•Â∞ÜÊØè‰∏™ÂÉèÁ¥†‰º†ÊÑüÂô®ÊÉ≥Ë±°Êàê‰∏Ä‰∏™Ë£ÖÁîµËç∑ÁöÑÊ°∂„ÄÇÂΩìÂÖâÂ≠êÊíûÂáªÂà∞ÂÉèÁ¥†‰º†ÊÑüÂô®ÁöÑÂÖâ‰∫åÊûÅÁÆ°Êó∂ÔºåÂÆÉ‰ª¨Â∞ÜÂú®Ëøô‰∏™ÂÉèÁ¥†ÁöÑÊ°∂‰∏≠ÁºìÊÖ¢Âú∞ÁßØÊîíÁîµËç∑„ÄÇÊúÄÂêéÔºåÊØè‰∏™ÂÉèÁ¥†ÈÉΩ‰ºöÊúâÂÆÉËá™Â∑±ÁöÑ‰∏ÄÂ∞èÊ°∂ÁîµÂ≠ê„ÄÇËøô‰∫õÁîµËç∑ÁöÑÊï∞ÈáèÊòØ‰æùËµñ‰∫éÂÖâÂ≠êÊï∞ÈáèÁöÑ -- ÊàñËÄÖËØ¥ÊòØÂÜ≥ÂÆö‰∫éÊâìÂà∞Ëøô‰∏™ÁâπÂÆöÁöÑÁÇπ‰∏äÁöÑÂÖâÁöÑÂº∫Â∫¶„ÄÇ\n\nÂõ†‰∏∫Êàë‰ª¨Êúâ‰∏Ä‰∏™ÂÉèÁ¥†‰º†ÊÑüÂô®ÁöÑ‰∫åÁª¥ÈòµÂàóÔºåÊàë‰ª¨Áé∞Âú®Â∞±Êã•ÊúâËÉΩÂ§üÂèçÂ∫îÂá∫ÊâÄÊúâËøô‰∫õ‰ΩçÁΩÆÁöÑÂÖâÁöÑÂº∫Â∫¶ÁöÑ‰∏ÄÁªÑ‰∫åÁª¥ÁîµËç∑ÈòµÂàó‰∫Ü„ÄÇ**Âú® iPhone 6 ‰∏äÔºåÊàë‰ª¨ÊúâÂÖ´Áôæ‰∏á‰∏™ËøôÊ†∑ÁöÑÂæÆÂ∞èÁöÑÂÉèÁ¥†‰º†ÊÑüÂô®**Ôºå‰ª•ÂèäÂÆÉ‰ª¨ÊâÄÂØπÂ∫îÁöÑÁîµËç∑Ê°∂„ÄÇ\n\n\n## 3.ÂÖâÂúà\n\nÁõ∏Êú∫ÁöÑÈïúÂ§¥ÁöÑÂÖâÂúà(Aperture)ÊòØÁî®Êù•Ë°°ÈáèÂà∞ËææÂõæÂÉèÊÑüÂ∫îÂô®ÁöÑÂÖâÊâÄÈÄöËøáÁöÑ`ÈÄöÂ≠îÁöÑÂ§ßÂ∞è`ÁöÑ\n\n\n#### ÊõùÂÖâÂÄº\n\nÊõùÂÖâÂÄºÔºàExposure ValueÔºåEVÔºâ‰ª£Ë°®ËÉΩÂ§üÁªôÂá∫ÂêåÊ†∑ÊõùÂÖâÁöÑÊâÄÊúâÁõ∏Êú∫ÂÖâÂúàÂø´Èó®ÁªÑÂêà\n\n![](/img/15000130641224/15026013567638.jpg)\nÂÖ∂‰∏≠NÊòØÂÖâÂúàÔºàfÂÄºÔºâÔºõtÊòØÊõùÂÖâÊó∂Èó¥ÔºàÂø´Èó®ÔºâÔºåÂçï‰ΩçÁßí„ÄÇÊõùÂÖâÂÄº0ÔºàEV0ÔºâÂØπÂ∫î‰∫éÊõùÂÖâÊó∂Èó¥‰∏∫1ÁßíËÄåÂÖâÂúà‰∏∫f/1.0ÁöÑÁªÑÂêàÊàñÂÖ∂Á≠âÊïàÁªÑÂêà„ÄÇ\n\n`ÊõùÂÖâÂÄº != ÊõùÂÖâÈáè`\n\n####ÊõùÂÖâÈáèÔºàphotometric exposureÔºâ\n\n![](/img/15000130641224/15026015278605.jpg)\nÂÖ∂‰∏≠  HÊòØÊõùÂÖâÈáèÔºå EÊòØÂΩ±ÂÉèÂπ≥Èù¢ÁöÑÁÖßÂ∫¶ÔºåËÄå  tÊòØÊõùÂÖâÊó∂Èó¥„ÄÇÁÖßÂ∫¶ EÁî±fÂÄºÊâÄÊéßÂà∂Ôºå‰ΩÜ‰πüÂèñÂÜ≥‰∫éÁéØÂ¢É‰∫ÆÂ∫¶„ÄÇ\n\n## ÂÖâÂúà‰∏éÊôØÊ∑±\n\n##### ÊôØÊ∑±\n\n![](/img/15000130641224/15026018990936.jpg)\n\n![](/img/15000130641224/15026016717518.jpg)\n\n![](/img/15000130641224/15026016975426.jpg)\n\nÂÖâÂúàÁ≥ªÊï∞= `ÈïúÂ§¥ÁÑ¶Ë∑ù/ÂÖâÂúàÂ≠îÂæÑ`ÔºõÂ∏∏Áî®ÁöÑÈïúÂ§¥ÁöÑÂÖâÂúàÊï∞Â∫èÂàó‰∏∫\n`1Ôºå 1.4Ôºå 2Ôºå 2.8Ôºå 4Ôºå 5.6Ôºå 8Ôºå 11Ôºå 16Ôºå 22Ôºå 32Ôºå 45Ôºå 64Ôºå90Ôºå128`\n\n\n\n\n","tags":["CV"]},{"title":"XMPP(3):Roster&ËÅîÁ≥ª‰∫∫","url":"/2019/03/31/Roster-ËÅîÁ≥ª‰∫∫/","content":"\n\n\n\nXMPP‰∏≠ËÅîÁ≥ª‰∫∫Ê®°ÂùóÂçèËÆÆÊòØ`jabber:iq:roster`. RosterÁõ¥Êé•ÁøªËØëÂè´Ëä±ÂêçÂÜåÔºåÂÖ∂ÂÆûÂÆÉÂ∞±ÊòØËÅîÁ≥ª‰∫∫ÂàóË°®Âï¶„ÄÇ\n\n## ÂÆ¢Êà∑Á´ØËé∑ÂèñËÅîÁ≥ª‰∫∫ÂàóË°®\n\nÊØîËæÉÁÆÄÂçïÔºåÂèëÈÄÅIQ stanzaÁªôserver. xmlns=`jabber:iq:roster`;type='get'\n\n```xml\n\n<iq from='user@server.com/balcony'\n       id='bv1bs71f'\n       type='get'>\n    <query xmlns='jabber:iq:roster'/>\n  </iq>\n\n```\nËøîÂõûÁªìÊûúÁöÑitem‰∏≠ÊúâËÅîÁ≥ª‰∫∫Jid\n\n```xml\n<iq id='bv1bs71f'\n       to='user@server.com/balcony'\n       type='result'>\n    <query xmlns='jabber:iq:roster' ver='ver7'>\n      <item jid='contact1@server.com'/>\n      <item jid='contact2@server.com'/>\n    </query>\n  </iq>\n\n```\n\n## Ê∑ªÂä†ËÅîÁ≥ª‰∫∫(Âä†Â•ΩÂèãÔºâÁöÑÊµÅÁ®ã \n\nÊñπÊ≥ïÊúâ‰∏§ÁßçÔºåÁ¨¨‰∏ÄÁßçÁî®IQ set, ËßÅ[rfc6121](https://xmpp.org/rfcs/rfc6121.html#roster-add).\n\n1. ÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÊ∑ªÂä†ËÅîÁ≥ª‰∫∫\n\nxmlnsÁî®`jabber:iq:roster`; Â∏¶‰∏äÊÉ≥Ê∑ªÂä†ÁöÑÁî®Êà∑jid. nameÂèØ‰ª•‰∏çÂ∏¶; `group`ÂàÜÁªÑÁî®„ÄÇ\n\n\n```xml\n<iq from='user@server.com/balcony' type='set' id='roster_2'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='contact@server.com'\n          name='contact'>\n      <group>Servants</group>\n    </item>\n  </query>\n</iq>\n```\n\n2.1. serverÈÄöÁü•Âêå‰∏Ä‰∏™Ë¥¶Êà∑ÂÖ≥ËÅîÁöÑÊâÄÊúâÂÆ¢Êà∑Á´Ø: ËÅîÁ≥ª‰∫∫ÂàóË°®Êõ¥Êñ∞‰∫Ü„ÄÇ\n\n```xml\n\n<iq to='user@server.com/balcony'\n    type='set'\n    id='a78b4q6ha463'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='contact@server.com'\n          name='contact'\n          subscription='none'>\n      <group>Servants</group>\n    </item>\n  </query>\n</iq>\n\n<iq to='user@server.com/chamber'\n    type='set'\n    id='a78b4q6ha464'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='contact@server.com'\n          name='contact'\n          subscription='none'>\n      <group>Servants</group>\n    </item>\n  </query>\n</iq>\n```\n\nserverÂõûÂ§çIQ stanzaÁªôËØ∑Ê±ÇÊ∑ªÂä†ËÅîÁ≥ª‰∫∫ÁöÑÂÆ¢Êà∑Á´Øbalcony\n```xml\n<iq to='user@server.com/balcony' type='result' id='roster_2'/>\n```\n\n\n##  Âà†Èô§ËÅîÁ≥ª‰∫∫\n\nÁªôserverÂèëÈÄÅ‰∏™IQ setÔºå subscription‰∏ÄÂÆöÊòØ'remove'.\n\n```xml\n\n<iq from='user@server.com/balcony' type='set' id='roster_4'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='contact@server.com' subscription='remove'/>\n  </query>\n</iq>\n\n```\n\n## Presence\n\nÂ¢ûÂà†ËÅîÁ≥ª‰∫∫ÁöÑÂè¶‰∏ÄÁßçÊñπÊ≥ïÊòØPresenceËÆ¢ÈòÖÊú∫Âà∂.Presence stanzaÂÖ∂ÂÆûÊúâ‰∏§ÁßçÂäüËÉΩÔºö\n- ÂπøÊí≠online/offlineÁä∂ÊÄÅ, [‰πãÂâçÊñáÁ´†](https://suelan.github.io/2019/03/26/XMPP-Overview/#The-Presence-Stanza)ÊèêËøá\n- ÊéßÂà∂ËÅîÁ≥ª‰∫∫ËÆ¢ÈòÖ. Â∞±ÊòØÂ¢ûÂà†Â•ΩÂèãÂäüËÉΩÂíØ\n\nÊàë‰ª¨Áî®typeÊù•Âå∫ÂàÜËøô‰∏§ÁßçÂäüËÉΩ„ÄÇtypeÊòØ`available| unavailable`Ôºå presence stanzaË°®Ëææonline/offlineÁä∂ÊÄÅ„ÄÇtypeËã•ÊòØ`subscribe | subscribed | unsubscribe| unsubscribed`ÔºåÂ∞±Ë∑üËÅîÁ≥ª‰∫∫ÊúâÂÖ≥Âï¶„ÄÇ\n\n\nsubscribtionÊúâÂõõÁßçÁä∂ÊÄÅÔºö\n- NONE :  \n- TO  :  userËÆ¢ÈòÖcontactÁöÑÁä∂ÊÄÅ\n- FROM : contactË¢´userËÆ¢ÈòÖ\n- BOTH : userË∑ücontactÁõ∏‰∫ísubcribe\n\n![flow](https://www.blikoontech.com/wp-content/uploads/2018/03/XMPP_Subscription_Flow.png)\n\nÂ¶Ç‰∏äÂõæÔºö‰∏ÄÂºÄÂßãuserË∑ücontactÊ≤°Âï•ÂÖ≥Á≥ªÔºåsubscriptionÁä∂ÊÄÅÈÉΩÊòØnone„ÄÇ Êé•ÁùÄuserÂèëÈÄÅ‰∫Ü‰∏ÄÊù°Presence stanzaÁªôcontactÔºåÊÉ≥subscribe‰ªñÁöÑÁä∂ÊÄÅ„ÄÇÂ¶Ç‰∏ãÔºö\n```xml\n// from user\n<presence to='contact@server.com' type='subscribe'/>\n```\nÁé∞Âú®userÁî®`jabber:iq:roster` Êü•ËØ¢ÊâÄÊúâËÅîÁ≥ª‰∫∫ÁöÑÊó∂ÂÄôÔºå‰ºöÂèëÁé∞itemÂ§ö‰∫Ü‰∏ÄÊù°, contactËøòÊ≤°Á°ÆËÆ§, ÊâÄ‰ª• ask='subscribe', subscribtion='none'\n\n```xml\n// user's roster\n<item ask='subscribe' subscription='none' jid='contact@server.com'/>\n```\nserverË¶ÅÂ∞ÜÊ∂àÊÅØËΩ¨ÂèëÁªôcontactÂÆ¢Êà∑Á´Ø, contactÁôªÂΩïÊó∂Ôºå‰ºöÊî∂Âà∞‰∏ÄÊù°Êù•Ëá™userÁöÑpresence stanza; typeÊòØ'subscribe'„ÄÇ Êàë‰ª¨ÂèØ‰ª•Áî®ËøôÊù°Ê∂àÊÅØÊù•ÂÅö‚ÄúÊî∂Âà∞Êù•Ëá™userÊ∑ªÂä†Â•ΩÂèãÁöÑËØ∑Ê±Ç‚ÄùËøôÊ†∑ÁöÑÂäüËÉΩ\n```xml\n<presence from='user@server.com' to='contact@server.com' type='subscribe' xmlns='jabber:client'></presence>\n```\n\nÂêåÊó∂contact/devËÆæÂ§á‰ºöÊî∂Âà∞RosterÊõ¥Êñ∞ÁöÑ‰ø°ÊÅØ. \n```xml\n<iq  from='contact@server.com' to='contact@server.com/dev' id='13a99ca5' type='result' xmlns='jabber:client'>\n    <query  xmlns='jabber:iq:roster'>\n         <item  ask='subscribe' subscription='none' jid='user@server.com'/>\n       </query>\n</iq>\n```\n#### Êé•ÂèóËØ∑Ê±Ç\nÂ¶ÇÊûúcontactÊé•ÂèóËØ∑Ê±ÇÔºå‰ªñË¶ÅÂèëÈÄÅ‰∏ÄÊù°presenceÁªôuser. typeÂÄºÊòØ'subscribed'\n\n```xml\n<presence to='user@server.com' type='subscribed'/>\n```\n\nuserËøôËæπÁöÑroster‰ºöÊõ¥Êñ∞\n```xml\n// user's roster\n<item subscription='to' jid='contact@server.com'/>\n```\nËøôÊó∂Âú®contactÁöÑrosterÂàóË°®ÈáåÔºåuserÁöÑsubscriptionÊòØfrom„ÄÇ ```xml\n// contact's roster\n<item ask='subscribe' subscription='from' jid='user@server.com'/>\n```\n\nÊé•ÁùÄcontact‰πüËØ∑Ê±ÇËÆ¢ÈòÖuser \n\n```xml\n<iq from='user@server.com/balcony' type='set' id='roster_2'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='contact@server.com'\n          name='contact'>\n      <group>Servants</group>\n    </item>\n  </query>\n</iq>\n```\n\nContactÂêåÊ†∑ÊµÅÁ®ãÂêéÔºå‰ªñ‰∏§ÁöÑsubscriptionÈÉΩÂèòÊàê‰∫Üboth„ÄÇ\n\n#### ÊãíÁªù\nÂ¶ÇÊûúcontactÊÉ≥ÊãíÁªùuserÁöÑËØ∑Ê±ÇÔºå‰πüÊòØÂèëÈÄÅpresence \n```xml\n<presence to='user@server.com' type='unsubscribed'/>\n```\nÂ¶ÇÊûúuserÊÉ≥ÂèñÊ∂àÂØπcontactÁöÑËÆ¢ÈòÖ, ÂèëÈÄÅpresence stanzaÔºåtype ÊòØunsubscribed\n```xml\n<presence to='contact@server.com' type='unsubscribed'/>\n```\n\n\nref: https://xmpp.org/rfcs/rfc3921.html#roster","tags":["XMPP"],"categories":["XMPP"]},{"title":"XMPP(2):Ê≥®ÂÜåË¥¶Êà∑","url":"/2019/03/29/XMPP-2-Ê≥®ÂÜåË¥¶Êà∑/","content":"\n\n\n## XMPPÊ≥®ÂÜåÊµÅÁ®ã\n\n\n#### 1. clientÂèëÈÄÅÊ∂àÊÅØ‰Ωì, ÂéªÊúçÂä°Á´ØÊü•ËØ¢Ê≥®ÂÜåÈúÄË¶ÅÁöÑÂ≠óÊÆµ\n\n\n```xml\n<iq type='get' id='reg1' to='localhost'>\n  <query xmlns='jabber:iq:register'/>\n</iq>\n```\n\nxmlnsÊòØ `jabber:iq:register`, typeÊòØ`get`\n\n#### 2.1. Êú™Ê≥®ÂÜåÔºöËøîÂõûÊ≥®ÂÜåÈúÄË¶ÅÁöÑÂ≠óÊÆµ\n\n```xml\n<iq type='result' id='reg1'>\n  <query xmlns='jabber:iq:register'>\n    <instructions>\n      Choose a username and password for use with this service.\n      Please also provide your email address.\n    </instructions>\n    <username/>\n    <password/>\n    <email/>\n  </query>\n</iq>\n```\n\n`<instructions/>` elementÔºöSHOULD contain an <instructions/> element (whose XML character data MAY be modified to reflect the fact that the entity is currently registered)\n\n#### 2.2. Â∑≤Ê≥®ÂÜåÔºöÊúçÂä°Á´ØÁöÑËøîÂõûÁªìÊûú\n\n```xml\n<iq  xmlns='jabber:client' xml:lang='en' to='olivia@localhost/180244803852118156522754' from='localhost' type='result' id='reg1'>\n    <query  xmlns='jabber:iq:register'>\n        <username>olivia</username>\n        <registered/>\n        <password/>\n        <instructions>Choose a username and password to register with this server</instructions>\n    </query>\n</iq>\n```\n\nhost‰ºöÊ†πÊçÆ\"from\"ÁöÑÂú∞ÂùÄÂà§Êñ≠entityÊòØÂê¶Â∑≤ÁªèÊ≥®ÂÜå‰∫ÜÔºåIQ resultÊ∂àÊÅØÊúâ‰∏Ä‰∏™Á©∫ÁöÑ`<registered/>`Ôºå Ê†áÁ§∫ËØ•entiryÂ∑≤ÁªèÊ≥®ÂÜåËøá‰∫Ü„ÄÇ\n\n#### 3.client Ê≥®ÂÜå \n\niq stanzaÁöÑtypeÊòØ`set`, xmlns`jabber:iq:register`\n\n```xml\n<iq type='set' id='reg2'>\n  <query xmlns='jabber:iq:register'>\n    <username>bill</username>\n    <password>Calliope</password>\n    <email>bard@shakespeare.lit</email>\n  </query>\n</iq>\n```\n\n#### 4.1 Ê≥®ÂÜåÊàêÂäü \n\n```xml\n<iq type='result' id='reg2'/>\n\n```\n\n#### 4.2 Ê≥®ÂÜåÂ§±Ë¥•ÔºåÂëΩÂêçÂÜ≤Á™Å\n\n```xml\n<iq type='error' id='reg2'>\n  <query xmlns='jabber:iq:register'>\n    <username>bill</username>\n    <password>m1cro$oft</password>\n    <email>billg@bigcompany.com</email>\n  </query>\n  <error code='409' type='cancel'>\n    <conflict xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n```\n\n#### 4.3 Ê∂àÊÅØ‰∏çÂÖ® ` <not-acceptable/> `\n\n```xml\n<iq type='error' id='reg2'>\n  <query xmlns='jabber:iq:register'>\n    <username>bill</username>\n    <password>Calliope</password>\n  </query>\n  <error code='406' type='modify'>\n    <not-acceptable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n```\n\n#### 4.4 ÊúçÂä°Á´ØËÆøÈóÆÊùÉÈôêÈóÆÈ¢ò\n\n```xml\n<iq  xmlns='jabber:client' xml:lang='en' to='olivia@localhost/180244803852118156522754' from='olivia@localhost' type='error' id='reg2'>\n    <query  xmlns='jabber:iq:register'>\n        <email>bard@shakespeare.lit</email>\n        <username>bill</username>\n        <password>Calliope</password>\n    </query>\n    <error  code='403' type='auth'>\n        <forbidden  xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n        <text  xmlns='urn:ietf:params:xml:ns:xmpp-stanzas' xml:lang='en'>Access denied by service policy</text>\n    </error>\n</iq>\n```\n\n#### 5.Â¶ÇÊûúÁî®Á¨¨‰∏âÊñπÊ≥®ÂÜåÁöÑÊñπÂºèÔºåÂèØËÉΩÈúÄË¶ÅË°•ÂÖÖ‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑ‰ø°ÊÅØ\n\nÂÆ¢Êà∑Á´ØÊü•ËØ¢\n\n```xml\n<iq type='get'\n    from='juliet@capulet.com/balcony'\n    to='contests.shakespeare.lit'\n    id='reg3'>\n  <query xmlns='jabber:iq:register'/>\n</iq>\n```\n\n#### 6.ÊúçÂä°Á´ØËøîÂõûÊ∂àÊÅØÔºå ÊèêÁ§∫ÈúÄË¶ÅÊèê‰æõÁöÑ‰ø°ÊÅØ\n\n```xml\n<iq type='result'\n    from='contests.shakespeare.lit'\n    to='juliet@capulet.com/balcony'\n    id='reg3'>\n  <query xmlns='jabber:iq:register'>\n    <instructions>\n      Use the enclosed form to register. If your Jabber client does not\n      support Data Forms, visit http://www.shakespeare.lit/contests.php\n    </instructions>\n    <x xmlns='jabber:x:data' type='form'>\n      <title>Contest Registration</title>\n      <instructions>\n        Please provide the following information\n        to sign up for our special contests!\n      </instructions>\n      <field type='hidden' var='FORM_TYPE'>\n        <value>jabber:iq:register</value>\n      </field>\n      <field type='text-single' label='Given Name' var='first'>\n        <required/>\n      </field>\n      <field type='text-single' label='Family Name' var='last'>\n        <required/>\n      </field>\n      <field type='text-single' label='Email Address' var='email'>\n        <required/>\n      </field>\n      <field type='list-single' label='Gender' var='x-gender'>\n        <option label='Male'><value>M</value></option>\n        <option label='Female'><value>F</value></option>\n      </field>\n    </x>\n  </query>\n</iq>\n```\n\n#### 7.ÂÆ¢Êà∑Á´ØÊèê‰æõ‰ø°ÊÅØ\n\n```xml\n<iq type='set'\n    from='juliet@capulet.com/balcony'\n    to='contests.shakespeare.lit'\n    id='reg4'>\n  <query xmlns='jabber:iq:register'>\n    <x xmlns='jabber:x:data' type='submit'>\n      <field type='hidden' var='FORM_TYPE'>\n        <value>jabber:iq:register</value>\n      </field>\n      <field type='text-single' label='Given Name' var='first'>\n        <value>Juliet</value>\n      </field>\n      <field type='text-single' label='Family Name' var='last'>\n        <value>Capulet</value>\n      </field>\n      <field type='text-single' label='Email Address' var='email'>\n        <value>juliet@capulet.com</value>\n      </field>\n      <field type='list-single' label='Gender' var='x-gender'>\n        <value>F</value>\n      </field>\n    </x>\n  </query>\n</iq>\n```\n\n## Cancellation of Existing Registration\n\n#### 1. cilent req: \n```xml\n<iq type='set' from='bill@shakespeare.lit/globe' id='unreg1'>\n  <query xmlns='jabber:iq:register'>\n    <remove/>\n  </query>\n</iq>\n```\nË∑üÊ≥®ÂÜå‰∏çÂêåÁöÑÊòØ `query` ÁöÑchildÂ§ö‰∫Ü‰∏™`<remove/>`\n\n#### 2.1. ÊàêÂäüÊ≥®ÈîÄ,server response: \n  \n```xml\n\n<iq type='result' to='bill@shakespeare.lit/globe' id='unreg1'/>\n\n```\n\n#### 2.2.Error Case  \n\n|Condition | Description  |\n| --- | --- |\n| ``<bad-request/>``|\tThe <remove/> element was not the only child element of the <query/> element.|\n|``<forbidden/>``\t| ÊùÉÈôê‰∏çÂ§ü|\n|``<not-allowed/>``\t|‰∏çÂÖÅËÆ∏Áî®Êà∑Ê≥®ÈîÄË¥¶Êà∑|\n|``<registration-required/>``|Ë¶ÅÊ≥®ÈîÄÁöÑË¥¶Êà∑Êú¨Êù•Â∞±‰∏çÂ≠òÂú®|\n|``<unexpected-request/>``\t| The host is an instant messaging server and the IQ get does not contain a 'from' address because the entity is not registered with the server.|\n\n## Áî®Êà∑‰øÆÊîπÂØÜÁ†Å\n\n#### 1. Client:\n```xml\n<iq type='set' to='shakespeare.lit' id='change1'>\n  <query xmlns='jabber:iq:register'>\n    <username>bill</username>\n    <password>newpass</password>\n  </query>\n</iq>\n\n```\n\nËøôÈáåÁöÑÂØÜÁ†ÅÊòØÊòéÊñáÔºå Ë¶ÅÁïôÊÑèÂÆ¢Êà∑Á´ØÊúçÂä°Á´ØÈÄö‰ø°ÊòØÂê¶Áî®SSLÊàñËÄÖTLSÂä†ÂØÜÔºåËÄå‰∏îÊúçÂä°Á´ØËØÅ‰π¶ÂèØ‰ø°„ÄÇ\n\n#### 2.1. ÊàêÂäü, Server: \n\n```xml\n<iq type='result' id='change1'/>\n\n```\n\n\n#### 2.2. Â§±Ë¥• Case \n\n\n|Condition | Description  |\n| --- | --- |\n| ``<bad-request/>``| requestËØ∑Ê±Ç‰ΩìÊãºÂÜôÊúâÈóÆÈ¢òÔºåÊØîÂ¶ÇÊ≤°Â∏¶username |\n|``<not-authorized/>`` | Ê≤°ÈÄöËøáserverÁöÑÂÆâÂÖ®È™åËØÅ |\n|``<not-allowed/>`` |\tserver ‰∏çÂÖÅËÆ∏|\n|``<unexpected-request/>`` | The host is an instant messaging server and the IQ set does not contain a 'from' address because the entity is not registered with the server. |\n\nÊØîÂ¶ÇÔºö\n```xml\n// Bad  request\n<iq type='error' from='shakespeare.lit' to='bill@shakespeare.lit/globe' id='change1'>\n  <error code='400' type='modify'>\n    <bad-request xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n\n// Not Authorized\n<iq type='error' from='shakespeare.lit' to='bill@shakespeare.lit/globe' id='change1'>\n  <error code='401' type='modify'>\n    <not-authorized xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n\n// Not Allowed\n<iq type='error' from='shakespeare.lit' to='bill@shakespeare.lit/globe' id='change1'>\n  <error code='405' type='cancel'>\n    <not-allowed xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n```\n\nÊúâÊó∂ÂÄôÔºåÊúçÂä°Á´ØÈúÄË¶ÅÊõ¥Â§öÁöÑ‰ø°ÊÅØÊù•ÊîπÂØÜÁ†ÅÔºåËøôÊó∂ÂÄôÂÆÉ‰ºöËøîÂõû‰ø°ÊÅØÊèêÁ§∫ÂÆ¢Êà∑Á´Ø\n\n```xml\n<iq type='error' from='shakespeare.lit' to='bill@shakespeare.lit/globe' id='change1'>\n  <query xmlns='jabber:iq:register'>\n    <x xmlns='jabber:x:data' type='form'>\n      <title>Password Change</title>\n      <instructions>Use this form to change your password.</instructions>\n      <field type='hidden' var='FORM_TYPE'>\n        <value>jabber:iq:register:changepassword</value>\n      </field>\n      <field type='text-single' label='Username' var='username'>\n        <required/>\n      </field>\n      <field type='text-private' label='Old Password' var='old_password'>\n        <required/>\n      </field>\n      <field type='text-private' label='New Password' var='password'>\n        <required/>\n      </field>\n      <field type='text-single' label='Mother&apos;s Maiden Name' var='x-mmn'>\n        <required/>\n      </field>\n    </x>\n  </query>\n  <error code='401' type='modify'>\n    <not-authorized xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>\n\n```\n\nÁÑ∂ÂêéÂÆ¢Êà∑Á´ØËøîÂõûÁõ∏ÂÖ≥‰ø°ÊÅØ\n\n```xml\n<iq type='set' from='bill@shakespeare.lit/globe' to='shakespeare.lit' id='change2'>\n  <query xmlns='jabber:iq:register'>\n    <x xmlns='jabber:x:data' type='submit'>\n      <field type='hidden' var='FORM_TYPE'>\n        <value>jabber:iq:register:changepassword</value>\n      </field>\n      <field type='text-single' var='username'>\n        <value>bill@shakespeare.lit</value>\n      </field>\n      <field type='text-private' var='old_password'>\n        <value>theglobe</value>\n      </field>\n      <field type='text-private' var='password'>\n        <value>groundlings</value>\n      </field>\n      <field type='text-single' var='x-mmn'>\n        <value>Throckmorton</value>\n      </field>\n    </x>\n  </query>\n</iq>\n```\n\nref: [XEP-0077: In-Band Registration](https://xmpp.org/extensions/xep-0077.html#usecases)\n","tags":["XMPP"],"categories":["XMPP"]},{"title":"XMPP Overview","url":"/2019/03/26/XMPP-Overview/","content":"\n\n\nË∑üÊúãÂèãÂÅö‰∏Ä‰∏™È°πÁõÆÔºåÊÉ≥Âø´ÈÄüÂºÄÂèëÔºåÈÄâ‰∫ÜXMPPÂçèËÆÆ„ÄÇÂÆÉÊòØ‰∏ÄÂ•óÈÄö‰ø°ÂçèËÆÆ„ÄÇÂàÜ‰∏∫‰∏§ÈÉ®ÂàÜÔºå[XMPP Core Services](https://xmpp.org/rfcs/rfc6121.html#A%20Sample%20Session) Âíå XMPP Extension Protocols. Ê†∏ÂøÉÁî±Âü∫Á°ÄfeatureÁªÑÊàêÔºåÊâ©Â±ïÂçèËÆÆÂ∞±ÈùûÂ∏∏‰∏∞ÂØåÔºåËÄå‰∏î‰∏ÄÁõ¥Âú®ÂèëÂ±ï„ÄÇWiki‰∏äÊúâÂº†ÂêÑÁßçIMÂçèËÆÆÁöÑÊ±áÊÄªË°®ÔºåÊé®ËçêÔºÅ\n\n- [Comparison of instant messaging protocols - Wikipedia](https://en.wikipedia.org/wiki/Comparison_of_instant_messaging_protocols)\n\n\n## XMPP Addressing \n\nËøôÊòØ‰∏ÄÂº†Client-ServerÁöÑÂõæÔºåÂõæÈáåÁöÑserver„ÄÅclientÈÉΩÈÅµÂæ™XMPPÂçèËÆÆ„ÄÇÂè´ XMPP entity. ÂÆÉ‰ª¨ÊúâÂêÑËá™ÂîØ‰∏ÄÁöÑAddress, Ê†ºÂºèÂ¶Ç'username@server.com', Âè´ JID (Jaber ID)\n [RFC 7622 - Extensible Messaging and Presence Protocol (XMPP): Address Format](https://datatracker.ietf.org/doc/rfc7622/)\n \n ![28a215f7.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/28a215f7.png)\n \nÂÖ∂‰∏≠resourceÊòØÊãøÊù•ÂÅöÂêå‰∏ÄË¥¶Âè∑Â§öÂÆ¢Êà∑Á´ØÊ†áËÆ∞ÁöÑÔºå ÊØîÂ¶ÇÂõæ‰∏≠`User1` ‰ªé pc ,phone1 Âíå phone2ÁôªÂΩïÂêå‰∏ÄË¥¶Âè∑ÔºåresourceÂàÜÂà´ÊòØ `pc`, `iphone1`,`iphone2`\n \n \n ## XMPP Client- Server Streams\n \n ÂÆ¢Êà∑Á´Ø‰∏éÊúçÂä°Á´ØÈÄöËøáÈïøÈìæÊé•ÊñπÂºèÈÄö‰ø°ÔºåÁé∞Âú®Â§öÁî®WebSocket„ÄÇÂΩìÂÆ¢Êà∑Á´ØË∑üÊúçÂä°Á´ØÊè°ÊâãÊàêÂäüÔºåÂÆÉ‰ª¨ÂºÄÂßãÁî® XML streamÈÄö‰ø°„ÄÇ\n \n ![f1565a2e.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/f1565a2e.png)\\\n\n \nXML stream ÊÄªÊòØ‰ª•  ``<stream>`` ÂºÄÂ§¥Ôºå ``</stream>`` tagÁªìÂ∞æ„ÄÇÊòØxmlÊ∂àÊÅØÁöÑÂÆπÂô®„ÄÇ\n\n```\nAn XML stream is a container for the exchange of XML elements between any two entities over a network. \nDuring the life of the stream, the entity that initiated it can send an unbounded number of XML elements over the stream, either elements used to negotiate the stream (e.g., to complete TLS negotiation or SASL negotiation) or XML stanzas. \n```\n\n‰∏ãÈù¢ÊòØclientË∑üserverÁöÑ‰∏ÄÊ¨°Ê∂àÊÅØ‰∫§‰∫íÔºå ÁªøËâ≤Êù•Ëá™clientÁöÑÔºåÈªëËâ≤Ê∂àÊÅØÊù•Ëá™server\n\n \n  ![f97e583b.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/65d38868.png)\n\n ### XML stanza\n An XML stanza is the basic unit of meaning in XMPP. A stanza is a first-level element (at depth=1 of the stream) whose element name is \"message\", \"presence\", or \"iq\" and whose qualifying namespace is 'jabber:client' or 'jabber:server'. \n \n \n ### XMPP Communication Primitives\n\nA `stanza` is the smallest piece of XML data a client can send to a server ( server send to client) in one package.\n\nxmpp‰∏≠ÔºåÊúçÂä°Á´Ø„ÄÅÂÆ¢Êà∑Êï∞ÊçÆ‰∫§Êç¢Êó∂ÔºåÊúÄÂ∞èXMLÊï∞ÊçÆÂçï‰Ωç Âè´ stanza„ÄÇÂ¶Ç‰∏äÂõæÔºåÁªøËâ≤ÁöÑÂ∞±ÊòØ‰∏Ä‰∏™stanzaÔºåÈªëËâ≤ÁöÑ‰πüÊòØ‰∏Ä‰∏™stanza„ÄÇStanzaÊúâÂá†ÁßçÁ±ªÂûã: `message`, `iq`, `presence`„ÄÇ \n\n#### The Message Stanza\n\nThe <message/> stanza is meant to be used to send data between XMPP entities.\n\n![6fe8a15e.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/6fe8a15e.png)\n\n - fromÔºöÂèëÈÄÅÊñπ\n - toÔºö Êé•Êî∂Êñπ\n - body: Ê∂àÊÅØÂÜÖÂÆπ\n - type ÊúâÂá†ÁßçÁ±ªÂûã:\n     -`<message type=‚Äùchat‚Äù/>` ( chat message stanza) \n     - `< message type=‚Äùgroupchat‚Äù/>` ( groupchat message stanza)\n     - `< message type=‚Äùerror‚Äù/>` (error message stanza)\n\n#### The Presence Stanza\n\nÁî®Êù•Ë°®Á§∫Âú®Á∫øÁä∂ÊÄÅÁöÑ\n \n\n![0fbe995b.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/0fbe995b.png)\n\n`show` Ê†áÁ≠æÈáåÂèØËÉΩ‰ºöÊúâÁöÑÂá†ÁßçÁä∂ÊÄÅ: \n`chat` : online and available for chat ; \n`away` : ÊöÇÊó∂Á¶ªÂºÄ\n`xa` : ÈïøÊó∂Èó¥Á¶ªÂºÄ\n`dnd`: ËØ∑ÂãøÊâìÊâ∞\n\nÂ¶ÇÊûú‰Ω†ÊÉ≥Áü•ÈÅìÂà´ÁöÑÁä∂ÊÄÅÔºåÈúÄË¶ÅÂÖàÂèëÊ∂àÊÅØÁªôServerÔºåsubscribeÂà´‰∫∫„ÄÇ \n\n\n#### The IQ stanza\n \n The IQ( Info/Query) stanza is used to get some information from the server ( info about the server or its registered clients) or to apply some settings to the server.\n \n Áî®Êù•Ëé∑ÂèñÊ∂àÊÅØÔºåÊàñËÄÖËØ∑Ê±ÇËÆæÁΩÆ\n  \nTypeÂ±ûÊÄß‰∏≠ÁöÑÁ±ªÂûã :get ,set ,result or error. \n- `< iq type=‚Äùget‚Äù/>` stanzas are used to get(ask) some information ( from the server). \n- `<iq type=‚Äùset‚Äù/>` stanzas are used to apply some settings to the server.When you send get/set IQ stanzas to the server ,\n- it can reply either with an `< iq type=‚Äùresult‚Äù/>` stanza when your request has been successfully processed by the server or \n- `<iq type=‚Äùerror‚Äù/>` stanza when something has gone wrong with your request.The figure below shows an IQ stanza that we send to the server and the reply we get from the server.\n\n\n![30c96f66.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/30c96f66.png)\n\n\nThe client sends an IQ get stanza to the server to request its contact list.We know it is asking for the contact list because of the `jabber:iq:roster` XML namespace.\n\nThe XMPP engine in the server is programmed to know that when a client sends `jabber:iq:roster` namespaced IQ ,it wants to retrieve its contact list.There are other `namespaces` in XMPP for other uses and you will surely come accross them in your XMPPing journey.\n\nThe server responds with a list of the JID‚Äôs contacts wraped within a `jabber:iq:roster` namespaced `<query/>`tag.\n\n\n## Êú¨Âú∞Êê≠Âª∫ Server \n\nÊàëÊê≠ÁöÑÊòØejabberd. ÂÆòÊñπÂÆâË£ÖÊïôÁ®ã: [Installing ejabberd \\| ejabberd Docs](https://docs.ejabberd.im/admin/installation/#install-on-macos)\n\n#### ÂêØÂä®ÊúçÂä°\n\n```\ncd /Applications/ejabberd-19.02\n//ÂºÄÂêØÊúçÂä°\n./bin/ejabberdctl start  \n//Áä∂ÊÄÅ\n./bin/ejabberdctl status  \n\n// help Êü•ÁúãÊõ¥Â§öÂäüËÉΩÂì¶\n./bin/ejabberdctl help \n```\n\n#### Ê≥®ÂÜåË¥¶Êà∑\n\nÊâìÂºÄ [admin È°µÈù¢](http://localhost:5280/admin/), ËôöÊãü‰∏ªÊú∫ -> localhost(ÂèØËÉΩ‰Ω†ÁöÑÂêçÂ≠ó‰∏ç‰∏ÄÊ†∑) -> Áî®Êà∑„ÄÇ Áé∞Âú®‰Ω†ÂèØ‰ª•Ëá™Â∑±ÂàõÂª∫Ë¥¶Êà∑‰∫Ü„ÄÇ\n\n![578b88b6.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/578b88b6.png)\n\n\nÂ¶ÇÊûúÊúâËá™ÂÆö‰πâÈúÄÊ±Ç,ÈÖçÁΩÆÊïôÁ®ã [Configuring ejabberd \\| ejabberd Docs](https://docs.ejabberd.im/admin/configuration/#mod-http-ws) \n \n#### ÂÆ¢Êà∑Á´ØÁé©Ëµ∑Êù•\n\nÂÆ¢Êà∑Á´ØÊúâÂæàÂ§ö[ÈÄâÊã©](https://xmpp.org/software/clients.html)Ôºå‰∏çËøáÂ§ßÂ§öÊï∞ÈÉΩÊòØÊ∏£„ÄÇÂ¶ÇÊûúÊòØWebSocketÔºåÁî®Ëøô‰∏™ [GitHub - processone/xmpp-websocket-client: Test XMPP Websocket client](https://github.com/processone/xmpp-websocket-client) Ë∞ÉËØïÂèØ‰ª•ÁúãÂà∞stanzaÔºåÊå∫Êñπ‰æøÁöÑ„ÄÇ\n\nÂ¶ÇÊûúMacÁî®Êà∑Êä•authÈóÆÈ¢òÔºåÂèØ‰ª•ÊâìÂºÄ`vim conf/ejabberd.yml`, `tls`ÈÖçÁΩÆÊàê`false`\n![5202ee46.png](/img/32c16f22-9862-45e8-b15f-1b1eceb7b30f/5202ee46.png)\n\n#### ÂÖ≥‰∫éjs lib\nÊâìÁÆóÁî®React NativeÂÜôÔºålibÈÄâ‰∫Ü [GitHub - xmppjs/xmpp.js: XMPP for JavaScript](https://github.com/xmppjs/xmpp.js) „ÄÇÂΩìÁÑ∂ WebÂ§öÁî®Ê°ÜÊû∂ Strophe.js„ÄÇËøôÂÑøÊúâ‰∏™ÁÆÄÂçïÊØîËæÉ[How do you compare to strophe.js ¬∑ Issue #217 ¬∑ xmppjs/xmpp.js ¬∑ GitHub](https://github.com/xmppjs/xmpp.js/issues/217)\n\n### ÂÖ∂‰ªñËµÑÊñô\n\n- ÁÆÄÂçï‰ªãÁªç [A friendly introduction to XMPP ‚Äì blikoon](https://www.blikoontech.com/xmpp/xmpp-a-soft-friendly-introduction)\n\n- ÂÆòÊñπÂçèËÆÆÂæàËØ¶ÁªÜÔºå‰æãÂ≠ê‰πüÂæàÂΩ¢Ë±°„ÄÇ [Extensible Messaging and Presence Protocol (XMPP): Core](https://xmpp.org/rfcs/rfc6120.html#tls)\n\n- Â¶Ç‰ΩïÈÄâÊã©Âç≥Êó∂ÈÄöËÆØÂ∫îÁî®ÁöÑÊï∞ÊçÆ‰º†ËæìÊ†ºÂºè [Â¶Ç‰ΩïÈÄâÊã©Âç≥Êó∂ÈÄöËÆØÂ∫îÁî®ÁöÑÊï∞ÊçÆ‰º†ËæìÊ†ºÂºè-ÂÖ∂ÂÆÉÂàÜ‰∫´/‰∏ìÈ°πÊäÄÊúØÂå∫ - Âç≥Êó∂ÈÄöËÆØÂºÄÂèëËÄÖÁ§æÂå∫!](http://www.52im.net/thread-276-1-1.html)\n- Âº∫ÂàóÂª∫ËÆÆÂ∞ÜProtobuf‰Ωú‰∏∫‰Ω†ÁöÑÂç≥Êó∂ÈÄöËÆØÂ∫îÁî®Êï∞ÊçÆ‰º†ËæìÊ†ºÂºè [Âº∫ÂàóÂª∫ËÆÆÂ∞ÜProtobuf‰Ωú‰∏∫‰Ω†ÁöÑÂç≥Êó∂ÈÄöËÆØÂ∫îÁî®Êï∞ÊçÆ‰º†ËæìÊ†ºÂºè-ÂÖ∂ÂÆÉÂàÜ‰∫´/‰∏ìÈ°πÊäÄÊúØÂå∫ - Âç≥Êó∂ÈÄöËÆØÂºÄÂèëËÄÖÁ§æÂå∫!](http://www.52im.net/thread-277-1-1.html) \n\n\n\n\n","tags":["XMPP"],"categories":["NetWork"]}]